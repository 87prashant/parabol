{
  "m_1n8lQh7zTd9U7Y9LdzAq-g": "mutation PromoteNewMeetingFacilitatorMutation(\n  $facilitatorUserId: ID!\n  $meetingId: ID!\n) {\n  promoteNewMeetingFacilitator(facilitatorUserId: $facilitatorUserId, meetingId: $meetingId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      defaultFacilitatorUserId\n      facilitatorUserId\n      facilitator {\n        ...StageTimerModalEndTimeSlackToggle_facilitator\n        userId\n        preferredName\n        id\n      }\n      id\n    }\n    oldFacilitator {\n      isConnected\n      preferredName\n      id\n    }\n    facilitatorStage {\n      __typename\n      readyCount\n      isViewerReady\n      id\n    }\n  }\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n",
  "m_fo7rBxXCh3j4UFFpi4UPmQ": "mutation RenameReflectTemplateMutation(\n  $templateId: ID!\n  $name: String!\n) {\n  renameReflectTemplate(templateId: $templateId, name: $name) {\n    reflectTemplate {\n      name\n      id\n    }\n  }\n}\n",
  "m_eAHMkA9NALFmDudGXzIuEA": "mutation UpdateTeamNameMutation(\n  $updatedTeam: UpdatedTeamInput!\n) {\n  updateTeamName(updatedTeam: $updatedTeam) {\n    error {\n      message\n    }\n    team {\n      name\n      id\n    }\n  }\n}\n",
  "q_uIAEzxn9m-9-s01CbLZGfg": "query NewMeetingSummaryRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    ...NewMeetingSummary_viewer\n    id\n  }\n}\n\nfragment EmailReflectionCard_reflection on RetroReflection {\n  content\n  phaseItem {\n    question\n    id\n  }\n}\n\nfragment EmailTaskCard_task on Task {\n  content\n  status\n}\n\nfragment MeetingMemberTaskSummaryList_meetingMember on MeetingMember {\n  ...SummaryAvatarHeader_meetingMember\n  ... on ActionMeetingMember {\n    tasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n    doneTasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n  }\n  ... on RetrospectiveMeetingMember {\n    tasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n  }\n}\n\nfragment MeetingMembersWithTasks_meeting on NewMeeting {\n  meetingMembers {\n    __typename\n    id\n    ...MeetingMemberTaskSummaryList_meetingMember\n    ... on ActionMeetingMember {\n      doneTasks {\n        id\n      }\n      tasks {\n        id\n      }\n    }\n    ... on RetrospectiveMeetingMember {\n      tasks {\n        id\n      }\n    }\n  }\n}\n\nfragment MeetingMembersWithoutTasks_meeting on NewMeeting {\n  meetingType\n  meetingMembers {\n    __typename\n    ...SummaryAvatarHeader_meetingMember\n    id\n    isCheckedIn\n    user {\n      preferredName\n      rasterPicture\n      id\n    }\n    ... on ActionMeetingMember {\n      tasks {\n        id\n      }\n      doneTasks {\n        id\n      }\n    }\n    ... on RetrospectiveMeetingMember {\n      tasks {\n        id\n      }\n    }\n  }\n}\n\nfragment MeetingSummaryEmail_meeting on NewMeeting {\n  id\n  ...SummarySheet_meeting\n}\n\nfragment NewMeetingSummary_viewer on User {\n  newMeeting(meetingId: $meetingId) {\n    __typename\n    ...MeetingSummaryEmail_meeting\n    id\n    team {\n      id\n      name\n    }\n    name\n  }\n}\n\nfragment QuickStats_meeting on NewMeeting {\n  __typename\n  meetingType\n  ... on RetrospectiveMeeting {\n    reflectionGroups(sortBy: stageOrder) {\n      voteCount\n      reflections {\n        id\n      }\n      id\n    }\n    meetingMembers {\n      isCheckedIn\n      tasks {\n        id\n      }\n      id\n    }\n  }\n  ... on ActionMeeting {\n    meetingMembers {\n      isCheckedIn\n      doneTasks {\n        id\n      }\n      tasks {\n        id\n      }\n      id\n    }\n    phases {\n      __typename\n      phaseType\n      ... on AgendaItemsPhase {\n        stages {\n          __typename\n          isComplete\n          id\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment RetroTopic_topic on RetroReflectionGroup {\n  title\n  voteCount\n  reflections {\n    ...EmailReflectionCard_reflection\n    id\n  }\n}\n\nfragment RetroTopics_meeting on RetrospectiveMeeting {\n  id\n  reflectionGroups(sortBy: stageOrder) {\n    id\n    ...RetroTopic_topic\n  }\n}\n\nfragment SummaryAvatarHeader_meetingMember on MeetingMember {\n  isCheckedIn\n  user {\n    rasterPicture\n    preferredName\n    id\n  }\n}\n\nfragment SummaryHeader_meeting on NewMeeting {\n  createdAt\n  name\n  team {\n    name\n    id\n  }\n}\n\nfragment SummarySheet_meeting on NewMeeting {\n  id\n  ...SummaryHeader_meeting\n  ...QuickStats_meeting\n  ...MeetingMembersWithTasks_meeting\n  ...MeetingMembersWithoutTasks_meeting\n  ...RetroTopics_meeting\n  meetingType\n  name\n  meetingNumber\n  team {\n    name\n    id\n  }\n  createdAt\n}\n\nfragment TaskSummarySection_tasks on Task {\n  ...EmailTaskCard_task\n}\n",
  "m_6Eqq52IDiNfCYVEjZ3cLIQ": "mutation CreateGitHubIssueMutation(\n  $nameWithOwner: String!\n  $taskId: ID!\n) {\n  createGitHubIssue(nameWithOwner: $nameWithOwner, taskId: $taskId) {\n    error {\n      message\n    }\n    task {\n      integration {\n        __typename\n        ... on TaskIntegrationGitHub {\n          issueNumber\n          service\n          nameWithOwner\n        }\n        ...TaskIntegrationLinkIntegrationGitHub\n        id\n      }\n      updatedAt\n      id\n    }\n  }\n}\n\nfragment TaskIntegrationLinkIntegrationGitHub on TaskIntegrationGitHub {\n  issueNumber\n  nameWithOwner\n}\n",
  "m_wZ0A1J1bncbs7db5WMF50w": "mutation ChangeTaskTeamMutation(\n  $taskId: ID!\n  $teamId: ID!\n) {\n  changeTaskTeam(taskId: $taskId, teamId: $teamId) {\n    error {\n      message\n    }\n    task {\n      id\n      content\n      createdAt\n      createdBy\n      createdByUser {\n        preferredName\n        id\n      }\n      dueDate\n      integration {\n        __typename\n        ... on TaskIntegrationGitHub {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        id\n      }\n      meetingId\n      sortOrder\n      status\n      tags\n      threadId\n      threadSource\n      threadSortOrder\n      threadParentId\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      user {\n        id\n        preferredName\n        picture\n      }\n      editors {\n        userId\n        preferredName\n      }\n    }\n    removedTaskId\n  }\n}\n",
  "q_S7XkwyKt5wgdK-yRS-D9cA": "query MeetingRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    ...MeetingSelector_viewer\n    id\n  }\n}\n\nfragment ActionMeetingAgendaItems_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on AgendaItemsStage {\n        agendaItemId\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    agendaItems {\n      id\n      content\n      teamMember {\n        picture\n        preferredName\n        id\n      }\n    }\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...MeetingAgendaCards_tasks\n          id\n          createdAt\n          sortOrder\n          threadId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeetingFirstCall_meeting on ActionMeeting {\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingLastCall_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingSidebar_meeting on ActionMeeting {\n  ...ActionSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n  team {\n    agendaItems {\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember on ActionMeetingMember {\n  user {\n    isConnected\n    id\n  }\n  teamMember {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPrompt_meeting on ActionMeeting {\n  team {\n    tasks(first: 1000) {\n      edges {\n        node {\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n  meetingMembers {\n    ...ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember\n    user {\n      isConnected\n      id\n    }\n    teamMember {\n      id\n      isSelf\n      picture\n      preferredName\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMemberId\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdates_meeting on ActionMeeting {\n  ...ActionMeetingUpdatesPrompt_meeting\n  id\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMember {\n          userId\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...TaskColumns_tasks\n          id\n          status\n          sortOrder\n          tags\n          userId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeeting_meeting on ActionMeeting {\n  ...useMeeting_meeting\n  ...ActionMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...ActionMeetingUpdates_meeting\n  ...ActionMeetingFirstCall_meeting\n  ...ActionMeetingAgendaItems_meeting\n  ...ActionMeetingLastCall_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  phases {\n    __typename\n    id\n    phaseType\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionSidebarAgendaItemsSection_meeting on ActionMeeting {\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    ... on UpdatesPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    ... on AgendaItemsPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    id\n  }\n  team {\n    ...AgendaListAndInput_team\n    id\n  }\n}\n\nfragment ActionSidebarPhaseListItemChildren_meeting on ActionMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...ActionSidebarAgendaItemsSection_meeting\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AgendaInput_team on Team {\n  id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaItem_activeMeetings on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on AgendaItemsStage {\n        agendaItemId\n        isComplete\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    id\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment AgendaListAndInput_team on Team {\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n  activeMeetings {\n    __typename\n    ...AgendaItem_activeMeetings\n    id\n  }\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment MeetingAgendaCards_tasks on Task {\n  ...NullableTask_task\n  id\n  sortOrder\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSelector_viewer on User {\n  meeting(meetingId: $meetingId) {\n    __typename\n    ...RetroMeeting_meeting\n    ...ActionMeeting_meeting\n    meetingType\n    id\n  }\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n",
  "m_XgvO4mMPih7OCggqq32ZCQ": "mutation UpdateCreditCardMutation(\n  $orgId: ID!\n  $stripeToken: ID!\n) {\n  updateCreditCard(orgId: $orgId, stripeToken: $stripeToken) {\n    error {\n      message\n    }\n    organization {\n      creditCard {\n        brand\n        last4\n        expiry\n      }\n      updatedAt\n      id\n    }\n    teamsUpdated {\n      isPaid\n      updatedAt\n      id\n    }\n  }\n}\n",
  "m__dabmuhzN90smEZKtveP6Q": "mutation UpdateDragLocationMutation(\n  $input: UpdateDragLocationInput!\n) {\n  updateDragLocation(input: $input)\n}\n",
  "q_w3wEWHKU3AfH3SfpVjsXKg": "query OrganizationsRootQuery {\n  viewer {\n    ...Organizations_viewer\n    id\n  }\n}\n\nfragment OrganizationRow_organization on Organization {\n  id\n  name\n  orgUserCount {\n    activeUserCount\n    inactiveUserCount\n  }\n  picture\n  tier\n}\n\nfragment Organizations_viewer on User {\n  organizations {\n    ...OrganizationRow_organization\n    id\n    isBillingLeader\n    orgUserCount {\n      activeUserCount\n      inactiveUserCount\n    }\n    name\n    picture\n    tier\n  }\n}\n",
  "m_3pa9Y3oyjAEqsU8TA0jqOQ": "mutation UpdateRetroMaxVotesMutation(\n  $meetingId: ID!\n  $totalVotes: Int!\n  $maxVotesPerGroup: Int!\n) {\n  updateRetroMaxVotes(meetingId: $meetingId, totalVotes: $totalVotes, maxVotesPerGroup: $maxVotesPerGroup) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on UpdateRetroMaxVotesSuccess {\n      meeting {\n        totalVotes\n        maxVotesPerGroup\n        votesRemaining\n        viewerMeetingMember {\n          votesRemaining\n          id\n        }\n        id\n      }\n    }\n  }\n}\n",
  "q_9x90f6zHiNnWQsvbien0Dg": "query OrgMembersPaginationQuery(\n  $first: Int!\n  $after: String\n  $orgId: ID!\n) {\n  viewer {\n    ...OrgMembers_viewer\n    id\n  }\n}\n\nfragment BillingLeaderActionMenu_organization on Organization {\n  orgId: id\n}\n\nfragment BillingLeaderActionMenu_organizationUser on OrganizationUser {\n  role\n  newUserUntil\n  user {\n    id\n  }\n}\n\nfragment OrgMemberRow_organization on Organization {\n  isViewerBillingLeader: isBillingLeader\n  orgId: id\n  tier\n  ...BillingLeaderActionMenu_organization\n}\n\nfragment OrgMemberRow_organizationUser on OrganizationUser {\n  user {\n    userId: id\n    email\n    inactive\n    picture\n    preferredName\n    id\n  }\n  role\n  newUserUntil\n  ...BillingLeaderActionMenu_organizationUser\n}\n\nfragment OrgMembers_viewer on User {\n  organization(orgId: $orgId) {\n    ...OrgMemberRow_organization\n    organizationUsers(first: $first, after: $after) {\n      edges {\n        cursor\n        node {\n          id\n          role\n          ...OrgMemberRow_organizationUser\n          __typename\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n    id\n  }\n}\n",
  "m_w__5eNG5Hsxx89brlL-QxQ": "mutation UpdateOrgMutation(\n  $updatedOrg: UpdateOrgInput!\n) {\n  updateOrg(updatedOrg: $updatedOrg) {\n    error {\n      message\n    }\n    organization {\n      name\n      picture\n      id\n    }\n  }\n}\n",
  "s_EnpW977zO9DOQBxiz-KEoA": "subscription MeetingSubscription(\n  $meetingId: ID!\n) {\n  meetingSubscription(meetingId: $meetingId) {\n    __typename\n    ... on AddReactjiToReactableSuccess {\n      reactable {\n        __typename\n        reactjis {\n          id\n          isViewerReactji\n          count\n        }\n        id\n      }\n    }\n    ... on AddCommentSuccess {\n      comment {\n        ...ThreadedItem_threadable\n        threadSource\n        threadId\n        threadSortOrder\n        threadParentId\n        id\n      }\n    }\n    ... on CreateReflectionPayload {\n      reflectionGroup {\n        meetingId\n        sortOrder\n        retroPhaseItemId\n        ...ReflectionGroupTitleEditor_reflectionGroup\n        ...ReflectionGroupVoting_reflectionGroup\n        reflections {\n          id\n          ...DraggableReflectionCard_reflection\n          ...DraggableReflectionCard_staticReflections\n          ...ReflectionCard_reflection\n          retroPhaseItemId\n          sortOrder\n          ...RemoteReflection_reflection\n          reflectionGroupId\n          isViewerCreator\n        }\n        id\n        viewerVoteCount\n        ...ReflectionGroupHeader_reflectionGroup\n        titleIsUserDefined\n        title\n        ...ReflectionGroup_reflectionGroup\n        tasks {\n          id\n        }\n        voteCount\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigableByFacilitator\n      }\n    }\n    ... on DeleteCommentSuccess {\n      comment {\n        id\n        isActive\n        content\n        threadParentId\n        threadId\n        threadSource\n      }\n    }\n    ... on DragDiscussionTopicPayload {\n      stage {\n        id\n        sortOrder\n      }\n      meeting {\n        __typename\n        id\n      }\n    }\n    ... on EditReflectionPayload {\n      editorId\n      isEditing\n      phaseItemId\n    }\n    ... on EndDraggingReflectionPayload {\n      meeting {\n        id\n        nextAutoGroupThreshold\n        teamId\n      }\n      reflection {\n        ...ReflectionCard_reflection\n        ...RemoteReflection_reflection\n        id\n        reflectionGroupId\n        retroPhaseItemId\n        isViewerCreator\n      }\n      reflectionGroup {\n        id\n        meetingId\n        sortOrder\n        retroPhaseItemId\n        reflections {\n          ...ReflectionCard_reflection\n          ...RemoteReflection_reflection\n          id\n          reflectionGroupId\n          retroPhaseItemId\n          isViewerCreator\n        }\n        title\n        tasks {\n          id\n        }\n        voteCount\n      }\n      oldReflectionGroup {\n        id\n        title\n      }\n      dropTargetType\n      dropTargetId\n      userId\n      remoteDrag {\n        id\n        dragUserId\n        dragUserName\n      }\n    }\n    ... on FlagReadyToAdvanceSuccess {\n      stage {\n        __typename\n        isViewerReady\n        readyCount\n        id\n      }\n    }\n    ... on NewMeetingCheckInPayload {\n      meeting {\n        __typename\n        ... on RetrospectiveMeeting {\n          votesRemaining\n        }\n        id\n      }\n      meetingMember {\n        __typename\n        isCheckedIn\n        id\n      }\n    }\n    ... on PromoteNewMeetingFacilitatorPayload {\n      meeting {\n        __typename\n        defaultFacilitatorUserId\n        facilitatorUserId\n        facilitator {\n          ...StageTimerModalEndTimeSlackToggle_facilitator\n          userId\n          preferredName\n          id\n        }\n        id\n      }\n      oldFacilitator {\n        isConnected\n        preferredName\n        id\n      }\n      facilitatorStage {\n        __typename\n        readyCount\n        isViewerReady\n        id\n      }\n    }\n    ... on RemoveReflectionPayload {\n      meeting {\n        __typename\n        id\n      }\n      reflection {\n        id\n        reflectionGroupId\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigableByFacilitator\n      }\n    }\n    ... on SetAppLocationSuccess {\n      user {\n        id\n        lastSeenAtURL\n      }\n    }\n    ... on SetPhaseFocusPayload {\n      reflectPhase {\n        focusedPhaseItemId\n        id\n      }\n    }\n    ... on SetStageTimerPayload {\n      stage {\n        __typename\n        isAsync\n        scheduledEndTime\n        timeRemaining\n        id\n      }\n    }\n    ... on StartDraggingReflectionPayload {\n      meetingId\n      reflectionId\n      teamId\n      remoteDrag {\n        id\n        dragUserId\n        dragUserName\n      }\n    }\n    ... on UpdateCommentContentSuccess {\n      comment {\n        id\n        content\n        updatedAt\n      }\n    }\n    ... on UpdateNewCheckInQuestionPayload {\n      meeting {\n        __typename\n        phases {\n          __typename\n          ... on CheckInPhase {\n            checkInQuestion\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateDragLocationPayload {\n      drag: remoteDrag {\n        id\n        clientX\n        clientY\n        clientHeight\n        clientWidth\n        sourceId\n        targetId\n        targetOffsetX\n        targetOffsetY\n      }\n    }\n    ... on UpdateReflectionContentPayload {\n      meeting {\n        __typename\n        id\n      }\n      reflection {\n        id\n        content\n        retroReflectionGroup {\n          title\n          id\n        }\n      }\n    }\n    ... on UpdateReflectionGroupTitlePayload {\n      reflectionGroup {\n        title\n        titleIsUserDefined\n        id\n      }\n    }\n    ... on UpdateRetroMaxVotesSuccess {\n      meeting {\n        totalVotes\n        maxVotesPerGroup\n        votesRemaining\n        viewerMeetingMember {\n          votesRemaining\n          id\n        }\n        id\n      }\n    }\n    ... on VoteForReflectionGroupPayload {\n      error {\n        message\n        title\n      }\n      meeting {\n        votesRemaining\n        id\n      }\n      meetingMember {\n        votesRemaining\n        id\n      }\n      reflectionGroup {\n        viewerVoteCount\n        voteCount\n        id\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "m_Pc8BKqL3c8CzSGp2vzO8iQ": "mutation PushInvitationMutation(\n  $teamId: ID!\n  $meetingId: ID\n) {\n  pushInvitation(teamId: $teamId, meetingId: $meetingId) {\n    error {\n      message\n      title\n    }\n  }\n}\n",
  "q_jwEDWwBGPkmwOT71KNToSg": "query MyDashboardTasksRootQuery {\n  viewer {\n    ...MyDashboardTasks_viewer\n    id\n  }\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment MyDashboardTasks_viewer on User {\n  ...UserColumnsContainer_viewer\n  ...UserTasksHeader_viewer\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment SelectTeamDropdown_teams on Team {\n  id\n  name\n}\n\nfragment TaskColumnAddTaskSelectTeam_teams on Team {\n  ...SelectTeamDropdown_teams\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnAddTask_teams on Team {\n  id\n  ...TaskColumnAddTaskSelectTeam_teams\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumn_teams on Team {\n  ...TaskColumnAddTask_teams\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskColumns_teams on Team {\n  ...TaskColumn_teams\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment UserColumnsContainer_viewer on User {\n  teams {\n    ...TaskColumns_teams\n    id\n  }\n  tasks(first: 1000) {\n    edges {\n      node {\n        ...TaskColumns_tasks\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserDashTeamMenu_viewer on User {\n  teams {\n    id\n    name\n  }\n}\n\nfragment UserTasksHeader_viewer on User {\n  ...UserDashTeamMenu_viewer\n}\n",
  "s_63WKFCZn6bKt1PqUqcqfdg": "subscription NotificationSubscription {\n  notificationSubscription {\n    __typename\n    ... on AddOrgPayload {\n      removedSuggestedActionId\n    }\n    ... on AddTeamPayload {\n      removedSuggestedActionId\n    }\n    ... on SetNotificationStatusPayload {\n      notification {\n        __typename\n        id\n        status\n      }\n    }\n    ... on CreateTaskPayload {\n      involvementNotification {\n        team {\n          id\n          name\n        }\n        ...NotificationTemplate_notification\n        id\n        changeAuthor {\n          picture\n          preferredName\n          id\n        }\n        involvement\n        status\n        task {\n          id\n          content\n          status\n          tags\n          user {\n            picture\n            preferredName\n            id\n          }\n        }\n      }\n    }\n    ... on EndNewMeetingPayload {\n      removedSuggestedActionId\n    }\n    ... on InviteToTeamPayload {\n      teamInvitationNotification {\n        ...TeamInvitationNotification_notification\n        id\n        type\n        team {\n          id\n          name\n        }\n        invitation {\n          inviter {\n            preferredName\n            id\n          }\n          token\n          id\n        }\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      organization {\n        id\n        name\n      }\n      kickOutNotifications {\n        id\n        type\n        team {\n          id\n          name\n          activeMeetings {\n            __typename\n            id\n          }\n        }\n        ...KickedOut_notification\n      }\n    }\n    ... on InvalidateSessionsPayload {\n      authToken\n    }\n    ... on AuthTokenPayload {\n      id\n    }\n    ... on MeetingStageTimeLimitPayload {\n      timeLimitNotification: notification {\n        ...MeetingStageTimeLimitEnd_notification\n        type\n        meeting {\n          __typename\n          id\n          name\n          team {\n            id\n            name\n          }\n        }\n        id\n      }\n    }\n    ... on StripeFailPaymentPayload {\n      paymentRejectedNotification: notification {\n        type\n        organization {\n          id\n          name\n        }\n        ...PaymentRejected_notification\n        id\n      }\n    }\n    ... on User {\n      id\n      isConnected\n      lastSeenAt\n    }\n    ... on DisconnectSocketPayload {\n      user {\n        id\n        isConnected\n      }\n    }\n    ... on AddFeatureFlagPayload {\n      user {\n        id\n        featureFlags {\n          jira\n          video\n        }\n      }\n    }\n    ... on AddNewFeaturePayload {\n      newFeature {\n        id\n        copy\n        url\n      }\n    }\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment MeetingStageTimeLimitEnd_notification on NotificationMeetingStageTimeLimitEnd {\n  ...NotificationTemplate_notification\n  id\n  meeting {\n    __typename\n    id\n    name\n    team {\n      name\n      id\n    }\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment PaymentRejected_notification on NotifyPaymentRejected {\n  ...NotificationTemplate_notification\n  organization {\n    id\n    creditCard {\n      last4\n      brand\n    }\n  }\n}\n\nfragment TeamInvitationNotification_notification on NotificationTeamInvitation {\n  ...NotificationTemplate_notification\n  id\n  invitation {\n    token\n    inviter {\n      picture\n      preferredName\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "q_5Zu7wCqPJk8YvlETrT1cCw": "query OrgMembersRootQuery(\n  $orgId: ID!\n  $first: Int!\n  $after: String\n) {\n  viewer {\n    ...OrgMembers_viewer\n    id\n  }\n}\n\nfragment BillingLeaderActionMenu_organization on Organization {\n  orgId: id\n}\n\nfragment BillingLeaderActionMenu_organizationUser on OrganizationUser {\n  role\n  newUserUntil\n  user {\n    id\n  }\n}\n\nfragment OrgMemberRow_organization on Organization {\n  isViewerBillingLeader: isBillingLeader\n  orgId: id\n  tier\n  ...BillingLeaderActionMenu_organization\n}\n\nfragment OrgMemberRow_organizationUser on OrganizationUser {\n  user {\n    userId: id\n    email\n    inactive\n    picture\n    preferredName\n    id\n  }\n  role\n  newUserUntil\n  ...BillingLeaderActionMenu_organizationUser\n}\n\nfragment OrgMembers_viewer on User {\n  organization(orgId: $orgId) {\n    ...OrgMemberRow_organization\n    organizationUsers(first: $first, after: $after) {\n      edges {\n        cursor\n        node {\n          id\n          role\n          ...OrgMemberRow_organizationUser\n          __typename\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n    id\n  }\n}\n",
  "q_M6wnj5FZc7DKQIxJEBjC0g": "query TeamArchivePaginationQuery(\n  $first: Int!\n  $after: DateTime\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamArchive_viewer\n    id\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TeamArchive_viewer on User {\n  archivedTasks(first: $first, teamId: $teamId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...NullableTask_task\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "q_0iCBsITpHtCZhBO_AAluFQ": "query OrgBillingRootQuery(\n  $orgId: ID!\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...OrgBilling_viewer\n    id\n  }\n}\n\nfragment InvoiceRow_invoice on Invoice {\n  id\n  amountDue\n  creditCard {\n    brand\n  }\n  endAt\n  paidAt\n  payUrl\n  status\n}\n\nfragment OrgBillingInvoices_viewer on User {\n  invoices(first: $first, orgId: $orgId, after: $after) {\n    edges {\n      cursor\n      node {\n        ...InvoiceRow_invoice\n        id\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment OrgBilling_viewer on User {\n  ...OrgBillingInvoices_viewer\n}\n",
  "q_bItCmOj-CiEkMrsvqJz9oQ": "query OrganizationRootQuery(\n  $orgId: ID!\n) {\n  viewer {\n    ...Organization_viewer\n    id\n  }\n}\n\nfragment ArchiveOrganizationForm_organization on Organization {\n  id\n  name\n}\n\nfragment ArchiveOrganization_organization on Organization {\n  ...ArchiveOrganizationForm_organization\n}\n\nfragment EditableOrgName_organization on Organization {\n  id\n  name\n}\n\nfragment OrgBillingCreditCardInfo_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n  creditCard {\n    brand\n    expiry\n    last4\n  }\n}\n\nfragment OrgBillingDangerZone_organization on Organization {\n  ...ArchiveOrganization_organization\n  isBillingLeader\n  tier\n}\n\nfragment OrgBillingRoot_organization on Organization {\n  ...OrgBilling_organization\n  id\n}\n\nfragment OrgBillingUpgrade_organization on Organization {\n  id\n  tier\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment OrgBilling_organization on Organization {\n  ...OrgBillingCreditCardInfo_organization\n  ...OrgBillingUpgrade_organization\n  ...OrgBillingDangerZone_organization\n  id\n}\n\nfragment OrganizationPage_organization on Organization {\n  ...OrgBillingRoot_organization\n  id\n  isBillingLeader\n  tier\n}\n\nfragment Organization_viewer on User {\n  organization(orgId: $orgId) {\n    ...EditableOrgName_organization\n    ...OrganizationPage_organization\n    orgId: id\n    isBillingLeader\n    createdAt\n    name\n    orgUserCount {\n      activeUserCount\n      inactiveUserCount\n    }\n    picture\n    creditCard {\n      brand\n      expiry\n      last4\n    }\n    periodStart\n    periodEnd\n    tier\n    id\n  }\n}\n",
  "m_oPnsPb5V2xgAV3grUbyQaQ": "mutation StartDraggingReflectionMutation(\n  $reflectionId: ID!\n  $dragId: ID!\n) {\n  startDraggingReflection(reflectionId: $reflectionId, dragId: $dragId) {\n    meetingId\n    reflectionId\n    teamId\n    remoteDrag {\n      id\n      dragUserId\n      dragUserName\n    }\n  }\n}\n",
  "m_4mvzp5Jgbs-ZvuYFsqopww": "mutation SelectRetroTemplateMutation(\n  $teamId: ID!\n  $selectedTemplateId: ID!\n) {\n  selectRetroTemplate(teamId: $teamId, selectedTemplateId: $selectedTemplateId) {\n    retroMeetingSettings {\n      id\n      selectedTemplateId\n    }\n  }\n}\n",
  "m_DFRi3LXhZCfe8hWHlcCNbw": "mutation SetAppLocationMutation(\n  $location: String\n) {\n  setAppLocation(location: $location) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n  }\n}\n",
  "q_GIbmtlUG6-hvVA8xphl8aw": "query TaskFooterUserAssigneeMenuRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...TaskFooterUserAssigneeMenu_viewer\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_viewer on User {\n  team(teamId: $teamId) {\n    teamId: id\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n      userId\n    }\n    id\n  }\n}\n",
  "q_noM58hJ4syMDiJybRgNZsA": "query DemoMeetingRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    meeting(meetingId: $meetingId) {\n      __typename\n      ...RetroMeeting_meeting\n      id\n    }\n    id\n  }\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n",
  "m_7--AkXXWMqZWly9NPl6wbw": "mutation VoteForReflectionGroupMutation(\n  $reflectionGroupId: ID!\n  $isUnvote: Boolean\n) {\n  voteForReflectionGroup(reflectionGroupId: $reflectionGroupId, isUnvote: $isUnvote) {\n    error {\n      message\n      title\n    }\n    meeting {\n      votesRemaining\n      id\n    }\n    meetingMember {\n      votesRemaining\n      id\n    }\n    reflectionGroup {\n      viewerVoteCount\n      voteCount\n      id\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "m_mAlygpWyTkHa5FWf0xHZxQ": "mutation EditReflectionMutation(\n  $phaseItemId: ID!\n  $isEditing: Boolean!\n  $meetingId: ID!\n) {\n  editReflection(phaseItemId: $phaseItemId, isEditing: $isEditing, meetingId: $meetingId) {\n    editorId\n    isEditing\n    phaseItemId\n  }\n}\n",
  "m_qf654h77t9reMrOqec4mDw": "mutation StartNewMeetingMutation(\n  $teamId: ID!\n  $meetingType: MeetingTypeEnum!\n) {\n  startNewMeeting(teamId: $teamId, meetingType: $meetingType) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      id\n      defaultFacilitatorUserId\n      name\n      meetingMembers {\n        __typename\n        user {\n          id\n          preferredName\n        }\n        id\n      }\n    }\n    team {\n      activeMeetings {\n        __typename\n        ...SelectMeetingDropdown_meetings\n        id\n        createdAt\n        facilitator {\n          id\n          preferredName\n        }\n        meetingType\n        name\n        team {\n          name\n          id\n        }\n      }\n      name\n      lastMeetingType\n      id\n    }\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n",
  "m_kiXxIHtLbTLsSqomYeYhYw": "mutation AddAtlassianAuthMutation(\n  $code: ID!\n  $teamId: ID!\n) {\n  addAtlassianAuth(code: $code, teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      ...AtlassianProviderRow_viewer\n      ...TaskFooterIntegrateMenuViewerAtlassianAuth\n      ...TaskFooterIntegrateMenuViewerSuggestedIntegrations\n      id\n    }\n  }\n}\n\nfragment AtlassianProviderRow_viewer on User {\n  atlassianAuth(teamId: $teamId) {\n    accessToken\n    id\n  }\n}\n\nfragment SuggestedIntegrationGitHubMenuItem_suggestedIntegration on SuggestedIntegrationGitHub {\n  nameWithOwner\n}\n\nfragment SuggestedIntegrationJiraMenuItem_suggestedIntegration on SuggestedIntegrationJira {\n  cloudId\n  projectKey\n  projectName\n}\n\nfragment TaskFooterIntegrateMenuList_suggestedIntegrations on SuggestedIntegrationQueryPayload {\n  hasMore\n  items {\n    __typename\n    id\n    service\n    ... on SuggestedIntegrationJira {\n      projectName\n    }\n    ... on SuggestedIntegrationGitHub {\n      nameWithOwner\n    }\n    ...SuggestedIntegrationJiraMenuItem_suggestedIntegration\n    ...SuggestedIntegrationGitHubMenuItem_suggestedIntegration\n  }\n}\n\nfragment TaskFooterIntegrateMenuViewerAtlassianAuth on User {\n  atlassianAuth(teamId: $teamId) {\n    isActive\n    id\n  }\n}\n\nfragment TaskFooterIntegrateMenuViewerSuggestedIntegrations on User {\n  suggestedIntegrations(teamId: $teamId) {\n    ...TaskFooterIntegrateMenuList_suggestedIntegrations\n  }\n}\n",
  "m_FsbT8NaRFt34uzkotV6sfA": "mutation RenameReflectTemplatePromptMutation(\n  $promptId: ID!\n  $question: String!\n) {\n  renameReflectTemplatePrompt(promptId: $promptId, question: $question) {\n    error {\n      message\n    }\n    prompt {\n      question\n      id\n    }\n  }\n}\n",
  "m_9-XDqp-GfnmsnmC25kbjxQ": "mutation RenameMeetingMutation(\n  $name: String!\n  $meetingId: ID!\n) {\n  renameMeeting(name: $name, meetingId: $meetingId) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on RenameMeetingSuccess {\n      meeting {\n        __typename\n        name\n        id\n      }\n    }\n  }\n}\n",
  "m_VS0Q0uSUim2-2fLlZtEEsQ": "mutation AddTeamMutation(\n  $newTeam: NewTeamInput!\n) {\n  addTeam(newTeam: $newTeam) {\n    error {\n      message\n    }\n    authToken\n    team {\n      id\n      name\n      ...TopBarMeetingsActiveMeetings\n      ...Team_team\n    }\n  }\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n",
  "m_OEkVQ1UpHe963u1Pt8N24w": "mutation UpgradeToProMutation(\n  $orgId: ID!\n  $stripeToken: ID!\n) {\n  upgradeToPro(orgId: $orgId, stripeToken: $stripeToken) {\n    error {\n      message\n    }\n    organization {\n      creditCard {\n        brand\n        last4\n        expiry\n      }\n      tier\n      periodEnd\n      periodStart\n      updatedAt\n      id\n    }\n    meetings {\n      __typename\n      showConversionModal\n      id\n    }\n    teams {\n      isPaid\n      tier\n      id\n    }\n  }\n}\n",
  "q_YQcjsMH21FTLrLnu9hNzVA": "query TeamArchiveRootQuery(\n  $teamId: ID!\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...TeamArchive_viewer\n    id\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TeamArchive_viewer on User {\n  archivedTasks(first: $first, teamId: $teamId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...NullableTask_task\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "q_WZ4qUvzzwzW5ZuwB3D4eKw": "query AgendaAndTasksRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...AgendaAndTasks_viewer\n    id\n  }\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AgendaAndTasks_viewer on User {\n  team(teamId: $teamId) {\n    teamId: id\n    teamName: name\n    ...AgendaListAndInput_team\n    ...TeamTasksHeaderContainer_team\n    id\n  }\n  teamMember(teamId: $teamId) {\n    hideAgenda\n    id\n  }\n  ...TeamTasksHeaderContainer_viewer\n  ...TeamColumnsContainer_viewer\n}\n\nfragment AgendaInput_team on Team {\n  id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaItem_activeMeetings on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on AgendaItemsStage {\n        agendaItemId\n        isComplete\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    id\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment AgendaListAndInput_team on Team {\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n  activeMeetings {\n    __typename\n    ...AgendaItem_activeMeetings\n    id\n  }\n}\n\nfragment DashboardAvatar_teamMember on TeamMember {\n  ...TeamMemberAvatarMenu_teamMember\n  ...LeaveTeamModal_teamMember\n  ...PromoteTeamMemberModal_teamMember\n  ...RemoveTeamMemberModal_teamMember\n  isLead\n  picture\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment DashboardAvatars_team on Team {\n  id\n  isLead\n  teamMembers(sortBy: \"preferredName\") {\n    ...AddTeamMemberAvatarButton_teamMembers\n    ...DashboardAvatar_teamMember\n    id\n  }\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment LeaveTeamModal_teamMember on TeamMember {\n  teamMemberId: id\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment PromoteTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment RemoveTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TeamColumnsContainer_viewer on User {\n  team(teamId: $teamId) {\n    id\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n    }\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...TaskColumns_tasks\n          id\n          content\n          status\n          sortOrder\n          teamId\n          userId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment TeamDashTeamMemberMenu_team on Team {\n  id\n  teamMembers(sortBy: \"preferredName\") {\n    id\n    preferredName\n  }\n}\n\nfragment TeamMemberAvatarMenu_teamMember on TeamMember {\n  isSelf\n  preferredName\n  userId\n  isLead\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment TeamTasksHeaderContainer_team on Team {\n  id\n  ...TeamTasksHeader_team\n}\n\nfragment TeamTasksHeaderContainer_viewer on User {\n  ...TeamTasksHeader_viewer\n}\n\nfragment TeamTasksHeader_team on Team {\n  ...DashboardAvatars_team\n  id\n  name\n  organization {\n    id\n    name\n  }\n  ...TeamDashTeamMemberMenu_team\n}\n\nfragment TeamTasksHeader_viewer on User {\n  teamMember(teamId: $teamId) {\n    hideAgenda\n    id\n  }\n}\n",
  "m_kIt3DROLfB1LDnLzqNImng": "mutation AddReflectTemplateMutation(\n  $teamId: ID!\n) {\n  addReflectTemplate(teamId: $teamId) {\n    reflectTemplate {\n      id\n      name\n      teamId\n      prompts {\n        description\n        question\n        sortOrder\n        id\n      }\n    }\n  }\n}\n",
  "q_NGGRN6m2G-Vd_ghkPZpuOQ": "query SnackbarQuery {\n  viewer {\n    id\n  }\n}\n",
  "m_75yNP3CqvSzhc_7rqSi1JQ": "mutation ArchiveTeamMutation(\n  $teamId: ID!\n) {\n  archiveTeam(teamId: $teamId) {\n    error {\n      message\n    }\n    removedSuggestedActionIds\n    team {\n      id\n      name\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n    notification {\n      id\n      type\n      ...TeamArchived_notification\n    }\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  ...NotificationTemplate_notification\n  id\n  archivor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "q_aVeJE2vXI4EIWQNUUjIeNQ": "query MeetingSummaryEmailRootSSRQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    newMeeting(meetingId: $meetingId) {\n      __typename\n      meetingType\n      team {\n        id\n      }\n      ...MeetingSummaryEmail_meeting\n      id\n    }\n    id\n  }\n}\n\nfragment EmailReflectionCard_reflection on RetroReflection {\n  content\n  phaseItem {\n    question\n    id\n  }\n}\n\nfragment EmailTaskCard_task on Task {\n  content\n  status\n}\n\nfragment MeetingMemberTaskSummaryList_meetingMember on MeetingMember {\n  ...SummaryAvatarHeader_meetingMember\n  ... on ActionMeetingMember {\n    tasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n    doneTasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n  }\n  ... on RetrospectiveMeetingMember {\n    tasks {\n      ...TaskSummarySection_tasks\n      id\n    }\n  }\n}\n\nfragment MeetingMembersWithTasks_meeting on NewMeeting {\n  meetingMembers {\n    __typename\n    id\n    ...MeetingMemberTaskSummaryList_meetingMember\n    ... on ActionMeetingMember {\n      doneTasks {\n        id\n      }\n      tasks {\n        id\n      }\n    }\n    ... on RetrospectiveMeetingMember {\n      tasks {\n        id\n      }\n    }\n  }\n}\n\nfragment MeetingMembersWithoutTasks_meeting on NewMeeting {\n  meetingType\n  meetingMembers {\n    __typename\n    ...SummaryAvatarHeader_meetingMember\n    id\n    isCheckedIn\n    user {\n      preferredName\n      rasterPicture\n      id\n    }\n    ... on ActionMeetingMember {\n      tasks {\n        id\n      }\n      doneTasks {\n        id\n      }\n    }\n    ... on RetrospectiveMeetingMember {\n      tasks {\n        id\n      }\n    }\n  }\n}\n\nfragment MeetingSummaryEmail_meeting on NewMeeting {\n  id\n  ...SummarySheet_meeting\n}\n\nfragment QuickStats_meeting on NewMeeting {\n  __typename\n  meetingType\n  ... on RetrospectiveMeeting {\n    reflectionGroups(sortBy: stageOrder) {\n      voteCount\n      reflections {\n        id\n      }\n      id\n    }\n    meetingMembers {\n      isCheckedIn\n      tasks {\n        id\n      }\n      id\n    }\n  }\n  ... on ActionMeeting {\n    meetingMembers {\n      isCheckedIn\n      doneTasks {\n        id\n      }\n      tasks {\n        id\n      }\n      id\n    }\n    phases {\n      __typename\n      phaseType\n      ... on AgendaItemsPhase {\n        stages {\n          __typename\n          isComplete\n          id\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment RetroTopic_topic on RetroReflectionGroup {\n  title\n  voteCount\n  reflections {\n    ...EmailReflectionCard_reflection\n    id\n  }\n}\n\nfragment RetroTopics_meeting on RetrospectiveMeeting {\n  id\n  reflectionGroups(sortBy: stageOrder) {\n    id\n    ...RetroTopic_topic\n  }\n}\n\nfragment SummaryAvatarHeader_meetingMember on MeetingMember {\n  isCheckedIn\n  user {\n    rasterPicture\n    preferredName\n    id\n  }\n}\n\nfragment SummaryHeader_meeting on NewMeeting {\n  createdAt\n  name\n  team {\n    name\n    id\n  }\n}\n\nfragment SummarySheet_meeting on NewMeeting {\n  id\n  ...SummaryHeader_meeting\n  ...QuickStats_meeting\n  ...MeetingMembersWithTasks_meeting\n  ...MeetingMembersWithoutTasks_meeting\n  ...RetroTopics_meeting\n  meetingType\n  name\n  meetingNumber\n  team {\n    name\n    id\n  }\n  createdAt\n}\n\nfragment TaskSummarySection_tasks on Task {\n  ...EmailTaskCard_task\n}\n",
  "m_U1aQY-z4QM--TwF3Ufeg5w": "mutation SetPhaseFocusMutation(\n  $meetingId: ID!\n  $focusedPhaseItemId: ID\n) {\n  setPhaseFocus(meetingId: $meetingId, focusedPhaseItemId: $focusedPhaseItemId) {\n    reflectPhase {\n      focusedPhaseItemId\n      id\n    }\n  }\n}\n",
  "m_S_WITqgZENfVFGdqlPIMzw": "mutation AddSlackAuthMutation(\n  $code: ID!\n  $teamId: ID!\n) {\n  addSlackAuth(code: $code, teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      ...SlackNotificationList_viewer\n      ...SlackProviderRow_viewer\n      teamMember(teamId: $teamId) {\n        ...StageTimerModalEndTimeSlackToggle_facilitator\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment SlackNotificationList_viewer on User {\n  ...SlackNotificationRow_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      botAccessToken\n      isActive\n      slackUserId\n      defaultTeamChannelId\n      id\n    }\n    slackNotifications {\n      channelId\n      event\n      eventType\n      id\n    }\n    id\n  }\n}\n\nfragment SlackNotificationRow_viewer on User {\n  teamMember(teamId: $teamId) {\n    slackNotifications {\n      channelId\n      event\n      id\n    }\n    id\n  }\n}\n\nfragment SlackProviderRow_viewer on User {\n  ...SlackNotificationList_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      slackTeamName\n      slackUserName\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n",
  "m_AX-JTPtu28uHrZfIfWdMUA": "mutation SetNotificationStatusMutation(\n  $notificationId: ID!\n  $status: NotificationStatusEnum!\n) {\n  setNotificationStatus(notificationId: $notificationId, status: $status) {\n    error {\n      message\n    }\n    notification {\n      __typename\n      id\n      status\n    }\n  }\n}\n",
  "m_ABpjRe1v1O6eqiTwmus6ew": "mutation InvalidateSessionsMutation {\n  invalidateSessions {\n    error {\n      message\n    }\n    authToken\n  }\n}\n",
  "m_--nBycgpG9Ok9lH6iqREgw": "mutation ReflectTemplatePromptUpdateDescriptionMutation(\n  $promptId: ID!\n  $description: String!\n) {\n  reflectTemplatePromptUpdateDescription(promptId: $promptId, description: $description) {\n    error {\n      message\n    }\n    prompt {\n      description\n      id\n    }\n  }\n}\n",
  "m_MviGERMMj1r35jYjVEwuAw": "mutation EmailPasswordResetMutation(\n  $email: ID!\n) {\n  emailPasswordReset(email: $email)\n}\n",
  "m_bzBsfwlIy6tEarGiuhiy-Q": "mutation AddAgendaItemMutation(\n  $newAgendaItem: CreateAgendaItemInput!\n) {\n  addAgendaItem(newAgendaItem: $newAgendaItem) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n      content\n      sortOrder\n      teamId\n      teamMember {\n        id\n        picture\n        preferredName\n      }\n    }\n    meeting {\n      __typename\n      phases {\n        __typename\n        phaseType\n        ... on UpdatesPhase {\n          stages {\n            id\n            isComplete\n            isNavigable\n          }\n        }\n        ... on AgendaItemsPhase {\n          stages {\n            id\n            isComplete\n            isNavigable\n          }\n        }\n        stages {\n          __typename\n          ... on AgendaItemsStage {\n            agendaItemId\n          }\n          isNavigableByFacilitator\n          id\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "q_9yn9x39J-FcrsvTgq1u40w": "query ExportToCSVQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    newMeeting(meetingId: $meetingId) {\n      __typename\n      meetingType\n      team {\n        name\n        id\n      }\n      endedAt\n      ... on ActionMeeting {\n        meetingMembers {\n          isCheckedIn\n          tasks {\n            content\n            agendaItem {\n              content\n              id\n            }\n            id\n          }\n          user {\n            preferredName\n            id\n          }\n          id\n        }\n      }\n      ... on RetrospectiveMeeting {\n        reflectionGroups(sortBy: stageOrder) {\n          reflections {\n            content\n            phaseItem {\n              question\n              id\n            }\n            id\n          }\n          tasks {\n            content\n            id\n          }\n          title\n          voteCount\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n}\n",
  "m_OGS0fy9ckloemK6WqEmPjg": "mutation DismissNewFeatureMutation {\n  dismissNewFeature {\n    error {\n      title\n    }\n  }\n}\n",
  "m_WtVvfB2-rBYUroUuRyTmlQ": "mutation AddReactjiToReactableMutation(\n  $reactableId: ID!\n  $reactableType: ReactableEnum!\n  $reactji: String!\n  $isRemove: Boolean\n) {\n  addReactjiToReactable(reactableId: $reactableId, reactableType: $reactableType, reactji: $reactji, isRemove: $isRemove) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on AddReactjiToReactableSuccess {\n      reactable {\n        __typename\n        reactjis {\n          id\n          isViewerReactji\n          count\n        }\n        id\n      }\n    }\n  }\n}\n",
  "m__0uR7qCsuhx4WAYtujvSRg": "mutation SignUpWithPasswordMutation(\n  $email: ID!\n  $password: String!\n  $invitationToken: ID\n  $segmentId: ID\n) {\n  signUpWithPassword(email: $email, password: $password, invitationToken: $invitationToken, segmentId: $segmentId) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n  acceptTeamInvitation(invitationToken: $invitationToken) {\n    authToken\n    error {\n      message\n    }\n    meetingId\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "q_TR5iw3WLqZk0We6ytWxCvw": "query TeamSettingsRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamSettings_viewer\n    id\n  }\n}\n\nfragment ArchiveTeamForm_team on Team {\n  id\n  name\n}\n\nfragment ArchiveTeam_team on Team {\n  ...ArchiveTeamForm_team\n}\n\nfragment TeamSettings_viewer on User {\n  team(teamId: $teamId) {\n    ...ArchiveTeam_team\n    isLead\n    id\n    name\n    tier\n    orgId\n    teamMembers(sortBy: \"preferredName\") {\n      teamMemberId: id\n      userId\n      isLead\n      isSelf\n      preferredName\n      id\n    }\n  }\n}\n",
  "m___F0velVJ4nSQjeROw4gjA": "mutation SetSlackNotificationMutation(\n  $slackNotificationEvents: [SlackNotificationEventEnum!]!\n  $slackChannelId: ID\n  $teamId: ID!\n) {\n  setSlackNotification(slackNotificationEvents: $slackNotificationEvents, slackChannelId: $slackChannelId, teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      ...SlackProviderRow_viewer\n      teamMember(teamId: $teamId) {\n        slackNotifications {\n          channelId\n          id\n        }\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment SlackNotificationList_viewer on User {\n  ...SlackNotificationRow_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      botAccessToken\n      isActive\n      slackUserId\n      defaultTeamChannelId\n      id\n    }\n    slackNotifications {\n      channelId\n      event\n      eventType\n      id\n    }\n    id\n  }\n}\n\nfragment SlackNotificationRow_viewer on User {\n  teamMember(teamId: $teamId) {\n    slackNotifications {\n      channelId\n      event\n      id\n    }\n    id\n  }\n}\n\nfragment SlackProviderRow_viewer on User {\n  ...SlackNotificationList_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      slackTeamName\n      slackUserName\n      id\n    }\n    id\n  }\n}\n",
  "q_L17gtHY3_dQYj1y2EY8Ijw": "query DashboardRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...Dashboard_viewer\n    id\n  }\n}\n\nfragment DashNavList_viewer on User {\n  teams {\n    id\n    isPaid\n    name\n    organization {\n      id\n      name\n    }\n  }\n}\n\nfragment DashSidebar_viewer on User {\n  ...StandardHub_viewer\n  ...DashNavList_viewer\n}\n\nfragment DashTopBar_viewer on User {\n  ...TopBarAvatar_viewer\n  ...TopBarNotifications_viewer\n  picture\n  teams {\n    ...TopBarMeetings_teams\n    id\n  }\n}\n\nfragment Dashboard_viewer on User {\n  ...MobileDashSidebar_viewer\n  ...MobileDashTopBar_viewer\n  ...DashTopBar_viewer\n  ...DashSidebar_viewer\n  overLimitCopy\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment MeetingStageTimeLimitEnd_notification on NotificationMeetingStageTimeLimitEnd {\n  ...NotificationTemplate_notification\n  id\n  meeting {\n    __typename\n    id\n    name\n    team {\n      name\n      id\n    }\n  }\n}\n\nfragment MobileDashSidebar_viewer on User {\n  ...StandardHub_viewer\n  ...DashNavList_viewer\n}\n\nfragment MobileDashTopBar_viewer on User {\n  ...TopBarNotifications_viewer\n  teams {\n    ...TopBarMeetings_teams\n    id\n  }\n}\n\nfragment NotificationDropdown_viewer on User {\n  notifications(first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        ...NotificationPicker_notification\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment NotificationPicker_notification on Notification {\n  type\n  ...KickedOut_notification\n  ...PaymentRejected_notification\n  ...TaskInvolves_notification\n  ...PromoteToBillingLeader_notification\n  ...TeamArchived_notification\n  ...TeamInvitationNotification_notification\n  ...MeetingStageTimeLimitEnd_notification\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment PaymentRejected_notification on NotifyPaymentRejected {\n  ...NotificationTemplate_notification\n  organization {\n    id\n    creditCard {\n      last4\n      brand\n    }\n  }\n}\n\nfragment PromoteToBillingLeader_notification on NotifyPromoteToOrgLeader {\n  ...NotificationTemplate_notification\n  id\n  organization {\n    id\n    name\n    picture\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment StandardHubUserMenu_viewer on User {\n  email\n  organizations {\n    id\n    tier\n  }\n}\n\nfragment StandardHub_viewer on User {\n  email\n  picture\n  preferredName\n  tier\n}\n\nfragment TaskInvolves_notification on NotifyTaskInvolves {\n  ...NotificationTemplate_notification\n  id\n  changeAuthor {\n    picture\n    preferredName\n    id\n  }\n  involvement\n  status\n  team {\n    id\n    name\n  }\n  task {\n    id\n    content\n    status\n    tags\n    user {\n      picture\n      preferredName\n      id\n    }\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  ...NotificationTemplate_notification\n  id\n  archivor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TeamInvitationNotification_notification on NotificationTeamInvitation {\n  ...NotificationTemplate_notification\n  id\n  invitation {\n    token\n    inviter {\n      picture\n      preferredName\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TopBarAvatar_viewer on User {\n  picture\n  ...StandardHubUserMenu_viewer\n}\n\nfragment TopBarMeetings_teams on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n\nfragment TopBarNotifications_viewer on User {\n  ...NotificationDropdown_viewer\n  notifications(first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
  "m_93dIwCgz7B7Yc4BKBDpLuw": "mutation SendClientSegmentEventMutation(\n  $event: SegmentClientEventEnum!\n  $options: SegmentEventTrackOptions\n) {\n  segmentEventTrack(event: $event, options: $options)\n}\n",
  "q__OCnOl2P5ApVz1wNI-FUMw": "query InvoiceRootQuery(\n  $invoiceId: ID!\n) {\n  viewer {\n    ...Invoice_viewer\n    id\n  }\n}\n\nfragment InvoiceHeader_invoice on Invoice {\n  orgName\n  billingLeaderEmails\n  picture\n  tier\n}\n\nfragment InvoiceLineItemDetails_details on InvoiceLineItemDetails {\n  id\n  amount\n  email\n  endAt\n  startAt\n}\n\nfragment InvoiceLineItem_item on InvoiceLineItem {\n  amount\n  description\n  details {\n    ...InvoiceLineItemDetails_details\n    id\n  }\n  quantity\n  type\n}\n\nfragment Invoice_viewer on User {\n  invoiceDetails(invoiceId: $invoiceId) {\n    ...InvoiceHeader_invoice\n    id\n    amountDue\n    creditCard {\n      brand\n      last4\n    }\n    coupon {\n      amountOff\n      name\n      percentOff\n    }\n    endAt\n    lines {\n      ...InvoiceLineItem_item\n      id\n    }\n    nextPeriodCharges {\n      ...NextPeriodChargesLineItem_item\n      nextPeriodEnd\n      interval\n      amount\n    }\n    payUrl\n    startingBalance\n    startAt\n    status\n    tier\n    total\n  }\n}\n\nfragment NextPeriodChargesLineItem_item on NextPeriodCharges {\n  amount\n  quantity\n  unitPrice\n}\n",
  "m_6uaDtRk10fUQ447BWIDMbg": "mutation AddReflectTemplatePromptMutation(\n  $templateId: ID!\n) {\n  addReflectTemplatePrompt(templateId: $templateId) {\n    prompt {\n      sortOrder\n      id\n      question\n      ...TemplatePromptItem_prompt\n      ...EditableTemplatePrompt_prompts\n      description\n      templateId\n    }\n  }\n}\n\nfragment EditableTemplatePrompt_prompts on RetroPhaseItem {\n  id\n  question\n}\n\nfragment TemplatePromptItem_prompt on RetroPhaseItem {\n  id\n  question\n  description\n}\n",
  "m_oVqYbjOa6mE-te7NB2neEQ": "mutation RemoveTeamMemberMutation(\n  $teamMemberId: ID!\n) {\n  removeTeamMember(teamMemberId: $teamMemberId) {\n    error {\n      message\n    }\n    updatedTasks {\n      id\n      tags\n      user {\n        id\n        preferredName\n        picture\n      }\n      userId\n    }\n    kickOutNotification {\n      id\n      type\n      team {\n        id\n        name\n        activeMeetings {\n          __typename\n          id\n        }\n      }\n      ...KickedOut_notification\n    }\n    team {\n      id\n      activeMeetings {\n        __typename\n        facilitatorStageId\n        facilitatorUserId\n        meetingMembers {\n          __typename\n          id\n        }\n        phases {\n          __typename\n          stages {\n            __typename\n            id\n            readyCount\n          }\n          id\n        }\n        id\n      }\n    }\n    teamMember {\n      id\n      userId\n    }\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n",
  "s_RPyQFE5Tawb_kbRca17g5Q": "subscription OrganizationSubscription {\n  organizationSubscription {\n    __typename\n    ... on AddOrgPayload {\n      organization {\n        id\n        isBillingLeader\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        tier\n      }\n      team {\n        id\n        name\n        ...TopBarMeetingsActiveMeetings\n        ...Team_team\n      }\n    }\n    ... on ArchiveOrganizationPayload {\n      orgId\n      teams {\n        id\n        name\n        activeMeetings {\n          __typename\n          id\n        }\n      }\n    }\n    ... on PayLaterPayload {\n      meeting {\n        __typename\n        showConversionModal\n        id\n      }\n    }\n    ... on SetOrgUserRoleAddedPayload {\n      organization {\n        id\n        isBillingLeader\n        createdAt\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        creditCard {\n          brand\n          expiry\n          last4\n        }\n        periodStart\n        periodEnd\n        tier\n      }\n      notificationsAdded {\n        __typename\n        type\n        ... on NotifyPromoteToOrgLeader {\n          ...NotificationTemplate_notification\n          id\n          organization {\n            id\n            name\n            picture\n          }\n        }\n        ... on NotifyPaymentRejected {\n          ...NotificationTemplate_notification\n          organization {\n            id\n            creditCard {\n              last4\n              brand\n            }\n          }\n        }\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on SetOrgUserRoleRemovedPayload {\n      organization {\n        id\n        isBillingLeader\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on UpdateCreditCardPayload {\n      organization {\n        creditCard {\n          brand\n          last4\n          expiry\n        }\n        updatedAt\n        id\n      }\n    }\n    ... on UpdateOrgPayload {\n      organization {\n        name\n        picture\n        id\n      }\n    }\n    ... on UpgradeToProPayload {\n      organization {\n        creditCard {\n          brand\n          last4\n          expiry\n        }\n        tier\n        periodEnd\n        periodStart\n        updatedAt\n        id\n      }\n      meetings {\n        __typename\n        showConversionModal\n        id\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      organization {\n        id\n      }\n      user {\n        id\n      }\n      organizationUserId\n    }\n  }\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n",
  "m_xbDQZp7-e0oUgXmzP3yD_g": "mutation VerifyEmailMutation(\n  $verificationToken: ID!\n  $invitationToken: ID\n) {\n  verifyEmail(verificationToken: $verificationToken) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n  acceptTeamInvitation(invitationToken: $invitationToken) {\n    authToken\n    error {\n      message\n    }\n    meetingId\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "q_3s3gLPIAPJ9cE51Of5Ibsg": "query TeamRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamContainer_viewer\n    id\n  }\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment TeamArchive_team on Team {\n  teamName: name\n  orgId\n}\n\nfragment TeamContainer_viewer on User {\n  team(teamId: $teamId) {\n    ...Team_team\n    ...TeamArchive_team\n    id\n  }\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n",
  "m_xODc1vhpSTDF8Jvr1UA5yA": "mutation UpdateNewCheckInQuestionMutation(\n  $meetingId: ID!\n  $checkInQuestion: String!\n) {\n  updateNewCheckInQuestion(meetingId: $meetingId, checkInQuestion: $checkInQuestion) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      phases {\n        __typename\n        ... on CheckInPhase {\n          checkInQuestion\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "q_udWOYF2QZFmvWQfeyJBX3w": "query TaskFooterIntegrateMenuRootQuery(\n  $teamId: ID!\n  $userId: ID!\n) {\n  viewer {\n    ...TaskFooterIntegrateMenu_viewer\n    id\n  }\n}\n\nfragment SuggestedIntegrationGitHubMenuItem_suggestedIntegration on SuggestedIntegrationGitHub {\n  nameWithOwner\n}\n\nfragment SuggestedIntegrationJiraMenuItem_suggestedIntegration on SuggestedIntegrationJira {\n  cloudId\n  projectKey\n  projectName\n}\n\nfragment TaskFooterIntegrateMenuList_suggestedIntegrations on SuggestedIntegrationQueryPayload {\n  hasMore\n  items {\n    __typename\n    id\n    service\n    ... on SuggestedIntegrationJira {\n      projectName\n    }\n    ... on SuggestedIntegrationGitHub {\n      nameWithOwner\n    }\n    ...SuggestedIntegrationJiraMenuItem_suggestedIntegration\n    ...SuggestedIntegrationGitHubMenuItem_suggestedIntegration\n  }\n}\n\nfragment TaskFooterIntegrateMenu_viewer on User {\n  id\n  userOnTeam(userId: $userId) {\n    preferredName\n    atlassianAuth(teamId: $teamId) {\n      isActive\n      id\n    }\n    suggestedIntegrations(teamId: $teamId) {\n      ...TaskFooterIntegrateMenuList_suggestedIntegrations\n    }\n    githubAuth(teamId: $teamId) {\n      isActive\n      id\n    }\n    id\n  }\n}\n",
  "m_aBx2KlHbHFsGbMmqbY6VQw": "mutation UpdateReflectionContentMutation(\n  $content: String!\n  $reflectionId: ID!\n) {\n  updateReflectionContent(content: $content, reflectionId: $reflectionId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      id\n    }\n    reflection {\n      id\n      content\n      retroReflectionGroup {\n        title\n        id\n      }\n    }\n  }\n}\n",
  "q_Cc4bo5d77DslfXBBuDZH0A": "query NewMeetingRootQuery {\n  viewer {\n    ...NewMeeting_viewer\n    id\n  }\n}\n\nfragment AddNewReflectTemplate_reflectTemplates on ReflectTemplate {\n  name\n}\n\nfragment AddTemplatePrompt_prompts on RetroPhaseItem {\n  sortOrder\n}\n\nfragment EditableTemplatePrompt_prompts on RetroPhaseItem {\n  id\n  question\n}\n\nfragment NewMeetingActionsCurrentMeetings_team on Team {\n  id\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    meetingType\n    id\n  }\n}\n\nfragment NewMeetingActions_team on Team {\n  ...NewMeetingActionsCurrentMeetings_team\n  id\n}\n\nfragment NewMeetingExistingMeetings_viewer on User {\n  id\n  teams {\n    activeMeetings {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment NewMeetingSettingsAction_team on Team {\n  actionSettings: meetingSettings(meetingType: action) {\n    __typename\n    ...NewMeetingSettingsToggleCheckIn_settings\n    id\n  }\n}\n\nfragment NewMeetingSettingsRetrospective_team on Team {\n  retroSettings: meetingSettings(meetingType: retrospective) {\n    __typename\n    ...RetroTemplatePicker_settings\n    ...NewMeetingSettingsToggleCheckIn_settings\n    id\n  }\n}\n\nfragment NewMeetingSettingsToggleCheckIn_settings on TeamMeetingSettings {\n  id\n  phaseTypes\n}\n\nfragment NewMeetingSettings_selectedTeam on Team {\n  ...NewMeetingSettingsRetrospective_team\n  ...NewMeetingSettingsAction_team\n  id\n}\n\nfragment NewMeetingTeamPicker_selectedTeam on Team {\n  name\n}\n\nfragment NewMeetingTeamPicker_teams on Team {\n  ...SelectTeamDropdown_teams\n  id\n  name\n}\n\nfragment NewMeeting_viewer on User {\n  ...NewMeetingExistingMeetings_viewer\n  teams {\n    ...NewMeetingTeamPicker_selectedTeam\n    ...NewMeetingSettings_selectedTeam\n    ...NewMeetingTeamPicker_teams\n    ...NewMeetingActions_team\n    id\n    lastMeetingType\n    name\n    tier\n  }\n}\n\nfragment ReflectTemplateModal_retroMeetingSettings on RetrospectiveMeetingSettings {\n  settingsId: id\n  reflectTemplates {\n    ...AddNewReflectTemplate_reflectTemplates\n    id\n    name\n    prompts {\n      ...TemplatePromptList_prompts\n      ...AddTemplatePrompt_prompts\n      id\n      sortOrder\n    }\n  }\n  selectedTemplateId\n  teamId\n}\n\nfragment RetroTemplateListMenu_retroMeetingSettings on RetrospectiveMeetingSettings {\n  selectedTemplateId\n  teamId\n}\n\nfragment RetroTemplatePicker_settings on RetrospectiveMeetingSettings {\n  ...ReflectTemplateModal_retroMeetingSettings\n  ...RetroTemplateListMenu_retroMeetingSettings\n  selectedTemplateId\n  reflectTemplates {\n    id\n    name\n    lastUsedAt\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment SelectTeamDropdown_teams on Team {\n  id\n  name\n}\n\nfragment TemplatePromptItem_prompt on RetroPhaseItem {\n  id\n  question\n  description\n}\n\nfragment TemplatePromptList_prompts on RetroPhaseItem {\n  id\n  sortOrder\n  question\n  ...TemplatePromptItem_prompt\n  ...EditableTemplatePrompt_prompts\n}\n",
  "m_9I1ChMEL8O1F5lreNjRorw": "mutation AcceptTeamInvitationMutation(\n  $invitationToken: ID!\n  $notificationId: ID\n) {\n  acceptTeamInvitation(invitationToken: $invitationToken, notificationId: $notificationId) {\n    authToken\n    error {\n      message\n    }\n    meetingId\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n      ...DashNavListTeam\n      ...TopBarMeetingsActiveMeetings\n      name\n      isPaid\n    }\n    teamLead {\n      suggestedActions {\n        __typename\n        ...SuggestedActionInviteYourTeam_suggestedAction\n        ...SuggestedActionTryTheDemo_suggestedAction\n        ...SuggestedActionTryRetroMeeting_suggestedAction\n        ...SuggestedActionTryActionMeeting_suggestedAction\n        ...SuggestedActionCreateNewTeam_suggestedAction\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment DashNavListTeam on Team {\n  id\n  isPaid\n  name\n  organization {\n    id\n    name\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    id\n    name\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n",
  "m_ZqBgZIlCKZlEUxxnGhwuOg": "mutation ToggleAgendaListMutation(\n  $teamId: ID!\n) {\n  toggleAgendaList(teamId: $teamId) {\n    hideAgenda\n    id\n  }\n}\n",
  "m_rD1TffBX0Y54UE46eqv2Ug": "mutation AddCommentMutation(\n  $comment: AddCommentInput!\n) {\n  addComment(comment: $comment) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on AddCommentSuccess {\n      comment {\n        ...ThreadedItem_threadable\n        threadSource\n        threadId\n        threadSortOrder\n        threadParentId\n        id\n      }\n    }\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "q_wufayMw7z9OKBlS_k3SXcQ": "query TimelineFeedListPaginationQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...TimelineFeedList_viewer\n    id\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    name\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    commentCount\n    name\n    reflectionCount\n    taskCount\n    topicCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "q_wZB0IeP31AnZgxqA_g8KXw": "query NotificationDropdownPaginationQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...NotificationDropdown_viewer\n    id\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment MeetingStageTimeLimitEnd_notification on NotificationMeetingStageTimeLimitEnd {\n  ...NotificationTemplate_notification\n  id\n  meeting {\n    __typename\n    id\n    name\n    team {\n      name\n      id\n    }\n  }\n}\n\nfragment NotificationDropdown_viewer on User {\n  notifications(first: $first, after: $after) {\n    edges {\n      node {\n        id\n        status\n        ...NotificationPicker_notification\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment NotificationPicker_notification on Notification {\n  type\n  ...KickedOut_notification\n  ...PaymentRejected_notification\n  ...TaskInvolves_notification\n  ...PromoteToBillingLeader_notification\n  ...TeamArchived_notification\n  ...TeamInvitationNotification_notification\n  ...MeetingStageTimeLimitEnd_notification\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment PaymentRejected_notification on NotifyPaymentRejected {\n  ...NotificationTemplate_notification\n  organization {\n    id\n    creditCard {\n      last4\n      brand\n    }\n  }\n}\n\nfragment PromoteToBillingLeader_notification on NotifyPromoteToOrgLeader {\n  ...NotificationTemplate_notification\n  id\n  organization {\n    id\n    name\n    picture\n  }\n}\n\nfragment TaskInvolves_notification on NotifyTaskInvolves {\n  ...NotificationTemplate_notification\n  id\n  changeAuthor {\n    picture\n    preferredName\n    id\n  }\n  involvement\n  status\n  team {\n    id\n    name\n  }\n  task {\n    id\n    content\n    status\n    tags\n    user {\n      picture\n      preferredName\n      id\n    }\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  ...NotificationTemplate_notification\n  id\n  archivor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TeamInvitationNotification_notification on NotificationTeamInvitation {\n  ...NotificationTemplate_notification\n  id\n  invitation {\n    token\n    inviter {\n      picture\n      preferredName\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "m_-IMnrS0ausAP6892e4rRXA": "mutation DenyPushInvitationMutation(\n  $teamId: ID!\n  $userId: ID!\n) {\n  denyPushInvitation(teamId: $teamId, userId: $userId) {\n    error {\n      message\n      title\n    }\n    teamId\n    userId\n  }\n}\n",
  "m_zJq9TJLks4CjMC5ea_n3fw": "mutation LoginWithGoogleMutation(\n  $code: ID!\n  $invitationToken: ID\n  $segmentId: ID\n) {\n  loginWithGoogle(code: $code, segmentId: $segmentId, invitationToken: $invitationToken) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n  acceptTeamInvitation(invitationToken: $invitationToken) {\n    authToken\n    error {\n      message\n    }\n    meetingId\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "m_EHeEfWL2zTUGQmoQWWIWHA": "mutation CreateTaskMutation(\n  $newTask: CreateTaskInput!\n) {\n  createTask(newTask: $newTask) {\n    error {\n      message\n    }\n    task {\n      id\n      content\n      createdAt\n      createdBy\n      createdByUser {\n        preferredName\n        id\n      }\n      dueDate\n      integration {\n        __typename\n        ... on TaskIntegrationGitHub {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        id\n      }\n      meetingId\n      sortOrder\n      status\n      tags\n      threadId\n      threadSource\n      threadSortOrder\n      threadParentId\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      user {\n        id\n        preferredName\n        picture\n      }\n      ...ThreadedItemReply_threadable\n      ...ThreadedItem_threadable\n      replies {\n        __typename\n        ...ThreadedRepliesList_replies\n        id\n      }\n    }\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "q_n-4memyJaDONvH-G0tcsxA": "query UserProfileRootQuery {\n  viewer {\n    ...UserProfile_viewer\n    id\n  }\n}\n\nfragment UserProfile_viewer on User {\n  preferredName\n  picture\n}\n",
  "m_M2dZkXTfpp9o9JJXhdpFPA": "mutation SetStageTimerMutation(\n  $meetingId: ID!\n  $scheduledEndTime: DateTime\n  $timeRemaining: Float\n) {\n  setStageTimer(meetingId: $meetingId, scheduledEndTime: $scheduledEndTime, timeRemaining: $timeRemaining) {\n    error {\n      message\n    }\n    stage {\n      __typename\n      isAsync\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n  }\n}\n",
  "m_e0QvziSJS0RHXQxV9mhNYg": "mutation InviteToTeamMutation(\n  $meetingId: ID\n  $teamId: ID!\n  $invitees: [Email!]!\n) {\n  inviteToTeam(meetingId: $meetingId, invitees: $invitees, teamId: $teamId) {\n    error {\n      message\n    }\n    invitees\n    removedSuggestedActionId\n    teamInvitationNotification {\n      ...TeamInvitationNotification_notification\n      id\n      type\n      team {\n        id\n        name\n      }\n      invitation {\n        inviter {\n          preferredName\n          id\n        }\n        token\n        id\n      }\n    }\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment TeamInvitationNotification_notification on NotificationTeamInvitation {\n  ...NotificationTemplate_notification\n  id\n  invitation {\n    token\n    inviter {\n      picture\n      preferredName\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "m_NBzSpmvXqwbIp7Wgi1C6Gw": "mutation NavigateMeetingMutation(\n  $meetingId: ID!\n  $completedStageId: ID\n  $facilitatorStageId: ID\n) {\n  navigateMeeting(meetingId: $meetingId, completedStageId: $completedStageId, facilitatorStageId: $facilitatorStageId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      ...SelectMeetingDropdownItem_meeting\n      id\n      facilitatorStageId\n    }\n    oldFacilitatorStage {\n      __typename\n      id\n      isComplete\n    }\n    phaseComplete {\n      reflect {\n        emptyReflectionGroupIds\n      }\n      group {\n        emptyReflectionGroupIds\n      }\n      vote {\n        meeting {\n          phases {\n            __typename\n            id\n            ... on DiscussPhase {\n              phaseType\n              stages {\n                id\n                isComplete\n                isNavigable\n                isNavigableByFacilitator\n                meetingId\n                phaseType\n                reflectionGroup {\n                  id\n                  voteCount\n                  tasks {\n                    id\n                  }\n                }\n                sortOrder\n              }\n            }\n          }\n          id\n        }\n      }\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "q_1y0gShzGayXoAVh9kq3kEg": "query getSAMLIdPQuery(\n  $email: ID!\n  $isInvited: Boolean\n) {\n  SAMLIdP(email: $email, isInvited: $isInvited)\n}\n",
  "m_fHAN5dmlmMRXJO7engxwNg": "mutation ResetPasswordMutation(\n  $newPassword: String!\n  $token: ID!\n) {\n  resetPassword(newPassword: $newPassword, token: $token) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n}\n",
  "m_P0SKVjjMm39PerGUE8WW1g": "mutation MoveReflectTemplatePromptMutation(\n  $promptId: ID!\n  $sortOrder: Float!\n) {\n  moveReflectTemplatePrompt(promptId: $promptId, sortOrder: $sortOrder) {\n    error {\n      message\n    }\n    prompt {\n      sortOrder\n      templateId\n      id\n    }\n  }\n}\n",
  "m_U9RIvgrJFz6bTMweSRCxpQ": "mutation LoginWithPasswordMutation(\n  $email: ID!\n  $password: String!\n  $invitationToken: ID\n) {\n  loginWithPassword(email: $email, password: $password) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n  acceptTeamInvitation(invitationToken: $invitationToken) {\n    authToken\n    error {\n      message\n    }\n    meetingId\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "m_-FVYTiLZ7H_49BtuPKC_vQ": "mutation SetOrgUserRoleMutation(\n  $orgId: ID!\n  $userId: ID!\n  $role: String\n) {\n  setOrgUserRole(orgId: $orgId, userId: $userId, role: $role) {\n    __typename\n    error {\n      message\n    }\n    ... on SetOrgUserRoleAddedPayload {\n      organization {\n        id\n        isBillingLeader\n        createdAt\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        creditCard {\n          brand\n          expiry\n          last4\n        }\n        periodStart\n        periodEnd\n        tier\n      }\n      notificationsAdded {\n        __typename\n        type\n        ... on NotifyPromoteToOrgLeader {\n          ...NotificationTemplate_notification\n          id\n          organization {\n            id\n            name\n            picture\n          }\n        }\n        ... on NotifyPaymentRejected {\n          ...NotificationTemplate_notification\n          organization {\n            id\n            creditCard {\n              last4\n              brand\n            }\n          }\n        }\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on SetOrgUserRoleRemovedPayload {\n      organization {\n        id\n        isBillingLeader\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n",
  "m_J_nzuZOFKCZjD-wdyVpKBg": "mutation InactivateUserMutation(\n  $userId: ID!\n) {\n  inactivateUser(userId: $userId) {\n    user {\n      inactive\n      id\n    }\n  }\n}\n",
  "m_S49qUR04vsUglh39mkb1gw": "mutation RemoveOrgUserMutation(\n  $userId: ID!\n  $orgId: ID!\n) {\n  removeOrgUser(userId: $userId, orgId: $orgId) {\n    error {\n      message\n    }\n    organization {\n      id\n    }\n    user {\n      id\n    }\n    organizationUserId\n    teamMembers {\n      id\n    }\n    teams {\n      id\n      activeMeetings {\n        __typename\n        facilitatorStageId\n        facilitatorUserId\n        meetingMembers {\n          __typename\n          id\n        }\n        phases {\n          __typename\n          stages {\n            __typename\n            id\n            readyCount\n          }\n          id\n        }\n        id\n      }\n    }\n    updatedTasks {\n      id\n      content\n      createdAt\n      createdBy\n      createdByUser {\n        preferredName\n        id\n      }\n      dueDate\n      integration {\n        __typename\n        ... on TaskIntegrationGitHub {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        id\n      }\n      meetingId\n      sortOrder\n      status\n      tags\n      threadId\n      threadSource\n      threadSortOrder\n      threadParentId\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      user {\n        id\n        preferredName\n        picture\n      }\n    }\n  }\n}\n",
  "m__1_4n7CbT10xeJOXBeZa0w": "mutation AddOrgMutation(\n  $newTeam: NewTeamInput!\n  $orgName: String!\n) {\n  addOrg(newTeam: $newTeam, orgName: $orgName) {\n    error {\n      message\n    }\n    authToken\n    organization {\n      id\n      isBillingLeader\n      name\n      orgUserCount {\n        activeUserCount\n        inactiveUserCount\n      }\n      picture\n      tier\n    }\n    team {\n      id\n      name\n      ...TopBarMeetingsActiveMeetings\n      ...Team_team\n    }\n  }\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n",
  "q_-C8JQqax5FVcSiE3Q1QStA": "query TeamInvitationRootQuery(\n  $token: ID!\n) {\n  verifiedInvitation(token: $token) {\n    ...TeamInvitation_verifiedInvitation\n  }\n}\n\nfragment TeamInvitationDialog_verifiedInvitation on VerifiedInvitationPayload {\n  ...TeamInvitationErrorAccepted_verifiedInvitation\n  ...TeamInvitationErrorExpired_verifiedInvitation\n  ...TeamInvitationGoogleSignin_verifiedInvitation\n  ...TeamInvitationGoogleCreateAccount_verifiedInvitation\n  ...TeamInvitationEmailSignin_verifiedInvitation\n  ...TeamInvitationEmailCreateAccount_verifiedInvitation\n  errorType\n  isGoogle\n  ssoURL\n  user {\n    preferredName\n    id\n  }\n}\n\nfragment TeamInvitationEmailCreateAccount_verifiedInvitation on VerifiedInvitationPayload {\n  meetingName\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationEmailSignin_verifiedInvitation on VerifiedInvitationPayload {\n  meetingName\n  user {\n    preferredName\n    id\n  }\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationErrorAccepted_verifiedInvitation on VerifiedInvitationPayload {\n  meetingId\n  meetingName\n  teamName\n  teamInvitation {\n    teamId\n    id\n  }\n}\n\nfragment TeamInvitationErrorExpired_verifiedInvitation on VerifiedInvitationPayload {\n  teamName\n  inviterName\n  inviterEmail\n}\n\nfragment TeamInvitationGoogleCreateAccount_verifiedInvitation on VerifiedInvitationPayload {\n  meetingName\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationGoogleSignin_verifiedInvitation on VerifiedInvitationPayload {\n  meetingName\n  user {\n    email\n    preferredName\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitation_verifiedInvitation on VerifiedInvitationPayload {\n  ...TeamInvitationDialog_verifiedInvitation\n  meetingType\n}\n",
  "q_rqMAgECBB0EZ7SqnNAxWKw": "query TaskFooterTeamAssigneeMenuRootQuery {\n  viewer {\n    ...TaskFooterTeamAssigneeMenu_viewer\n    id\n  }\n}\n\nfragment TaskFooterTeamAssigneeMenu_viewer on User {\n  teams {\n    id\n    name\n  }\n}\n",
  "m_fHxUnQ3cFoSKRuax8hD-ng": "mutation UpdateCommentContentMutation(\n  $commentId: ID!\n  $content: String!\n) {\n  updateCommentContent(commentId: $commentId, content: $content) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on UpdateCommentContentSuccess {\n      comment {\n        id\n        content\n        updatedAt\n      }\n    }\n  }\n}\n",
  "m_WK1yygmsCXtqYdxeu65Sew": "mutation RemoveAgendaItemMutation(\n  $agendaItemId: ID!\n) {\n  removeAgendaItem(agendaItemId: $agendaItemId) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n    }\n    meeting {\n      __typename\n      facilitatorStageId\n      phases {\n        __typename\n        phaseType\n        ... on UpdatesPhase {\n          stages {\n            id\n            isComplete\n            isNavigable\n          }\n        }\n        ... on AgendaItemsPhase {\n          stages {\n            id\n            isComplete\n            isNavigable\n          }\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "q_odRFnQHYAG19SIOcTxGUFw": "query TeamIntegrationsRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...ProviderList_viewer\n    id\n  }\n}\n\nfragment AtlassianProviderRow_viewer on User {\n  atlassianAuth(teamId: $teamId) {\n    accessToken\n    id\n  }\n}\n\nfragment GitHubProviderRow_viewer on User {\n  githubAuth(teamId: $teamId) {\n    accessToken\n    login\n    id\n  }\n}\n\nfragment ProviderList_viewer on User {\n  ...AtlassianProviderRow_viewer\n  ...GitHubProviderRow_viewer\n  ...SlackProviderRow_viewer\n}\n\nfragment SlackNotificationList_viewer on User {\n  ...SlackNotificationRow_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      botAccessToken\n      isActive\n      slackUserId\n      defaultTeamChannelId\n      id\n    }\n    slackNotifications {\n      channelId\n      event\n      eventType\n      id\n    }\n    id\n  }\n}\n\nfragment SlackNotificationRow_viewer on User {\n  teamMember(teamId: $teamId) {\n    slackNotifications {\n      channelId\n      event\n      id\n    }\n    id\n  }\n}\n\nfragment SlackProviderRow_viewer on User {\n  ...SlackNotificationList_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      slackTeamName\n      slackUserName\n      id\n    }\n    id\n  }\n}\n",
  "m_yBpm8LVCFuy_lVukMudMqw": "mutation PayLaterMutation(\n  $meetingId: ID!\n) {\n  payLater(meetingId: $meetingId) {\n    meeting {\n      __typename\n      showConversionModal\n      id\n    }\n    error {\n      message\n    }\n  }\n}\n",
  "m_2x6GtsHyPkOGX1kt9O0m7w": "mutation AddGitHubAuthMutation(\n  $code: ID!\n  $teamId: ID!\n) {\n  addGitHubAuth(code: $code, teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      ...GitHubProviderRow_viewer\n      ...TaskFooterIntegrateMenuViewerGitHubAuth\n      ...TaskFooterIntegrateMenuViewerSuggestedIntegrations\n      id\n    }\n  }\n}\n\nfragment GitHubProviderRow_viewer on User {\n  githubAuth(teamId: $teamId) {\n    accessToken\n    login\n    id\n  }\n}\n\nfragment SuggestedIntegrationGitHubMenuItem_suggestedIntegration on SuggestedIntegrationGitHub {\n  nameWithOwner\n}\n\nfragment SuggestedIntegrationJiraMenuItem_suggestedIntegration on SuggestedIntegrationJira {\n  cloudId\n  projectKey\n  projectName\n}\n\nfragment TaskFooterIntegrateMenuList_suggestedIntegrations on SuggestedIntegrationQueryPayload {\n  hasMore\n  items {\n    __typename\n    id\n    service\n    ... on SuggestedIntegrationJira {\n      projectName\n    }\n    ... on SuggestedIntegrationGitHub {\n      nameWithOwner\n    }\n    ...SuggestedIntegrationJiraMenuItem_suggestedIntegration\n    ...SuggestedIntegrationGitHubMenuItem_suggestedIntegration\n  }\n}\n\nfragment TaskFooterIntegrateMenuViewerGitHubAuth on User {\n  githubAuth(teamId: $teamId) {\n    isActive\n    id\n  }\n}\n\nfragment TaskFooterIntegrateMenuViewerSuggestedIntegrations on User {\n  suggestedIntegrations(teamId: $teamId) {\n    ...TaskFooterIntegrateMenuList_suggestedIntegrations\n  }\n}\n",
  "m_PNnsd7VMtU7L-65r4AqPYA": "mutation CreateImposterTokenMutation(\n  $userId: ID!\n) {\n  createImposterToken(userId: $userId) {\n    error {\n      message\n    }\n    authToken\n    user {\n      id\n      email\n      preferredName\n    }\n  }\n}\n",
  "q_m7AtiYIpPSk0o3OaQf5YPA": "query MyDashboardTimelineRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...MyDashboardTimeline_viewer\n    id\n  }\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment MyDashboardTimeline_viewer on User {\n  id\n  ...TimelineSuggestedAction_viewer\n  ...TimelineFeedList_viewer\n  ...TimelineRightDrawer_viewer\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    id\n    name\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    name\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    commentCount\n    name\n    reflectionCount\n    taskCount\n    topicCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineNewFeature_viewer on User {\n  picture\n  newFeature {\n    copy\n    url\n    id\n  }\n}\n\nfragment TimelinePriorityTasks_viewer on User {\n  tasks(first: 1000) {\n    __typename\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment TimelineRightDrawer_viewer on User {\n  ...TimelineNewFeature_viewer\n  ...TimelinePriorityTasks_viewer\n}\n\nfragment TimelineSuggestedAction_viewer on User {\n  suggestedActions {\n    __typename\n    ...SuggestedActionInviteYourTeam_suggestedAction\n    ...SuggestedActionTryTheDemo_suggestedAction\n    ...SuggestedActionTryRetroMeeting_suggestedAction\n    ...SuggestedActionTryActionMeeting_suggestedAction\n    ...SuggestedActionCreateNewTeam_suggestedAction\n    id\n  }\n}\n",
  "s_atBQ4JXnARZoPzfLTOMaXw": "subscription TeamSubscription {\n  teamSubscription {\n    __typename\n    ... on AcceptTeamInvitationPayload {\n      teamMember {\n        id\n        checkInOrder\n        isLead\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n        user {\n          isConnected\n          id\n        }\n      }\n      team {\n        name\n        activeMeetings {\n          __typename\n          ...MeetingSelector_meeting\n          id\n        }\n        id\n      }\n    }\n    ... on AddReflectTemplatePayload {\n      reflectTemplate {\n        id\n        name\n        teamId\n        prompts {\n          description\n          question\n          sortOrder\n          id\n        }\n      }\n    }\n    ... on AddReflectTemplatePromptPayload {\n      prompt {\n        sortOrder\n        id\n        question\n        ...TemplatePromptItem_prompt\n        ...EditableTemplatePrompt_prompts\n        description\n        templateId\n      }\n    }\n    ... on AddTeamPayload {\n      team {\n        id\n        name\n        ...TopBarMeetingsActiveMeetings\n        ...Team_team\n      }\n    }\n    ... on ArchiveTeamPayload {\n      team {\n        id\n        name\n        activeMeetings {\n          __typename\n          id\n        }\n      }\n      notification {\n        id\n        type\n        ...TeamArchived_notification\n      }\n    }\n    ... on DenyPushInvitationPayload {\n      teamId\n      userId\n    }\n    ... on EndNewMeetingPayload {\n      isKill\n      meeting {\n        __typename\n        id\n        endedAt\n        teamId\n      }\n      team {\n        id\n        activeMeetings {\n          __typename\n          id\n        }\n        agendaItems {\n          id\n        }\n      }\n      removedTaskIds\n      updatedTasks {\n        id\n        content\n        tags\n        teamId\n        threadId\n        threadSource\n        meetingId\n        updatedAt\n        userId\n      }\n    }\n    ... on MoveReflectTemplatePromptPayload {\n      prompt {\n        sortOrder\n        templateId\n        id\n      }\n    }\n    ... on NavigateMeetingPayload {\n      meeting {\n        __typename\n        ...SelectMeetingDropdownItem_meeting\n        id\n        facilitatorStageId\n      }\n      oldFacilitatorStage {\n        __typename\n        id\n        isComplete\n      }\n      phaseComplete {\n        reflect {\n          emptyReflectionGroupIds\n        }\n        group {\n          emptyReflectionGroupIds\n        }\n        vote {\n          meeting {\n            phases {\n              __typename\n              id\n              ... on DiscussPhase {\n                phaseType\n                stages {\n                  id\n                  isComplete\n                  isNavigable\n                  isNavigableByFacilitator\n                  meetingId\n                  phaseType\n                  reflectionGroup {\n                    id\n                    voteCount\n                    tasks {\n                      id\n                    }\n                  }\n                  sortOrder\n                }\n              }\n            }\n            id\n          }\n        }\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    ... on PromoteToTeamLeadPayload {\n      team {\n        isLead\n        id\n      }\n      oldLeader {\n        ...DashboardAvatar_teamMember\n        isLead\n        id\n      }\n      newLeader {\n        ...DashboardAvatar_teamMember\n        isLead\n        id\n      }\n    }\n    ... on PushInvitationPayload {\n      meetingId\n      user {\n        id\n        preferredName\n        email\n      }\n      team {\n        id\n        name\n      }\n    }\n    ... on RemoveReflectTemplatePayload {\n      reflectTemplate {\n        id\n      }\n      retroMeetingSettings {\n        selectedTemplateId\n        id\n      }\n    }\n    ... on RemoveReflectTemplatePromptPayload {\n      prompt {\n        id\n      }\n    }\n    ... on RemoveTeamMemberPayload {\n      updatedTasks {\n        id\n      }\n      kickOutNotification {\n        id\n        type\n        team {\n          id\n          name\n          activeMeetings {\n            __typename\n            id\n          }\n        }\n        ...KickedOut_notification\n      }\n      team {\n        id\n        activeMeetings {\n          __typename\n          facilitatorStageId\n          facilitatorUserId\n          meetingMembers {\n            __typename\n            id\n          }\n          phases {\n            __typename\n            stages {\n              __typename\n              id\n              readyCount\n            }\n            id\n          }\n          id\n        }\n      }\n      teamMember {\n        id\n        userId\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      teamMembers {\n        id\n      }\n      user {\n        id\n      }\n      teams {\n        id\n        activeMeetings {\n          __typename\n          facilitatorStageId\n          facilitatorUserId\n          meetingMembers {\n            __typename\n            id\n          }\n          phases {\n            __typename\n            stages {\n              __typename\n              id\n              readyCount\n            }\n            id\n          }\n          id\n        }\n      }\n    }\n    ... on RenameMeetingSuccess {\n      meeting {\n        __typename\n        name\n        id\n      }\n    }\n    ... on RenameReflectTemplatePayload {\n      reflectTemplate {\n        name\n        id\n      }\n    }\n    ... on RenameReflectTemplatePromptPayload {\n      prompt {\n        question\n        id\n      }\n    }\n    ... on SelectRetroTemplatePayload {\n      retroMeetingSettings {\n        id\n        selectedTemplateId\n      }\n    }\n    ... on SetCheckInEnabledPayload {\n      settings {\n        __typename\n        phaseTypes\n        id\n      }\n    }\n    ... on StartNewMeetingPayload {\n      meeting {\n        __typename\n        id\n        defaultFacilitatorUserId\n        name\n        meetingMembers {\n          __typename\n          user {\n            id\n            preferredName\n          }\n          id\n        }\n      }\n      team {\n        activeMeetings {\n          __typename\n          ...SelectMeetingDropdown_meetings\n          id\n          createdAt\n          facilitator {\n            id\n            preferredName\n          }\n          meetingType\n          name\n          team {\n            name\n            id\n          }\n        }\n        name\n        lastMeetingType\n        id\n      }\n    }\n    ... on UpdateCreditCardPayload {\n      teamsUpdated {\n        isPaid\n        updatedAt\n        id\n      }\n    }\n    ... on UpdateUserProfilePayload {\n      teamMembers {\n        preferredName\n        picture\n        user {\n          picture\n          preferredName\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateTeamNamePayload {\n      team {\n        name\n        id\n      }\n    }\n    ... on UpgradeToProPayload {\n      teams {\n        isPaid\n        tier\n        id\n      }\n    }\n    ... on AddAgendaItemPayload {\n      agendaItem {\n        id\n        content\n        sortOrder\n        teamId\n        teamMember {\n          id\n          picture\n          preferredName\n        }\n      }\n      meeting {\n        __typename\n        phases {\n          __typename\n          phaseType\n          ... on UpdatesPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          ... on AgendaItemsPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          stages {\n            __typename\n            ... on AgendaItemsStage {\n              agendaItemId\n            }\n            isNavigableByFacilitator\n            id\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on RemoveAgendaItemPayload {\n      agendaItem {\n        id\n      }\n      meeting {\n        __typename\n        facilitatorStageId\n        phases {\n          __typename\n          phaseType\n          ... on UpdatesPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          ... on AgendaItemsPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateAgendaItemPayload {\n      agendaItem {\n        id\n        teamId\n        sortOrder\n      }\n      meetingId\n    }\n  }\n}\n\nfragment ActionMeetingAgendaItems_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on AgendaItemsStage {\n        agendaItemId\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    agendaItems {\n      id\n      content\n      teamMember {\n        picture\n        preferredName\n        id\n      }\n    }\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...MeetingAgendaCards_tasks\n          id\n          createdAt\n          sortOrder\n          threadId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeetingFirstCall_meeting on ActionMeeting {\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingLastCall_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingSidebar_meeting on ActionMeeting {\n  ...ActionSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n  team {\n    agendaItems {\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember on ActionMeetingMember {\n  user {\n    isConnected\n    id\n  }\n  teamMember {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPrompt_meeting on ActionMeeting {\n  team {\n    tasks(first: 1000) {\n      edges {\n        node {\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n  meetingMembers {\n    ...ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember\n    user {\n      isConnected\n      id\n    }\n    teamMember {\n      id\n      isSelf\n      picture\n      preferredName\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMemberId\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdates_meeting on ActionMeeting {\n  ...ActionMeetingUpdatesPrompt_meeting\n  id\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMember {\n          userId\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...TaskColumns_tasks\n          id\n          status\n          sortOrder\n          tags\n          userId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeeting_meeting on ActionMeeting {\n  ...useMeeting_meeting\n  ...ActionMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...ActionMeetingUpdates_meeting\n  ...ActionMeetingFirstCall_meeting\n  ...ActionMeetingAgendaItems_meeting\n  ...ActionMeetingLastCall_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  phases {\n    __typename\n    id\n    phaseType\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionSidebarAgendaItemsSection_meeting on ActionMeeting {\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    ... on UpdatesPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    ... on AgendaItemsPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    id\n  }\n  team {\n    ...AgendaListAndInput_team\n    id\n  }\n}\n\nfragment ActionSidebarPhaseListItemChildren_meeting on ActionMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...ActionSidebarAgendaItemsSection_meeting\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AgendaInput_team on Team {\n  id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaItem_activeMeetings on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on AgendaItemsStage {\n        agendaItemId\n        isComplete\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    id\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment AgendaListAndInput_team on Team {\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n  activeMeetings {\n    __typename\n    ...AgendaItem_activeMeetings\n    id\n  }\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DashboardAvatar_teamMember on TeamMember {\n  ...TeamMemberAvatarMenu_teamMember\n  ...LeaveTeamModal_teamMember\n  ...PromoteTeamMemberModal_teamMember\n  ...RemoveTeamMemberModal_teamMember\n  isLead\n  picture\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment EditableTemplatePrompt_prompts on RetroPhaseItem {\n  id\n  question\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment LeaveTeamModal_teamMember on TeamMember {\n  teamMemberId: id\n}\n\nfragment MeetingAgendaCards_tasks on Task {\n  ...NullableTask_task\n  id\n  sortOrder\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSelector_meeting on NewMeeting {\n  ...RetroMeeting_meeting\n  ...ActionMeeting_meeting\n  meetingType\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment PromoteTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RemoveTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  ...NotificationTemplate_notification\n  id\n  archivor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TeamMemberAvatarMenu_teamMember on TeamMember {\n  isSelf\n  preferredName\n  userId\n  isLead\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n\nfragment TemplatePromptItem_prompt on RetroPhaseItem {\n  id\n  question\n  description\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n",
  "q_ZyY1NFNk5TCUk4-TTSGeug": "query SuggestMentionableUsersRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...SuggestMentionableUsers_viewer\n    id\n  }\n}\n\nfragment SuggestMentionableUsers_viewer on User {\n  team(teamId: $teamId) {\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n    }\n    id\n  }\n}\n",
  "m_EdRAbmeOvw_TuLeOaGfEWA": "mutation CreateUserPicturePutUrlMutation(\n  $image: ImageMetadataInput!\n  $pngVersion: ImageMetadataInput\n) {\n  createUserPicturePutUrl(image: $image, pngVersion: $pngVersion) {\n    error {\n      message\n    }\n    url\n    pngUrl\n  }\n}\n",
  "q_yyQtQHutoXH0fxso_CV7aw": "query InvitationLinkRootQuery(\n  $token: ID!\n) {\n  massInvitation(token: $token) {\n    ...InvitationLink_massInvitation\n  }\n}\n\nfragment InvitationLinkDialog_massInvitation on MassInvitationPayload {\n  ...InvitationLinkErrorExpired_massInvitation\n  errorType\n  inviterName\n  teamName\n}\n\nfragment InvitationLinkErrorExpired_massInvitation on MassInvitationPayload {\n  teamName\n  inviterName\n}\n\nfragment InvitationLink_massInvitation on MassInvitationPayload {\n  ...InvitationLinkDialog_massInvitation\n}\n",
  "m_q5y25cCe2ncdIM60891c-g": "mutation CreateJiraIssueMutation(\n  $cloudId: ID!\n  $taskId: ID!\n  $projectKey: ID!\n) {\n  createJiraIssue(cloudId: $cloudId, taskId: $taskId, projectKey: $projectKey) {\n    error {\n      message\n    }\n    task {\n      integration {\n        __typename\n        service\n        ... on TaskIntegrationJira {\n          cloudId\n          projectKey\n          projectName\n        }\n        ...TaskIntegrationLinkIntegrationJira\n        id\n      }\n      updatedAt\n      teamId\n      userId\n      id\n    }\n  }\n}\n\nfragment TaskIntegrationLinkIntegrationJira on TaskIntegrationJira {\n  issueKey\n  projectKey\n  cloudName\n}\n",
  "q_6v1pEMOXiKPWLnSTzzcoLA": "query DiscussionThreadRootQuery(\n  $meetingId: ID!\n  $reflectionGroupId: ID!\n) {\n  viewer {\n    ...DiscussionThread_viewer\n    id\n  }\n}\n\nfragment CommentSendOrAdd_meeting on RetrospectiveMeeting {\n  id\n  teamId\n}\n\nfragment DiscussionThreadInput_meeting on RetrospectiveMeeting {\n  ...CommentSendOrAdd_meeting\n  id\n  teamId\n  viewerMeetingMember {\n    user {\n      picture\n      id\n    }\n    id\n  }\n}\n\nfragment DiscussionThreadList_meeting on RetrospectiveMeeting {\n  ...ThreadedItem_meeting\n}\n\nfragment DiscussionThreadList_threadables on Threadable {\n  ...ThreadedItem_threadable\n  id\n}\n\nfragment DiscussionThread_viewer on User {\n  meeting(meetingId: $meetingId) {\n    __typename\n    ... on RetrospectiveMeeting {\n      ...DiscussionThreadInput_meeting\n      ...DiscussionThreadList_meeting\n      reflectionGroup(reflectionGroupId: $reflectionGroupId) {\n        id\n        thread(first: 1000) {\n          edges {\n            node {\n              threadSortOrder\n              threadId\n              threadSource\n              ...DiscussionThreadList_threadables\n              id\n              __typename\n            }\n            cursor\n          }\n          pageInfo {\n            endCursor\n            hasNextPage\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentBase_meeting on RetrospectiveMeeting {\n  ...DiscussionThreadInput_meeting\n  ...ThreadedItemReply_meeting\n  id\n  teamId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_meeting on RetrospectiveMeeting {\n  ...DiscussionThreadInput_meeting\n  id\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_meeting on RetrospectiveMeeting {\n  ...ThreadedCommentBase_meeting\n  ...ThreadedTaskBase_meeting\n  ...ThreadedRepliesList_meeting\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_meeting on RetrospectiveMeeting {\n  ...ThreadedCommentBase_meeting\n  ...ThreadedTaskBase_meeting\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_meeting on RetrospectiveMeeting {\n  ...ThreadedItemReply_meeting\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "m_XjenQSBcN4WbZeCZEkVrEQ": "mutation CreateReflectionMutation(\n  $input: CreateReflectionInput!\n) {\n  createReflection(input: $input) {\n    reflectionGroup {\n      meetingId\n      sortOrder\n      retroPhaseItemId\n      ...ReflectionGroupTitleEditor_reflectionGroup\n      ...ReflectionGroupVoting_reflectionGroup\n      reflections {\n        id\n        ...DraggableReflectionCard_reflection\n        ...DraggableReflectionCard_staticReflections\n        ...ReflectionCard_reflection\n        retroPhaseItemId\n        sortOrder\n        ...RemoteReflection_reflection\n        reflectionGroupId\n        isViewerCreator\n      }\n      id\n      viewerVoteCount\n      ...ReflectionGroupHeader_reflectionGroup\n      titleIsUserDefined\n      title\n      ...ReflectionGroup_reflectionGroup\n      tasks {\n        id\n      }\n      voteCount\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n",
  "q_kWKSqgSywiaomGrfQu3jDw": "query MassInvitationTokenLinkRootQuery(\n  $teamId: ID!\n  $meetingId: ID\n) {\n  viewer {\n    ...MassInvitationTokenLink_viewer\n    id\n  }\n}\n\nfragment MassInvitationTokenLink_viewer on User {\n  team(teamId: $teamId) {\n    id\n    massInvitation(meetingId: $meetingId) {\n      id\n      expiration\n    }\n  }\n}\n",
  "m_3jZcZIKjc2FwY2DtFQD6vw": "mutation UpdateAgendaItemMutation(\n  $updatedAgendaItem: UpdateAgendaItemInput!\n) {\n  updateAgendaItem(updatedAgendaItem: $updatedAgendaItem) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n      teamId\n      sortOrder\n    }\n    meetingId\n  }\n}\n",
  "q_1JJNLr26qqtxWm1vYeoxBQ": "query NewTeamRootQuery {\n  viewer {\n    ...NewTeam_viewer\n    id\n  }\n}\n\nfragment NewTeamForm_organizations on Organization {\n  ...NewTeamOrgPicker_organizations\n  id\n  teams {\n    name\n    id\n  }\n}\n\nfragment NewTeamOrgDropdown_organizations on Organization {\n  id\n  name\n  tier\n}\n\nfragment NewTeamOrgPicker_organizations on Organization {\n  ...NewTeamOrgDropdown_organizations\n  id\n  name\n  tier\n}\n\nfragment NewTeam_viewer on User {\n  organizations {\n    id\n    ...NewTeamForm_organizations\n  }\n}\n",
  "q_bl5_zkXFKpVUFMerVoIl2Q": "query getDemoEntitiesQuery(\n  $text: String!\n) {\n  getDemoEntities(text: $text) {\n    entities {\n      lemma\n      name\n      salience\n    }\n  }\n}\n",
  "m_UM8bkLeYzaTzvCWVqJdelg": "mutation CreateMassInvitationMutation(\n  $meetingId: ID\n  $teamId: ID!\n  $voidOld: Boolean\n) {\n  createMassInvitation(meetingId: $meetingId, teamId: $teamId, voidOld: $voidOld) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on CreateMassInvitationSuccess {\n      team {\n        massInvitation {\n          id\n          expiration\n          meetingId\n        }\n        id\n      }\n    }\n  }\n}\n",
  "q_Clzwf8_crPPLXjhRmVYMog": "query UnpaidTeamModalRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...UnpaidTeamModal_viewer\n    id\n  }\n}\n\nfragment UnpaidTeamModal_viewer on User {\n  team(teamId: $teamId) {\n    organization {\n      orgId: id\n      billingLeaders {\n        id\n        preferredName\n      }\n      creditCard {\n        brand\n      }\n      orgName: name\n      id\n    }\n    teamName: name\n    id\n  }\n}\n",
  "m_szyAKE_Fthl5w9jGIalVaQ": "mutation RemoveAtlassianAuthMutation(\n  $teamId: ID!\n) {\n  removeAtlassianAuth(teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      atlassianAuth(teamId: $teamId) {\n        accessToken\n        id\n      }\n      id\n    }\n  }\n}\n",
  "q_0AEoB9Bh10oWYG4M4cWPFg": "query useAllIntegrationsQuery(\n  $teamId: ID!\n  $userId: ID!\n) {\n  viewer {\n    userOnTeam(userId: $userId) {\n      allAvailableIntegrations(teamId: $teamId) {\n        __typename\n        id\n        service\n        ... on SuggestedIntegrationJira {\n          projectName\n        }\n        ... on SuggestedIntegrationGitHub {\n          nameWithOwner\n        }\n        ...SuggestedIntegrationJiraMenuItem_suggestedIntegration\n        ...SuggestedIntegrationGitHubMenuItem_suggestedIntegration\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment SuggestedIntegrationGitHubMenuItem_suggestedIntegration on SuggestedIntegrationGitHub {\n  nameWithOwner\n}\n\nfragment SuggestedIntegrationJiraMenuItem_suggestedIntegration on SuggestedIntegrationJira {\n  cloudId\n  projectKey\n  projectName\n}\n",
  "m_mIwtdaG0EGv4NsaDR5juUA": "mutation NewMeetingCheckInMutation(\n  $meetingId: ID!\n  $userId: ID!\n  $isCheckedIn: Boolean\n) {\n  newMeetingCheckIn(meetingId: $meetingId, userId: $userId, isCheckedIn: $isCheckedIn) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      ... on RetrospectiveMeeting {\n        votesRemaining\n      }\n      id\n    }\n    meetingMember {\n      __typename\n      isCheckedIn\n      id\n    }\n  }\n}\n",
  "m_A3jKWpfO6o8ksKeIh2srwQ": "mutation DragDiscussionTopicMutation(\n  $meetingId: ID!\n  $stageId: ID!\n  $sortOrder: Float!\n) {\n  dragDiscussionTopic(meetingId: $meetingId, stageId: $stageId, sortOrder: $sortOrder) {\n    stage {\n      id\n      sortOrder\n    }\n    meeting {\n      __typename\n      id\n    }\n  }\n}\n",
  "m_p4vJlGKlWEEa4dg1Dxd2yQ": "mutation RemoveReflectTemplateMutation(\n  $templateId: ID!\n) {\n  removeReflectTemplate(templateId: $templateId) {\n    reflectTemplate {\n      id\n    }\n    retroMeetingSettings {\n      selectedTemplateId\n      id\n    }\n  }\n}\n",
  "m_3TQPAxSNcy9KR8xhpcS3Mg": "mutation RemoveSlackAuthMutation(\n  $teamId: ID!\n) {\n  removeSlackAuth(teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      ...SlackNotificationList_viewer\n      teamMember(teamId: $teamId) {\n        slackAuth {\n          accessToken\n          slackTeamName\n          slackUserName\n          id\n        }\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment SlackNotificationList_viewer on User {\n  ...SlackNotificationRow_viewer\n  teamMember(teamId: $teamId) {\n    slackAuth {\n      accessToken\n      botAccessToken\n      isActive\n      slackUserId\n      defaultTeamChannelId\n      id\n    }\n    slackNotifications {\n      channelId\n      event\n      eventType\n      id\n    }\n    id\n  }\n}\n\nfragment SlackNotificationRow_viewer on User {\n  teamMember(teamId: $teamId) {\n    slackNotifications {\n      channelId\n      event\n      id\n    }\n    id\n  }\n}\n",
  "m_mvOqptxyqYXk1fyYAxdWBw": "mutation DeleteCommentMutation(\n  $commentId: ID!\n) {\n  deleteComment(commentId: $commentId) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on DeleteCommentSuccess {\n      comment {\n        id\n        isActive\n        content\n        threadParentId\n        threadId\n        threadSource\n      }\n    }\n  }\n}\n",
  "m_PAljbNXD_ZM8VI5Rf290Ww": "mutation CreateOrgPicturePutUrlMutation(\n  $contentType: String!\n  $contentLength: Int!\n  $orgId: ID!\n) {\n  createOrgPicturePutUrl(contentType: $contentType, contentLength: $contentLength, orgId: $orgId) {\n    error {\n      message\n    }\n    url\n  }\n}\n",
  "m_LMDTcNrglP2h7QFZJIBMVw": "mutation UpdateTaskDueDateMutation(\n  $taskId: ID!\n  $dueDate: DateTime\n) {\n  updateTaskDueDate(taskId: $taskId, dueDate: $dueDate) {\n    error {\n      message\n    }\n    task {\n      id\n      dueDate\n    }\n  }\n}\n",
  "m_5_CufIvGTQ5mrUaeErjcuQ": "mutation PromoteToTeamLeadMutation(\n  $teamMemberId: ID!\n) {\n  promoteToTeamLead(teamMemberId: $teamMemberId) {\n    error {\n      message\n    }\n    ...PromoteToTeamLeadMutation_team\n  }\n}\n\nfragment DashboardAvatar_teamMember on TeamMember {\n  ...TeamMemberAvatarMenu_teamMember\n  ...LeaveTeamModal_teamMember\n  ...PromoteTeamMemberModal_teamMember\n  ...RemoveTeamMemberModal_teamMember\n  isLead\n  picture\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment LeaveTeamModal_teamMember on TeamMember {\n  teamMemberId: id\n}\n\nfragment PromoteTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment PromoteToTeamLeadMutation_team on PromoteToTeamLeadPayload {\n  team {\n    isLead\n    id\n  }\n  oldLeader {\n    ...DashboardAvatar_teamMember\n    isLead\n    id\n  }\n  newLeader {\n    ...DashboardAvatar_teamMember\n    isLead\n    id\n  }\n}\n\nfragment RemoveTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment TeamMemberAvatarMenu_teamMember on TeamMember {\n  isSelf\n  preferredName\n  userId\n  isLead\n  user {\n    isConnected\n    id\n  }\n}\n",
  "q_2U-MU41yxk_fFo4zez4leg": "query OrgBillingInvoicesPaginationQuery(\n  $first: Int!\n  $after: DateTime\n  $orgId: ID!\n) {\n  viewer {\n    ...OrgBillingInvoices_viewer\n    id\n  }\n}\n\nfragment InvoiceRow_invoice on Invoice {\n  id\n  amountDue\n  creditCard {\n    brand\n  }\n  endAt\n  paidAt\n  payUrl\n  status\n}\n\nfragment OrgBillingInvoices_viewer on User {\n  invoices(first: $first, orgId: $orgId, after: $after) {\n    edges {\n      cursor\n      node {\n        ...InvoiceRow_invoice\n        id\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "m_L6H_OgS7OMCOgaHrpmkFeg": "mutation UpdateReflectionGroupTitleMutation(\n  $title: String!\n  $reflectionGroupId: ID!\n) {\n  updateReflectionGroupTitle(title: $title, reflectionGroupId: $reflectionGroupId) {\n    reflectionGroup {\n      title\n      titleIsUserDefined\n      id\n    }\n  }\n}\n",
  "s_MMMPriX7zBO2kXEjKKyblg": "subscription TaskSubscription {\n  taskSubscription {\n    __typename\n    ... on RemoveTeamMemberPayload {\n      updatedTasks {\n        id\n        tags\n        user {\n          id\n          preferredName\n          picture\n        }\n        userId\n      }\n    }\n    ... on ChangeTaskTeamPayload {\n      task {\n        id\n        content\n        createdAt\n        createdBy\n        createdByUser {\n          preferredName\n          id\n        }\n        dueDate\n        integration {\n          __typename\n          ... on TaskIntegrationGitHub {\n            service\n            nameWithOwner\n            issueNumber\n          }\n          id\n        }\n        meetingId\n        sortOrder\n        status\n        tags\n        threadId\n        threadSource\n        threadSortOrder\n        threadParentId\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        user {\n          id\n          preferredName\n          picture\n        }\n        editors {\n          userId\n          preferredName\n        }\n      }\n      removedTaskId\n    }\n    ... on CreateGitHubIssuePayload {\n      task {\n        integration {\n          __typename\n          ... on TaskIntegrationGitHub {\n            issueNumber\n            service\n            nameWithOwner\n          }\n          ...TaskIntegrationLinkIntegrationGitHub\n          id\n        }\n        updatedAt\n        id\n      }\n    }\n    ... on CreateJiraIssuePayload {\n      task {\n        integration {\n          __typename\n          service\n          ... on TaskIntegrationJira {\n            cloudId\n            projectKey\n            projectName\n          }\n          ...TaskIntegrationLinkIntegrationJira\n          id\n        }\n        updatedAt\n        teamId\n        userId\n        id\n      }\n    }\n    ... on CreateTaskPayload {\n      task {\n        id\n        content\n        createdAt\n        createdBy\n        createdByUser {\n          preferredName\n          id\n        }\n        dueDate\n        integration {\n          __typename\n          ... on TaskIntegrationGitHub {\n            service\n            nameWithOwner\n            issueNumber\n          }\n          id\n        }\n        meetingId\n        sortOrder\n        status\n        tags\n        threadId\n        threadSource\n        threadSortOrder\n        threadParentId\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        user {\n          id\n          preferredName\n          picture\n        }\n        ...ThreadedItemReply_threadable\n        ...ThreadedItem_threadable\n        replies {\n          __typename\n          ...ThreadedRepliesList_replies\n          id\n        }\n      }\n    }\n    ... on DeleteTaskPayload {\n      task {\n        id\n      }\n    }\n    ... on EditTaskPayload {\n      task {\n        id\n      }\n      editor {\n        id\n        preferredName\n      }\n      isEditing\n    }\n    ... on RemoveOrgUserPayload {\n      updatedTasks {\n        id\n        content\n        createdAt\n        createdBy\n        createdByUser {\n          preferredName\n          id\n        }\n        dueDate\n        integration {\n          __typename\n          ... on TaskIntegrationGitHub {\n            service\n            nameWithOwner\n            issueNumber\n          }\n          id\n        }\n        meetingId\n        sortOrder\n        status\n        tags\n        threadId\n        threadSource\n        threadSortOrder\n        threadParentId\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        user {\n          id\n          preferredName\n          picture\n        }\n      }\n      user {\n        id\n      }\n    }\n    ... on UpdateTaskPayload {\n      task {\n        id\n        content\n        createdAt\n        createdBy\n        createdByUser {\n          preferredName\n          id\n        }\n        dueDate\n        integration {\n          __typename\n          ... on TaskIntegrationGitHub {\n            service\n            nameWithOwner\n            issueNumber\n          }\n          id\n        }\n        meetingId\n        sortOrder\n        status\n        tags\n        threadId\n        threadSource\n        threadSortOrder\n        threadParentId\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        user {\n          id\n          preferredName\n          picture\n        }\n        editors {\n          userId\n          preferredName\n        }\n      }\n      addedNotification {\n        type\n        changeAuthor {\n          preferredName\n          id\n          picture\n        }\n        team {\n          id\n          name\n        }\n        ...NotificationTemplate_notification\n        id\n        involvement\n        status\n        task {\n          id\n          content\n          status\n          tags\n          user {\n            picture\n            preferredName\n            id\n          }\n        }\n      }\n      privatizedTaskId\n    }\n    ... on UpdateTaskDueDatePayload {\n      task {\n        id\n        dueDate\n      }\n    }\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLinkIntegrationGitHub on TaskIntegrationGitHub {\n  issueNumber\n  nameWithOwner\n}\n\nfragment TaskIntegrationLinkIntegrationJira on TaskIntegrationJira {\n  issueKey\n  projectKey\n  cloudName\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "m_fQq90FzztudjzSsUs98BOQ": "mutation UpdateUserProfileMutation(\n  $updatedUser: UpdateUserProfileInput!\n) {\n  updateUserProfile(updatedUser: $updatedUser) {\n    error {\n      message\n    }\n    teamMembers {\n      preferredName\n      picture\n      user {\n        picture\n        preferredName\n        id\n      }\n      id\n    }\n  }\n}\n",
  "m_AV-F6tQo7XAPXi7BjOO02g": "mutation ArchiveOrganizationMutation(\n  $orgId: ID!\n) {\n  archiveOrganization(orgId: $orgId) {\n    error {\n      message\n    }\n    removedSuggestedActionIds\n    orgId\n    teams {\n      id\n      name\n      activeMeetings {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "m_0jnzQswGp2Zsb7Xbkqmd7A": "mutation EndDraggingReflectionMutation(\n  $reflectionId: ID!\n  $dropTargetType: DragReflectionDropTargetTypeEnum\n  $dropTargetId: ID\n  $dragId: ID\n) {\n  endDraggingReflection(reflectionId: $reflectionId, dropTargetType: $dropTargetType, dropTargetId: $dropTargetId, dragId: $dragId) {\n    meeting {\n      id\n      nextAutoGroupThreshold\n      teamId\n    }\n    reflection {\n      ...ReflectionCard_reflection\n      ...RemoteReflection_reflection\n      id\n      reflectionGroupId\n      retroPhaseItemId\n      isViewerCreator\n    }\n    reflectionGroup {\n      id\n      meetingId\n      sortOrder\n      retroPhaseItemId\n      reflections {\n        ...ReflectionCard_reflection\n        ...RemoteReflection_reflection\n        id\n        reflectionGroupId\n        retroPhaseItemId\n        isViewerCreator\n      }\n      title\n      tasks {\n        id\n      }\n      voteCount\n    }\n    oldReflectionGroup {\n      id\n      title\n    }\n    dropTargetType\n    dropTargetId\n    userId\n    remoteDrag {\n      id\n      dragUserId\n      dragUserName\n    }\n  }\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n",
  "m_SwRzaANLqdMyw3fVb8RKOQ": "mutation SetCheckInEnabledMutation(\n  $settingsId: ID!\n  $isEnabled: Boolean!\n) {\n  setCheckInEnabled(settingsId: $settingsId, isEnabled: $isEnabled) {\n    settings {\n      __typename\n      phaseTypes\n      id\n    }\n  }\n}\n",
  "m_AfsDnBw_8ztlw6TtkbAOFQ": "mutation UpdateTaskMutation(\n  $updatedTask: UpdateTaskInput!\n  $area: AreaEnum\n) {\n  updateTask(updatedTask: $updatedTask, area: $area) {\n    error {\n      message\n    }\n    task {\n      id\n      content\n      createdAt\n      createdBy\n      createdByUser {\n        preferredName\n        id\n      }\n      dueDate\n      integration {\n        __typename\n        ... on TaskIntegrationGitHub {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        id\n      }\n      meetingId\n      sortOrder\n      status\n      tags\n      threadId\n      threadSource\n      threadSortOrder\n      threadParentId\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      user {\n        id\n        preferredName\n        picture\n      }\n      editors {\n        userId\n        preferredName\n      }\n    }\n    addedNotification {\n      type\n      changeAuthor {\n        preferredName\n        id\n        picture\n      }\n      team {\n        id\n        name\n      }\n      ...NotificationTemplate_notification\n      id\n      involvement\n      status\n      task {\n        id\n        content\n        status\n        tags\n        user {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n    privatizedTaskId\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n",
  "m_Gs7UtRDwnzxUebQIkdD47Q": "mutation EndNewMeetingMutation(\n  $meetingId: ID!\n) {\n  endNewMeeting(meetingId: $meetingId) {\n    error {\n      message\n    }\n    removedSuggestedActionId\n    isKill\n    meeting {\n      __typename\n      id\n      endedAt\n      teamId\n    }\n    team {\n      id\n      activeMeetings {\n        __typename\n        id\n      }\n      agendaItems {\n        id\n      }\n    }\n    removedTaskIds\n    updatedTasks {\n      id\n      content\n      tags\n      teamId\n      threadId\n      threadSource\n      meetingId\n      updatedAt\n      userId\n    }\n  }\n}\n",
  "m_eHC0ophxgY6MfMIP7ruxiQ": "mutation EditTaskMutation(\n  $taskId: ID!\n  $isEditing: Boolean!\n) {\n  editTask(taskId: $taskId, isEditing: $isEditing) {\n    error {\n      message\n    }\n    task {\n      id\n    }\n    editor {\n      id\n      preferredName\n    }\n    isEditing\n  }\n}\n",
  "m_NvjdwJ3wm0VquAoELXGvCA": "mutation RemoveReflectTemplatePromptMutation(\n  $promptId: ID!\n) {\n  removeReflectTemplatePrompt(promptId: $promptId) {\n    prompt {\n      id\n    }\n  }\n}\n",
  "m_c3MZYyvXwV2c1xjNNSBuvw": "mutation RemoveGitHubAuthMutation(\n  $teamId: ID!\n) {\n  removeGitHubAuth(teamId: $teamId) {\n    error {\n      message\n    }\n    user {\n      githubAuth(teamId: $teamId) {\n        accessToken\n        login\n        id\n      }\n      id\n    }\n  }\n}\n",
  "m__hw0g_WaWxGROXBf4YEz4w": "mutation RemoveReflectionMutation(\n  $reflectionId: ID!\n) {\n  removeReflection(reflectionId: $reflectionId) {\n    meeting {\n      __typename\n      id\n    }\n    reflection {\n      id\n      reflectionGroupId\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "m_9XN_OYtu0f9RkRgQVdRUTA": "mutation DismissSuggestedActionMutation(\n  $suggestedActionId: ID!\n) {\n  dismissSuggestedAction(suggestedActionId: $suggestedActionId) {\n    error {\n      title\n    }\n  }\n}\n",
  "m_xSYWaGQ7WcqXo12Grc_1vw": "mutation FlagReadyToAdvanceMutation(\n  $stageId: ID!\n  $meetingId: ID!\n  $isReady: Boolean!\n) {\n  flagReadyToAdvance(stageId: $stageId, meetingId: $meetingId, isReady: $isReady) {\n    __typename\n    ... on ErrorPayload {\n      error {\n        message\n      }\n    }\n    ... on FlagReadyToAdvanceSuccess {\n      stage {\n        __typename\n        isViewerReady\n        readyCount\n        id\n      }\n    }\n  }\n}\n",
  "m_fzMw6lmnM2k91_HZhdvrUg": "mutation DeleteTaskMutation(\n  $taskId: ID!\n) {\n  deleteTask(taskId: $taskId) {\n    error {\n      message\n    }\n    task {\n      id\n    }\n  }\n}\n",
  "q_HuYS49jE4OogXWBL38rrzg": "query ViewerNotOnTeamRootQuery(\n  $teamId: ID\n  $meetingId: ID\n) {\n  viewer {\n    ...ViewerNotOnTeam_viewer\n    id\n  }\n}\n\nfragment ViewerNotOnTeam_viewer on User {\n  teamInvitation(teamId: $teamId, meetingId: $meetingId) {\n    teamInvitation {\n      token\n      id\n    }\n    teamId\n    meetingId\n  }\n}\n",
  "q_ATLY6x3kDq5BRN4biTpxUg": "query MyDashboardTimelineRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...MyDashboardTimeline_viewer\n    id\n  }\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment MyDashboardTimeline_viewer on User {\n  id\n  ...TimelineSuggestedAction_viewer\n  ...TimelineFeedList_viewer\n  ...TimelineRightDrawer_viewer\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    id\n    name\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    name\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    commentCount\n    name\n    reflectionCount\n    taskCount\n    topicCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineNewFeature_viewer on User {\n  picture\n  newFeature {\n    copy\n    url\n    id\n  }\n}\n\nfragment TimelinePriorityTasks_viewer on User {\n  food4\n  tasks(first: 1000) {\n    __typename\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment TimelineRightDrawer_viewer on User {\n  ...TimelineNewFeature_viewer\n  ...TimelinePriorityTasks_viewer\n}\n\nfragment TimelineSuggestedAction_viewer on User {\n  suggestedActions {\n    __typename\n    ...SuggestedActionInviteYourTeam_suggestedAction\n    ...SuggestedActionTryTheDemo_suggestedAction\n    ...SuggestedActionTryRetroMeeting_suggestedAction\n    ...SuggestedActionTryActionMeeting_suggestedAction\n    ...SuggestedActionCreateNewTeam_suggestedAction\n    id\n  }\n}\n",
  "q_foYpDXP4OQoYCFaVogv0QA": "query MyDashboardTimelineRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...MyDashboardTimeline_viewer\n    id\n  }\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment MyDashboardTimeline_viewer on User {\n  id\n  ...TimelineSuggestedAction_viewer\n  ...TimelineFeedList_viewer\n  ...TimelineRightDrawer_viewer\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    id\n    name\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    name\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    commentCount\n    name\n    reflectionCount\n    taskCount\n    topicCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineNewFeature_viewer on User {\n  picture\n  newFeature {\n    copy\n    url\n    id\n  }\n}\n\nfragment TimelinePriorityTasks_viewer on User {\n  food3\n  tasks(first: 1000) {\n    __typename\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment TimelineRightDrawer_viewer on User {\n  ...TimelineNewFeature_viewer\n  ...TimelinePriorityTasks_viewer\n}\n\nfragment TimelineSuggestedAction_viewer on User {\n  suggestedActions {\n    __typename\n    ...SuggestedActionInviteYourTeam_suggestedAction\n    ...SuggestedActionTryTheDemo_suggestedAction\n    ...SuggestedActionTryRetroMeeting_suggestedAction\n    ...SuggestedActionTryActionMeeting_suggestedAction\n    ...SuggestedActionCreateNewTeam_suggestedAction\n    id\n  }\n}\n",
  "q_E_ZEswEMpTY3BH9WAGEm3g": "query MyDashboardTimelineRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...MyDashboardTimeline_viewer\n    id\n  }\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment MyDashboardTimeline_viewer on User {\n  id\n  ...TimelineSuggestedAction_viewer\n  ...TimelineFeedList_viewer\n  ...TimelineRightDrawer_viewer\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    id\n    name\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    name\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    commentCount\n    name\n    reflectionCount\n    taskCount\n    topicCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineNewFeature_viewer on User {\n  picture\n  newFeature {\n    copy\n    url\n    id\n  }\n}\n\nfragment TimelinePriorityTasks_viewer on User {\n  food\n  tasks(first: 1000) {\n    __typename\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment TimelineRightDrawer_viewer on User {\n  ...TimelineNewFeature_viewer\n  ...TimelinePriorityTasks_viewer\n}\n\nfragment TimelineSuggestedAction_viewer on User {\n  suggestedActions {\n    __typename\n    ...SuggestedActionInviteYourTeam_suggestedAction\n    ...SuggestedActionTryTheDemo_suggestedAction\n    ...SuggestedActionTryRetroMeeting_suggestedAction\n    ...SuggestedActionTryActionMeeting_suggestedAction\n    ...SuggestedActionCreateNewTeam_suggestedAction\n    id\n  }\n}\n",
  "s_9HMv3xsUONvb08Md8iVEJA": "subscription TeamSubscription {\n  teamSubscription {\n    __typename\n    ... on AcceptTeamInvitationPayload {\n      teamMember {\n        id\n        checkInOrder\n        isLead\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n        user {\n          isConnected\n          id\n        }\n      }\n      team {\n        name\n        activeMeetings {\n          __typename\n          ...MeetingSelector_meeting\n          id\n        }\n        id\n      }\n    }\n    ... on AddReflectTemplatePayload {\n      reflectTemplate {\n        id\n        name\n        teamId\n        prompts {\n          description\n          question\n          sortOrder\n          id\n        }\n      }\n    }\n    ... on AddReflectTemplatePromptPayload {\n      prompt {\n        sortOrder\n        id\n        question\n        ...TemplatePromptItem_prompt\n        ...EditableTemplatePrompt_prompts\n        description\n        templateId\n      }\n    }\n    ... on AddTeamPayload {\n      team {\n        id\n        name\n        ...TopBarMeetingsActiveMeetings\n        ...Team_team\n      }\n    }\n    ... on ArchiveTeamPayload {\n      team {\n        id\n        name\n        activeMeetings {\n          __typename\n          id\n        }\n      }\n      notification {\n        id\n        type\n        ...TeamArchived_notification\n      }\n    }\n    ... on DenyPushInvitationPayload {\n      teamId\n      userId\n    }\n    ... on EndNewMeetingPayload {\n      isKill\n      meeting {\n        __typename\n        id\n        endedAt\n        teamId\n      }\n      team {\n        id\n        activeMeetings {\n          __typename\n          id\n        }\n        agendaItems {\n          id\n        }\n      }\n      removedTaskIds\n      updatedTasks {\n        id\n        content\n        tags\n        teamId\n        threadId\n        threadSource\n        meetingId\n        updatedAt\n        userId\n      }\n    }\n    ... on MoveReflectTemplatePromptPayload {\n      prompt {\n        sortOrder\n        templateId\n        id\n      }\n    }\n    ... on NavigateMeetingPayload {\n      meeting {\n        __typename\n        ...SelectMeetingDropdownItem_meeting\n        id\n        facilitatorStageId\n      }\n      oldFacilitatorStage {\n        __typename\n        id\n        isComplete\n      }\n      phaseComplete {\n        reflect {\n          emptyReflectionGroupIds\n        }\n        group {\n          emptyReflectionGroupIds\n        }\n        vote {\n          meeting {\n            phases {\n              __typename\n              id\n              ... on DiscussPhase {\n                phaseType\n                stages {\n                  id\n                  isComplete\n                  isNavigable\n                  isNavigableByFacilitator\n                  meetingId\n                  phaseType\n                  reflectionGroup {\n                    id\n                    voteCount\n                    tasks {\n                      id\n                    }\n                  }\n                  sortOrder\n                }\n              }\n            }\n            id\n          }\n        }\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    ... on PromoteToTeamLeadPayload {\n      team {\n        isLead\n        id\n      }\n      oldLeader {\n        ...DashboardAvatar_teamMember\n        isLead\n        id\n      }\n      newLeader {\n        ...DashboardAvatar_teamMember\n        isLead\n        id\n      }\n    }\n    ... on PushInvitationPayload {\n      meetingId\n      user {\n        id\n        preferredName\n        email\n      }\n      team {\n        id\n        name\n      }\n    }\n    ... on RemoveReflectTemplatePayload {\n      reflectTemplate {\n        id\n      }\n      retroMeetingSettings {\n        selectedTemplateId\n        id\n      }\n    }\n    ... on RemoveReflectTemplatePromptPayload {\n      prompt {\n        id\n      }\n    }\n    ... on RemoveTeamMemberPayload {\n      updatedTasks {\n        id\n      }\n      kickOutNotification {\n        id\n        type\n        team {\n          id\n          name\n          activeMeetings {\n            __typename\n            id\n          }\n        }\n        ...KickedOut_notification\n      }\n      team {\n        id\n        activeMeetings {\n          __typename\n          facilitatorStageId\n          facilitatorUserId\n          meetingMembers {\n            __typename\n            id\n          }\n          phases {\n            __typename\n            stages {\n              __typename\n              id\n              readyCount\n            }\n            id\n          }\n          id\n        }\n      }\n      teamMember {\n        id\n        userId\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      teamMembers {\n        id\n      }\n      user {\n        id\n      }\n      teams {\n        id\n        activeMeetings {\n          __typename\n          facilitatorStageId\n          facilitatorUserId\n          meetingMembers {\n            __typename\n            id\n          }\n          phases {\n            __typename\n            stages {\n              __typename\n              id\n              readyCount\n            }\n            id\n          }\n          id\n        }\n      }\n    }\n    ... on RenameMeetingSuccess {\n      meeting {\n        __typename\n        name\n        id\n      }\n    }\n    ... on RenameReflectTemplatePayload {\n      reflectTemplate {\n        name\n        id\n      }\n    }\n    ... on RenameReflectTemplatePromptPayload {\n      prompt {\n        question\n        id\n      }\n    }\n    ... on SelectRetroTemplatePayload {\n      retroMeetingSettings {\n        id\n        selectedTemplateId\n      }\n    }\n    ... on SetCheckInEnabledPayload {\n      settings {\n        __typename\n        phaseTypes\n        id\n      }\n    }\n    ... on StartNewMeetingPayload {\n      meeting {\n        __typename\n        id\n        defaultFacilitatorUserId\n        name\n        meetingMembers {\n          __typename\n          user {\n            id\n            preferredName\n          }\n          id\n        }\n      }\n      team {\n        activeMeetings {\n          __typename\n          ...SelectMeetingDropdown_meetings\n          id\n          createdAt\n          facilitator {\n            id\n            preferredName\n          }\n          meetingType\n          name\n          team {\n            name\n            id\n          }\n        }\n        name\n        lastMeetingType\n        id\n      }\n    }\n    ... on UpdateCreditCardPayload {\n      teamsUpdated {\n        isPaid\n        updatedAt\n        id\n      }\n    }\n    ... on UpdateUserProfilePayload {\n      teamMembers {\n        preferredName\n        picture\n        user {\n          picture\n          preferredName\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateTeamNamePayload {\n      team {\n        name\n        id\n      }\n    }\n    ... on UpgradeToProPayload {\n      teams {\n        isPaid\n        tier\n        id\n      }\n    }\n    ... on AddAgendaItemPayload {\n      agendaItem {\n        id\n        content\n        sortOrder\n        teamId\n        teamMember {\n          id\n          picture\n          preferredName\n        }\n      }\n      meeting {\n        __typename\n        phases {\n          __typename\n          phaseType\n          ... on UpdatesPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          ... on AgendaItemsPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          stages {\n            __typename\n            ... on AgendaItemsStage {\n              agendaItemId\n            }\n            isNavigableByFacilitator\n            id\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on RemoveAgendaItemPayload {\n      agendaItem {\n        id\n      }\n      meeting {\n        __typename\n        facilitatorStageId\n        phases {\n          __typename\n          phaseType\n          ... on UpdatesPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          ... on AgendaItemsPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n            }\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateAgendaItemPayload {\n      agendaItem {\n        id\n        teamId\n        sortOrder\n      }\n      meetingId\n    }\n  }\n}\n\nfragment ActionMeetingAgendaItems_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on AgendaItemsStage {\n        agendaItemId\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    agendaItems {\n      id\n      content\n      teamMember {\n        picture\n        preferredName\n        id\n      }\n    }\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...MeetingAgendaCards_tasks\n          id\n          createdAt\n          sortOrder\n          threadId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeetingFirstCall_meeting on ActionMeeting {\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingLastCall_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingSidebar_meeting on ActionMeeting {\n  ...ActionSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n  team {\n    agendaItems {\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember on ActionMeetingMember {\n  user {\n    isConnected\n    id\n  }\n  teamMember {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPrompt_meeting on ActionMeeting {\n  team {\n    tasks(first: 1000) {\n      edges {\n        node {\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n  meetingMembers {\n    ...ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember\n    user {\n      isConnected\n      id\n    }\n    teamMember {\n      id\n      isSelf\n      picture\n      preferredName\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMemberId\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdates_meeting on ActionMeeting {\n  ...ActionMeetingUpdatesPrompt_meeting\n  id\n  endedAt\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMember {\n          userId\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...TaskColumns_tasks\n          id\n          status\n          sortOrder\n          tags\n          userId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeeting_meeting on ActionMeeting {\n  ...useMeeting_meeting\n  ...ActionMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...ActionMeetingUpdates_meeting\n  ...ActionMeetingFirstCall_meeting\n  ...ActionMeetingAgendaItems_meeting\n  ...ActionMeetingLastCall_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  phases {\n    __typename\n    id\n    phaseType\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionSidebarAgendaItemsSection_meeting on ActionMeeting {\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    ... on UpdatesPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    ... on AgendaItemsPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    id\n  }\n  team {\n    ...AgendaListAndInput_team\n    id\n  }\n}\n\nfragment ActionSidebarPhaseListItemChildren_meeting on ActionMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...ActionSidebarAgendaItemsSection_meeting\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AgendaInput_team on Team {\n  id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaItem_activeMeetings on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on AgendaItemsStage {\n        agendaItemId\n        isComplete\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    id\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment AgendaListAndInput_team on Team {\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n  activeMeetings {\n    __typename\n    ...AgendaItem_activeMeetings\n    id\n  }\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DashboardAvatar_teamMember on TeamMember {\n  ...TeamMemberAvatarMenu_teamMember\n  ...LeaveTeamModal_teamMember\n  ...PromoteTeamMemberModal_teamMember\n  ...RemoveTeamMemberModal_teamMember\n  isLead\n  picture\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment EditableTemplatePrompt_prompts on RetroPhaseItem {\n  id\n  question\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  endedAt\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  ...NotificationTemplate_notification\n  evictor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment LeaveTeamModal_teamMember on TeamMember {\n  teamMemberId: id\n}\n\nfragment MeetingAgendaCards_tasks on Task {\n  ...NullableTask_task\n  id\n  sortOrder\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSelector_meeting on NewMeeting {\n  ...RetroMeeting_meeting\n  ...ActionMeeting_meeting\n  meetingType\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment NotificationTemplate_notification on Notification {\n  createdAt\n  status\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment PromoteTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RemoveTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  endedAt\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  endedAt\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  endedAt\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n  endedAt\n}\n\nfragment SelectMeetingDropdownItem_meeting on NewMeeting {\n  id\n  name\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment SelectMeetingDropdown_meetings on NewMeeting {\n  ...SelectMeetingDropdownItem_meeting\n  id\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  ...NotificationTemplate_notification\n  id\n  archivor {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TeamMemberAvatarMenu_teamMember on TeamMember {\n  isSelf\n  preferredName\n  userId\n  isLead\n  user {\n    isConnected\n    id\n  }\n}\n\nfragment Team_team on Team {\n  id\n  isPaid\n  ...EditableTeamName_team\n}\n\nfragment TemplatePromptItem_prompt on RetroPhaseItem {\n  id\n  question\n  description\n}\n\nfragment TopBarMeetingsActiveMeetings on Team {\n  activeMeetings {\n    __typename\n    ...SelectMeetingDropdown_meetings\n    id\n    createdAt\n    facilitator {\n      id\n      preferredName\n    }\n    meetingType\n    name\n    team {\n      name\n      id\n    }\n  }\n  name\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n",
  "q_FtGMc1tlfqCVkfmuaLH2Pw": "query DiscussionThreadRootQuery(\n  $meetingId: ID!\n  $reflectionGroupId: ID!\n) {\n  viewer {\n    ...DiscussionThread_viewer\n    id\n  }\n}\n\nfragment CommentSendOrAdd_meeting on RetrospectiveMeeting {\n  id\n  teamId\n}\n\nfragment DiscussionThreadInput_meeting on RetrospectiveMeeting {\n  ...CommentSendOrAdd_meeting\n  id\n  teamId\n  viewerMeetingMember {\n    user {\n      picture\n      id\n    }\n    id\n  }\n}\n\nfragment DiscussionThreadList_meeting on RetrospectiveMeeting {\n  ...ThreadedItem_meeting\n}\n\nfragment DiscussionThreadList_threadables on Threadable {\n  ...ThreadedItem_threadable\n  id\n}\n\nfragment DiscussionThread_viewer on User {\n  meeting(meetingId: $meetingId) {\n    __typename\n    ... on RetrospectiveMeeting {\n      ...DiscussionThreadInput_meeting\n      ...DiscussionThreadList_meeting\n      endedAt\n      reflectionGroup(reflectionGroupId: $reflectionGroupId) {\n        id\n        thread(first: 1000) {\n          edges {\n            node {\n              threadSortOrder\n              threadId\n              threadSource\n              ...DiscussionThreadList_threadables\n              id\n              __typename\n            }\n            cursor\n          }\n          pageInfo {\n            endCursor\n            hasNextPage\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment ThreadedCommentBase_comment on Comment {\n  ...ThreadedCommentHeader_comment\n  ...ThreadedItemReply_threadable\n  id\n  isActive\n  content\n  createdByUser {\n    id\n    preferredName\n    picture\n  }\n  reactjis {\n    ...ThreadedCommentFooter_reactjis\n    id\n    isViewerReactji\n  }\n  threadParentId\n}\n\nfragment ThreadedCommentBase_meeting on RetrospectiveMeeting {\n  ...DiscussionThreadInput_meeting\n  ...ThreadedItemReply_meeting\n  id\n  teamId\n}\n\nfragment ThreadedCommentFooter_reactjis on Reactji {\n  ...ReactjiSection_reactjis\n  id\n}\n\nfragment ThreadedCommentHeader_comment on Comment {\n  id\n  createdByUser {\n    preferredName\n    id\n  }\n  isActive\n  isViewerComment\n  reactjis {\n    id\n  }\n  updatedAt\n}\n\nfragment ThreadedItemReply_meeting on RetrospectiveMeeting {\n  ...DiscussionThreadInput_meeting\n  id\n}\n\nfragment ThreadedItemReply_threadable on Threadable {\n  id\n  replies {\n    __typename\n    id\n    threadSortOrder\n  }\n}\n\nfragment ThreadedItem_meeting on RetrospectiveMeeting {\n  ...ThreadedCommentBase_meeting\n  ...ThreadedTaskBase_meeting\n  ...ThreadedRepliesList_meeting\n}\n\nfragment ThreadedItem_threadable on Threadable {\n  ...ThreadedCommentBase_comment\n  ...ThreadedTaskBase_task\n  __typename\n  replies {\n    __typename\n    ...ThreadedRepliesList_replies\n    id\n  }\n}\n\nfragment ThreadedRepliesList_meeting on RetrospectiveMeeting {\n  ...ThreadedCommentBase_meeting\n  ...ThreadedTaskBase_meeting\n}\n\nfragment ThreadedRepliesList_replies on Threadable {\n  ...ThreadedTaskBase_task\n  ...ThreadedCommentBase_comment\n  __typename\n  id\n}\n\nfragment ThreadedTaskBase_meeting on RetrospectiveMeeting {\n  ...ThreadedItemReply_meeting\n  id\n}\n\nfragment ThreadedTaskBase_task on Task {\n  ...NullableTask_task\n  ...ThreadedItemReply_threadable\n  id\n  content\n  createdByUser {\n    picture\n    preferredName\n    id\n  }\n  threadParentId\n}\n",
  "q_M6MFyIiJ0thA-06hlv2afQ": "query MeetingRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    ...MeetingSelector_viewer\n    id\n  }\n}\n\nfragment ActionMeetingAgendaItems_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on AgendaItemsStage {\n        agendaItemId\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    agendaItems {\n      id\n      content\n      teamMember {\n        picture\n        preferredName\n        id\n      }\n    }\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...MeetingAgendaCards_tasks\n          id\n          createdAt\n          sortOrder\n          threadId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeetingFirstCall_meeting on ActionMeeting {\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingLastCall_meeting on ActionMeeting {\n  id\n  endedAt\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingSidebar_meeting on ActionMeeting {\n  ...ActionSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n  team {\n    agendaItems {\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember on ActionMeetingMember {\n  user {\n    isConnected\n    id\n  }\n  teamMember {\n    preferredName\n    id\n  }\n}\n\nfragment ActionMeetingUpdatesPrompt_meeting on ActionMeeting {\n  team {\n    tasks(first: 1000) {\n      edges {\n        node {\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n  meetingMembers {\n    ...ActionMeetingUpdatesPromptTeamHelpText_currentMeetingMember\n    user {\n      isConnected\n      id\n    }\n    teamMember {\n      id\n      isSelf\n      picture\n      preferredName\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMemberId\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionMeetingUpdates_meeting on ActionMeeting {\n  ...ActionMeetingUpdatesPrompt_meeting\n  id\n  endedAt\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on UpdatesStage {\n        teamMember {\n          userId\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n  team {\n    id\n    tasks(first: 1000) {\n      edges {\n        node {\n          ...TaskColumns_tasks\n          id\n          status\n          sortOrder\n          tags\n          userId\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ActionMeeting_meeting on ActionMeeting {\n  ...useMeeting_meeting\n  ...ActionMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...ActionMeetingUpdates_meeting\n  ...ActionMeetingFirstCall_meeting\n  ...ActionMeetingAgendaItems_meeting\n  ...ActionMeetingLastCall_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  phases {\n    __typename\n    id\n    phaseType\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ActionSidebarAgendaItemsSection_meeting on ActionMeeting {\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    ... on UpdatesPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    ... on AgendaItemsPhase {\n      stages {\n        id\n        isComplete\n        isNavigable\n      }\n    }\n    id\n  }\n  team {\n    ...AgendaListAndInput_team\n    id\n  }\n}\n\nfragment ActionSidebarPhaseListItemChildren_meeting on ActionMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...ActionSidebarAgendaItemsSection_meeting\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AgendaInput_team on Team {\n  id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaItem_activeMeetings on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on AgendaItemsStage {\n        agendaItemId\n        isComplete\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    id\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment AgendaListAndInput_team on Team {\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n  activeMeetings {\n    __typename\n    ...AgendaItem_activeMeetings\n    id\n  }\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment DraggableTask_task on Task {\n  ...NullableTask_task\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  status\n  sortOrder\n}\n\nfragment DueDatePicker_task on Task {\n  id\n  dueDate\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment EditingStatus_task on Task {\n  createdAt\n  updatedAt\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  endedAt\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment MeetingAgendaCards_tasks on Task {\n  ...NullableTask_task\n  id\n  sortOrder\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSelector_viewer on User {\n  meeting(meetingId: $meetingId) {\n    __typename\n    ...RetroMeeting_meeting\n    ...ActionMeeting_meeting\n    meetingType\n    id\n  }\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  createdByUser {\n    preferredName\n    id\n  }\n  status\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  id\n  team {\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    __typename\n    service\n    ...TaskIntegrationLink_integration\n    id\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatus_task\n  ...TaskFooter_task\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  endedAt\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  endedAt\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  endedAt\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n  endedAt\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment TaskColumnAddTask_tasks on Task {\n  sortOrder\n}\n\nfragment TaskColumnInner_tasks on Task {\n  ...DraggableTask_task\n  id\n}\n\nfragment TaskColumn_tasks on Task {\n  ...TaskColumnAddTask_tasks\n  ...TaskColumnInner_tasks\n  id\n}\n\nfragment TaskColumns_tasks on Task {\n  ...TaskColumn_tasks\n  status\n  sortOrder\n}\n\nfragment TaskFooterIntegrateMenuList_task on Task {\n  id\n  teamId\n  userId\n}\n\nfragment TaskFooterIntegrateMenuRoot_task on Task {\n  teamId\n  userId\n  ...TaskFooterIntegrateMenu_task\n}\n\nfragment TaskFooterIntegrateMenu_task on Task {\n  ...TaskFooterIntegrateMenuList_task\n  teamId\n  userId\n}\n\nfragment TaskFooterTagMenuStatusItem_task on Task {\n  id\n  status\n}\n\nfragment TaskFooterTagMenu_task on Task {\n  ...TaskFooterTagMenuStatusItem_task\n  id\n  content\n  status\n  tags\n  teamId\n}\n\nfragment TaskFooterTeamAssigneeMenu_task on Task {\n  id\n  team {\n    id\n  }\n}\n\nfragment TaskFooterTeamAssignee_task on Task {\n  ...TaskFooterTeamAssigneeMenu_task\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenuRoot_task on Task {\n  ...TaskFooterUserAssigneeMenu_task\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssigneeMenu_task on Task {\n  id\n  userId\n  team {\n    id\n  }\n}\n\nfragment TaskFooterUserAssignee_task on Task {\n  ...TaskFooterUserAssigneeMenuRoot_task\n  user {\n    picture\n    preferredName\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TaskFooter_task on Task {\n  id\n  content\n  integration {\n    __typename\n    service\n    id\n  }\n  tags\n  team {\n    id\n  }\n  ...TaskFooterTeamAssignee_task\n  ...TaskFooterUserAssignee_task\n  ...TaskFooterTagMenu_task\n  ...TaskFooterIntegrateMenuRoot_task\n}\n\nfragment TaskIntegrationLink_integration on TaskIntegration {\n  service\n  ... on TaskIntegrationGitHub {\n    issueNumber\n    nameWithOwner\n  }\n  ... on TaskIntegrationJira {\n    issueKey\n    projectKey\n    cloudName\n  }\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n",
  "q_mbhw2SWS-YjzEJG2BvsHNw": "query DemoMeetingRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    meeting(meetingId: $meetingId) {\n      __typename\n      ...RetroMeeting_meeting\n      id\n    }\n    id\n  }\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment BottomControlBarReady_meeting on NewMeeting {\n  ... on RetrospectiveMeeting {\n    reflectionGroups {\n      id\n    }\n  }\n  id\n  facilitatorUserId\n  meetingMembers {\n    __typename\n    id\n    isCheckedIn\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      readyCount\n      isViewerReady\n      phaseType\n    }\n    id\n  }\n}\n\nfragment BottomControlBarTips_meeting on NewMeeting {\n  id\n  meetingType\n  phases {\n    __typename\n    phaseType\n    id\n  }\n}\n\nfragment DiscussPhaseReflectionGrid_reflections on RetroReflection {\n  id\n  ...ReflectionCard_reflection\n}\n\nfragment DiscussPhaseSqueeze_meeting on RetrospectiveMeeting {\n  id\n  facilitatorUserId\n  facilitator {\n    preferredName\n    id\n  }\n  showConversionModal\n}\n\nfragment DiscussPhaseSqueeze_organization on Organization {\n  id\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment DraggableReflectionCard_meeting on RetrospectiveMeeting {\n  ...ReflectionCard_meeting\n  id\n  teamId\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  ...ReflectionCard_reflection\n  ...RemoteReflection_reflection\n  id\n  reflectionGroupId\n  retroPhaseItemId\n  isViewerCreator\n}\n\nfragment DraggableReflectionCard_staticReflections on RetroReflection {\n  id\n  reflectionGroupId\n}\n\nfragment FacilitatorMenu_meeting on NewMeeting {\n  id\n}\n\nfragment Facilitator_meeting on NewMeeting {\n  ...FacilitatorMenu_meeting\n  endedAt\n  facilitatorUserId\n  facilitator {\n    picture\n    preferredName\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  id\n  endedAt\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      phaseType\n      id\n    }\n    id\n  }\n}\n\nfragment GroupingKanbanColumn_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment GroupingKanbanColumn_reflectionGroups on RetroReflectionGroup {\n  ...ReflectionGroup_reflectionGroup\n  id\n  sortOrder\n  reflections {\n    id\n  }\n}\n\nfragment GroupingKanban_meeting on RetrospectiveMeeting {\n  ...GroupingKanbanColumn_meeting\n  phases {\n    __typename\n    ... on ReflectPhase {\n      phaseType\n      reflectPrompts {\n        ...GroupingKanbanColumn_prompt\n        id\n      }\n    }\n    id\n  }\n  reflectionGroups {\n    ...GroupingKanbanColumn_reflectionGroups\n    id\n    retroPhaseItemId\n    reflections {\n      id\n    }\n  }\n}\n\nfragment MeetingControlBar_meeting on NewMeeting {\n  ...BottomControlBarTips_meeting\n  ...BottomControlBarReady_meeting\n  ...StageTimerControl_meeting\n  id\n  endedAt\n  facilitatorStageId\n  facilitatorUserId\n  meetingType\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment MeetingSidebarTeamMemberStageItems_meeting on NewMeeting {\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n      ... on NewMeetingTeamMemberStage {\n        teamMemberId\n        teamMember {\n          picture\n          preferredName\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment NewCheckInQuestion_meeting on NewMeeting {\n  id\n  facilitatorUserId\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInQuestion\n    }\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_meeting on NewMeeting {\n  id\n  team {\n    id\n    teamMembers(sortBy: \"checkInOrder\") {\n      ...AddTeamMemberAvatarButton_teamMembers\n      id\n      checkInOrder\n      user {\n        isConnected\n        lastSeenAt\n        lastSeenAtURL\n        id\n      }\n      userId\n      ...NewMeetingAvatar_teamMember\n    }\n  }\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  ...VideoAvatar_teamMember\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment NewMeetingCheckInGreeting_teamMember on TeamMember {\n  preferredName\n}\n\nfragment NewMeetingCheckInPrompt_meeting on NewMeeting {\n  ...NewCheckInQuestion_meeting\n  phases {\n    __typename\n    ... on CheckInPhase {\n      checkInGreeting {\n        ...NewMeetingCheckInGreeting_checkInGreeting\n      }\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_teamMember on TeamMember {\n  ...NewMeetingCheckInGreeting_teamMember\n  picture\n}\n\nfragment NewMeetingCheckIn_meeting on NewMeeting {\n  ...NewMeetingCheckInPrompt_meeting\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    stages {\n      __typename\n      id\n      ... on CheckInStage {\n        teamMember {\n          userId\n          ...NewMeetingCheckInPrompt_teamMember\n          id\n        }\n      }\n    }\n    id\n  }\n  teamId\n}\n\nfragment NewMeetingSidebar_meeting on NewMeeting {\n  ...Facilitator_meeting\n  id\n  endedAt\n  facilitatorUserId\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  ...ReflectionStack_meeting\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      ...DraggableReflectionCard_reflection\n      ...DraggableReflectionCard_staticReflections\n      content\n      id\n      isViewerCreator\n      retroPhaseItemId\n      sortOrder\n    }\n  }\n}\n\nfragment ReactjiCount_reactji on Reactji {\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReactjiSection_reactjis on Reactji {\n  ...ReactjiCount_reactji\n  id\n  count\n  isViewerReactji\n}\n\nfragment ReflectionCard_meeting on RetrospectiveMeeting {\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n    }\n    id\n  }\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  isViewerCreator\n  id\n  meetingId\n  reflectionGroupId\n  retroPhaseItemId\n  content\n  phaseItem {\n    question\n    id\n  }\n  reactjis {\n    ...ReactjiSection_reactjis\n    id\n    isViewerReactji\n  }\n  sortOrder\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  id\n  title\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  id\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  maxVotesPerGroup\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  id\n  viewerVoteCount\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  id\n  sortOrder\n  titleIsUserDefined\n  title\n  reflections {\n    ...DraggableReflectionCard_reflection\n    ...DraggableReflectionCard_staticReflections\n    ...ReflectionCard_reflection\n    id\n    retroPhaseItemId\n    sortOrder\n  }\n}\n\nfragment ReflectionStack_meeting on RetrospectiveMeeting {\n  ...DraggableReflectionCard_meeting\n  ...ReflectionCard_meeting\n  id\n}\n\nfragment RemoteReflection_reflection on RetroReflection {\n  id\n  content\n}\n\nfragment RetroDiscussPhase_meeting on RetrospectiveMeeting {\n  ...DiscussPhaseSqueeze_meeting\n  ...StageTimerControl_meeting\n  ...ReflectionGroup_meeting\n  ...StageTimerDisplay_meeting\n  id\n  endedAt\n  organization {\n    ...DiscussPhaseSqueeze_organization\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ... on RetroDiscussStage {\n        reflectionGroup {\n          ...ReflectionGroup_reflectionGroup\n          id\n          title\n          voteCount\n          reflections {\n            ...DiscussPhaseReflectionGrid_reflections\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  endedAt\n}\n\nfragment RetroMeetingSidebar_meeting on RetrospectiveMeeting {\n  ...RetroSidebarPhaseListItemChildren_meeting\n  ...NewMeetingSidebar_meeting\n  settings {\n    phaseTypes\n    id\n  }\n  id\n  endedAt\n  facilitatorUserId\n  facilitatorStageId\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n    id\n  }\n}\n\nfragment RetroMeeting_meeting on RetrospectiveMeeting {\n  ...useMeeting_meeting\n  ...RetroMeetingSidebar_meeting\n  ...NewMeetingCheckIn_meeting\n  ...RetroReflectPhase_meeting\n  ...RetroGroupPhase_meeting\n  ...RetroVotePhase_meeting\n  ...RetroDiscussPhase_meeting\n  ...NewMeetingAvatarGroup_meeting\n  ...MeetingControlBar_meeting\n  id\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n  viewerMeetingMember {\n    user {\n      featureFlags {\n        video\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment RetroReflectPhase_meeting on RetrospectiveMeeting {\n  ...StageTimerDisplay_meeting\n  ...StageTimerControl_meeting\n  ...PhaseItemColumn_meeting\n  endedAt\n  phases {\n    __typename\n    ... on ReflectPhase {\n      focusedPhaseItemId\n      reflectPrompts {\n        id\n        question\n        description\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarDiscussSection_meeting on RetrospectiveMeeting {\n  id\n  endedAt\n  facilitatorStageId\n  phases {\n    __typename\n    ... on DiscussPhase {\n      phaseType\n      stages {\n        id\n        isComplete\n        isNavigable\n        reflectionGroup {\n          title\n          voteCount\n          id\n        }\n        sortOrder\n      }\n    }\n    id\n  }\n}\n\nfragment RetroSidebarPhaseListItemChildren_meeting on RetrospectiveMeeting {\n  ...MeetingSidebarTeamMemberStageItems_meeting\n  ...RetroSidebarDiscussSection_meeting\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    id\n  }\n}\n\nfragment RetroVoteMetaHeader_meeting on RetrospectiveMeeting {\n  ...VoteSettingsMenu_meeting\n  endedAt\n  facilitatorUserId\n  viewerMeetingMember {\n    votesRemaining\n    id\n  }\n  votesRemaining\n}\n\nfragment RetroVotePhase_meeting on RetrospectiveMeeting {\n  ...StageTimerControl_meeting\n  ...StageTimerDisplay_meeting\n  ...GroupingKanban_meeting\n  ...RetroVoteMetaHeader_meeting\n  endedAt\n}\n\nfragment StageTimerControl_meeting on NewMeeting {\n  id\n  meetingMembers {\n    __typename\n    user {\n      isConnected\n      id\n    }\n    id\n  }\n  phases {\n    __typename\n    stages {\n      __typename\n      ...StageTimerModal_stage\n      scheduledEndTime\n      isAsync\n      isComplete\n      id\n    }\n    id\n  }\n  facilitator {\n    ...StageTimerModal_facilitator\n    id\n  }\n}\n\nfragment StageTimerDisplay_meeting on NewMeeting {\n  phases {\n    __typename\n    stages {\n      __typename\n      isComplete\n      scheduledEndTime\n      timeRemaining\n      id\n    }\n    id\n  }\n}\n\nfragment StageTimerModalEditTimeEnd_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n}\n\nfragment StageTimerModalEditTimeEnd_stage on NewMeetingStage {\n  ...StageTimerModalEndTime_stage\n}\n\nfragment StageTimerModalEditTimeLimit_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n}\n\nfragment StageTimerModalEndTimeSlackToggle_facilitator on TeamMember {\n  teamId\n  slackAuth {\n    isActive\n    defaultTeamChannelId\n    id\n  }\n  slackNotifications {\n    channelId\n    event\n    id\n  }\n}\n\nfragment StageTimerModalEndTime_facilitator on TeamMember {\n  ...StageTimerModalEndTimeSlackToggle_facilitator\n}\n\nfragment StageTimerModalEndTime_stage on NewMeetingStage {\n  suggestedEndTime\n  scheduledEndTime\n}\n\nfragment StageTimerModalTimeLimit_stage on NewMeetingStage {\n  suggestedTimeLimit\n  scheduledEndTime\n}\n\nfragment StageTimerModal_facilitator on TeamMember {\n  ...StageTimerModalEndTime_facilitator\n  ...StageTimerModalEditTimeEnd_facilitator\n}\n\nfragment StageTimerModal_stage on NewMeetingStage {\n  ...StageTimerModalTimeLimit_stage\n  ...StageTimerModalEditTimeLimit_stage\n  ...StageTimerModalEndTime_stage\n  ...StageTimerModalEditTimeEnd_stage\n  isAsync\n  suggestedTimeLimit\n}\n\nfragment VideoAvatar_teamMember on TeamMember {\n  isSelf\n  picture\n  userId\n}\n\nfragment VoteSettingsMenu_meeting on RetrospectiveMeeting {\n  id\n  totalVotes\n  maxVotesPerGroup\n}\n\nfragment fromStageIdToUrl_meeting on NewMeeting {\n  phases {\n    __typename\n    phaseType\n    stages {\n      __typename\n      id\n    }\n    id\n  }\n}\n\nfragment useAutoCheckIn_meeting on NewMeeting {\n  id\n  viewerMeetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n}\n\nfragment useGotoNext_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n    }\n  }\n}\n\nfragment useGotoPrev_meeting on NewMeeting {\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n\nfragment useGotoStageId_meeting on NewMeeting {\n  endedAt\n  teamId\n  facilitatorStageId\n  facilitatorUserId\n  id\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n      isComplete\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useInitialSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  meetingType\n  facilitatorStageId\n  facilitatorUserId\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n\nfragment useMeetingLocalState_meeting on NewMeeting {\n  ...useInitialSafeRoute_meeting\n  ...useUpdatedSafeRoute_meeting\n}\n\nfragment useMeeting_meeting on NewMeeting {\n  ...useGotoStageId_meeting\n  ...useGotoNext_meeting\n  ...useGotoPrev_meeting\n  ...useMeetingLocalState_meeting\n  ...useResumeFacilitation_meeting\n  ...useAutoCheckIn_meeting\n  id\n  name\n  team {\n    id\n    name\n  }\n}\n\nfragment useResumeFacilitation_meeting on NewMeeting {\n  id\n  defaultFacilitatorUserId\n  facilitatorUserId\n}\n\nfragment useUpdatedSafeRoute_meeting on NewMeeting {\n  ...fromStageIdToUrl_meeting\n  id\n  facilitatorStageId\n  phases {\n    __typename\n    id\n    stages {\n      __typename\n      id\n    }\n  }\n}\n"
}