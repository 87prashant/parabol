{
  "1aa2ebfea735b49d7bfa7a1bf652c7e5": "mutation ClearNotificationMutation(\n  $notificationId: ID!\n) {\n  clearNotification(notificationId: $notificationId) {\n    error {\n      message\n    }\n    notification {\n      __typename\n      id\n    }\n  }\n}\n",
  "3eb6c54c1f3a1112cd56f733b46994b9": "mutation ApproveToOrgMutation(\n  $email: String!\n  $orgId: ID!\n) {\n  approveToOrg(email: $email, orgId: $orgId) {\n    error {\n      message\n    }\n    removedRequestNotifications {\n      id\n    }\n    removedOrgApprovals {\n      id\n      teamId\n    }\n    newInvitations {\n      id\n      email\n      teamId\n      updatedAt\n    }\n  }\n}\n",
  "ee3bffd7923dd50f762323915a0d84e9": "subscription AgendaItemSubscription(\n  $teamId: ID!\n) {\n  agendaItemSubscription(teamId: $teamId) {\n    __typename\n    ...AddAgendaItemMutation_agendaItem\n    ...RemoveAgendaItemMutation_agendaItem\n    ...UpdateAgendaItemMutation_agendaItem\n    ...MoveMeetingMutation_agendaItem\n  }\n}\n\nfragment AddAgendaItemMutation_agendaItem on AddAgendaItemPayload {\n  agendaItem {\n    id\n    content\n    isComplete\n    sortOrder\n    teamId\n    teamMember {\n      id\n      picture\n      preferredName\n    }\n  }\n}\n\nfragment RemoveAgendaItemMutation_agendaItem on RemoveAgendaItemPayload {\n  agendaItem {\n    id\n  }\n}\n\nfragment UpdateAgendaItemMutation_agendaItem on UpdateAgendaItemPayload {\n  agendaItem {\n    id\n    isComplete\n    sortOrder\n  }\n}\n\nfragment MoveMeetingMutation_agendaItem on MoveMeetingPayload {\n  completedAgendaItem {\n    isComplete\n    id\n  }\n}\n",
  "ffbebdae43ec8aca7533d010714fb1c0": "query AgendaAndTasksRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...AgendaAndTasks_viewer\n    id\n  }\n}\n\nfragment AgendaAndTasks_viewer on User {\n  team(teamId: $teamId) {\n    teamId: id\n    teamName: name\n    ...AgendaListAndInput_team\n    ...TeamTasksHeaderContainer_team\n    id\n  }\n  teamMember(teamId: $teamId) {\n    hideAgenda\n    id\n  }\n  ...TeamColumnsContainer_viewer\n}\n\nfragment AgendaListAndInput_team on Team {\n  agendaItems {\n    id\n    content\n    teamMember {\n      id\n    }\n  }\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment TeamTasksHeaderContainer_team on Team {\n  teamId: id\n  ...TeamTasksHeader_team\n}\n\nfragment TeamColumnsContainer_viewer on User {\n  team(teamId: $teamId) {\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n    }\n    id\n  }\n  tasks(first: 1000, teamId: $teamId) {\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        assignee {\n          __typename\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment DraggableTask_task on Task {\n  id\n  content\n  integration {\n    service\n  }\n  status\n  sortOrder\n  assignee {\n    __typename\n    id\n  }\n  ...NullableTask_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n\nfragment TeamTasksHeader_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    orgId: id\n    orgName: name\n    id\n  }\n  ...TeamDashTeamMemberMenu_team\n}\n\nfragment TeamDashTeamMemberMenu_team on Team {\n  teamMembers(sortBy: \"preferredName\") {\n    id\n    preferredName\n  }\n}\n\nfragment AgendaInput_team on Team {\n  teamId: id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    isComplete\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  isComplete\n  teamMember {\n    picture\n    id\n  }\n}\n",
  "c0bbbd2fe26e10a8ac0cb5066ea97eb3": "mutation CreateGitHubIssueMutation(\n  $nameWithOwner: String!\n  $taskId: ID!\n) {\n  createGitHubIssue(nameWithOwner: $nameWithOwner, taskId: $taskId) {\n    error {\n      message\n    }\n    task {\n      integration {\n        issueNumber\n        service\n        nameWithOwner\n      }\n      updatedAt\n      id\n    }\n  }\n}\n",
  "afb10b5d2696a8ad5567c60e7c92e79b": "query DashboardWrapperQuery {\n  viewer {\n    notifications(first: 100) {\n      edges {\n        node {\n          id\n          orgId\n          startAt\n          type\n          ...NotificationRow_notification\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    ...DashSidebar_viewer\n    ...DashLayout_viewer\n    id\n  }\n}\n\nfragment NotificationRow_notification on Notification {\n  type\n  ...AddedToTeam_notification\n  ...DenyNewUser_notification\n  ...InviteeApproved_notification\n  ...KickedOut_notification\n  ...PaymentRejected_notification\n  ...TaskInvolves_notification\n  ...PromoteToBillingLeader_notification\n  ...RequestNewUser_notification\n  ...TeamArchived_notification\n  ...TeamInvite_notification\n  ...TeamInvitation_notification\n}\n\nfragment DashSidebar_viewer on User {\n  ...StandardHub_viewer\n  ...DashNavList_viewer\n}\n\nfragment DashLayout_viewer on User {\n  teams {\n    id\n    meetingId\n    newMeeting {\n      __typename\n      id\n      meetingType\n    }\n    name\n  }\n}\n\nfragment StandardHub_viewer on User {\n  picture\n  preferredName\n  notifications(first: 100) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ...StandardHubUserMenu_viewer\n}\n\nfragment DashNavList_viewer on User {\n  teams {\n    id\n    ...DashNavTeam_team\n  }\n}\n\nfragment DashNavTeam_team on Team {\n  id\n  isPaid\n  name\n}\n\nfragment StandardHubUserMenu_viewer on User {\n  email\n  organizations {\n    id\n    tier\n  }\n}\n\nfragment AddedToTeam_notification on NotifyAddedToTeam {\n  notificationId: id\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n}\n\nfragment DenyNewUser_notification on NotifyDenial {\n  notificationId: id\n  deniedByName\n  inviteeEmail\n  reason\n}\n\nfragment InviteeApproved_notification on NotifyInviteeApproved {\n  notificationId: id\n  inviteeEmail\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n}\n\nfragment KickedOut_notification on NotifyKickedOut {\n  notificationId: id\n  team {\n    id\n    name\n  }\n}\n\nfragment PaymentRejected_notification on NotifyPaymentRejected {\n  notificationId: id\n  organization {\n    orgId: id\n    creditCard {\n      last4\n      brand\n    }\n    id\n  }\n}\n\nfragment TaskInvolves_notification on NotifyTaskInvolves {\n  notificationId: id\n  changeAuthor {\n    changeAuthorName: preferredName\n    id\n  }\n  involvement\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  task {\n    content\n    status\n    tags\n    assignee {\n      __typename\n      ... on TeamMember {\n        picture\n        preferredName\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment PromoteToBillingLeader_notification on NotifyPromoteToOrgLeader {\n  notificationId: id\n  organization {\n    orgId: id\n    orgName: name\n    id\n  }\n}\n\nfragment RequestNewUser_notification on NotifyRequestNewUser {\n  notificationId: id\n  inviter {\n    inviterName: preferredName\n    id\n  }\n  inviteeEmail\n  orgId\n  team {\n    teamId: id\n    teamName: name\n    tier\n    id\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  notificationId: id\n  team {\n    teamName: name\n    id\n  }\n}\n\nfragment TeamInvite_notification on NotifyTeamInvite {\n  notificationId: id\n  inviter {\n    inviterName: preferredName\n    id\n  }\n  team {\n    teamName: name\n    id\n  }\n}\n\nfragment TeamInvitation_notification on NotificationTeamInvitation {\n  id\n  invitation {\n    token\n    inviter {\n      preferredName\n      id\n    }\n    id\n  }\n  team {\n    name\n    id\n  }\n}\n",
  "0aaa9a0d89d0dd44820c802ffa9a3ef3": "query SlackIntegrationsRootQuery(\n  $teamId: ID!\n  $service: IntegrationService!\n) {\n  viewer {\n    ...SlackIntegrations_viewer\n    id\n  }\n}\n\nfragment SlackIntegrations_viewer on User {\n  integrationProvider(teamId: $teamId, service: $service) {\n    id\n    accessToken\n  }\n  slackChannels(teamId: $teamId) {\n    id\n    channelId\n    channelName\n  }\n}\n",
  "823dcc8339b09fd5eff9543e5df95b01": "mutation AcceptTeamInvitationMutation(\n  $invitationToken: ID!\n  $notificationId: ID\n) {\n  acceptTeamInvitation(invitationToken: $invitationToken, notificationId: $notificationId) {\n    authToken\n    error {\n      message\n      title\n    }\n    removedNotificationIds\n    team {\n      id\n      name\n      isPaid\n      meetingId\n      isArchived\n    }\n    teamLead {\n      suggestedActions {\n        __typename\n        ...SuggestedActionInviteYourTeam_suggestedAction\n        ...SuggestedActionTryTheDemo_suggestedAction\n        ...SuggestedActionTryRetroMeeting_suggestedAction\n        ...SuggestedActionTryActionMeeting_suggestedAction\n        ...SuggestedActionCreateNewTeam_suggestedAction\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    name\n    ...AddTeamMemberModal_team\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n    id\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n",
  "36bbce22c811e078e64f79c005ce036f": "query TimelineFeedListPaginationQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...TimelineFeedList_viewer\n    id\n  }\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    meetingNumber\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    meetingNumber\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n",
  "ebc5326983a39e42abbeb1bb3c7c1198": "mutation UpdateAgendaItemMutation(\n  $updatedAgendaItem: UpdateAgendaItemInput!\n) {\n  updateAgendaItem(updatedAgendaItem: $updatedAgendaItem) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n      isComplete\n      sortOrder\n    }\n  }\n}\n",
  "9a5c621aac4d52d7d4c989371c62025c": "subscription IntegrationLeftSubscription(\n  $service: IntegrationService!\n  $teamId: ID!\n) {\n  integrationLeft(service: $service, teamId: $teamId) {\n    globalId\n    userId\n  }\n}\n",
  "778ce23220aa013238f39681b64e93d4": "mutation AddProviderMutation(\n  $code: ID!\n  $service: IntegrationService!\n  $teamId: ID!\n) {\n  addProvider(code: $code, service: $service, teamId: $teamId) {\n    error {\n      message\n    }\n    providerRow {\n      service\n      accessToken\n      userCount\n      integrationCount\n      id\n    }\n    provider {\n      id\n      accessToken\n      providerUserName\n      service\n      userId\n    }\n    joinedIntegrationIds\n    teamMember {\n      id\n      preferredName\n      picture\n    }\n  }\n}\n",
  "f37d21daf18cf0b2b2146df960d43251": "mutation StartDraggingReflectionMutation(\n  $initialCoords: Coords2DInput!\n  $reflectionId: ID!\n) {\n  startDraggingReflection(initialCoords: $initialCoords, reflectionId: $reflectionId) {\n    meetingId\n    reflectionId\n    dragContext {\n      id\n      dragCoords {\n        x\n        y\n      }\n      dragUserId\n      dragUser {\n        id\n        preferredName\n      }\n    }\n    teamId\n  }\n}\n",
  "0b9e12479c541d21ba2ab06086d49d00": "mutation StartNewMeetingMutation(\n  $teamId: ID!\n  $meetingType: MeetingTypeEnum!\n) {\n  startNewMeeting(teamId: $teamId, meetingType: $meetingType) {\n    error {\n      title\n      message\n    }\n    team {\n      id\n      meetingId\n      newMeeting {\n        __typename\n        id\n        facilitatorStageId\n        facilitatorUserId\n        facilitator {\n          id\n          preferredName\n        }\n        meetingNumber\n        meetingType\n        teamId\n        phases {\n          __typename\n          id\n          phaseType\n          stages {\n            __typename\n            id\n            isComplete\n            isNavigable\n            isNavigableByFacilitator\n            ... on NewMeetingTeamMemberStage {\n              teamMemberId\n              teamMember {\n                meetingMember {\n                  __typename\n                  isCheckedIn\n                  id\n                }\n                id\n                picture\n                preferredName\n              }\n            }\n          }\n          ... on CheckInPhase {\n            checkInGreeting {\n              content\n              language\n            }\n            checkInQuestion\n          }\n          ... on ReflectPhase {\n            focusedPhaseItemId\n            reflectPrompts {\n              question\n              id\n            }\n          }\n          ... on DiscussPhase {\n            stages {\n              reflectionGroup {\n                id\n              }\n              sortOrder\n              id\n            }\n          }\n        }\n        viewerMeetingMember {\n          __typename\n          isCheckedIn\n          ... on RetrospectiveMeetingMember {\n            votesRemaining\n          }\n          id\n        }\n        ... on RetrospectiveMeeting {\n          reflectionGroups {\n            id\n            title\n            meetingId\n            meeting {\n              id\n            }\n            retroPhaseItemId\n            phaseItem {\n              id\n            }\n            reflections {\n              id\n              content\n              editorIds\n              isViewerCreator\n              meetingId\n              reflectionGroupId\n              retroReflectionGroup {\n                id\n              }\n              retroPhaseItemId\n              sortOrder\n              phaseItem {\n                id\n              }\n            }\n            sortOrder\n            viewerVoteCount\n            voteCount\n            tasks {\n              id\n              agendaId\n              content\n              createdAt\n              createdBy\n              dueDate\n              integration {\n                service\n                nameWithOwner\n                issueNumber\n              }\n              meetingId\n              reflectionGroupId\n              sortOrder\n              status\n              tags\n              updatedAt\n              userId\n              teamId\n              team {\n                id\n                name\n              }\n              assignee {\n                __typename\n                id\n                preferredName\n                ... on TeamMember {\n                  picture\n                }\n              }\n            }\n          }\n          votesRemaining\n          settings {\n            maxVotesPerGroup\n            totalVotes\n            id\n          }\n        }\n      }\n    }\n  }\n}\n",
  "b7ec878e7acfa369e2f762b682b783bc": "mutation InviteToTeamMutation(\n  $teamId: ID!\n  $invitees: [Email!]!\n) {\n  inviteToTeam(invitees: $invitees, teamId: $teamId) {\n    error {\n      message\n    }\n    invitees\n    removedSuggestedActionId\n    teamInvitationNotification {\n      id\n      type\n      team {\n        name\n        id\n      }\n      invitation {\n        inviter {\n          preferredName\n          id\n        }\n        token\n        id\n      }\n    }\n  }\n}\n",
  "c2a6484014ec68637ec21fd3448a7b77": "mutation InviteTeamMembersMutation(\n  $teamId: ID!\n  $invitees: [Invitee!]!\n) {\n  inviteTeamMembers(invitees: $invitees, teamId: $teamId) {\n    error {\n      message\n    }\n    invitationsSent {\n      id\n      email\n      teamId\n      updatedAt\n    }\n    reactivationNotification {\n      type\n      team {\n        name\n        id\n        teamId: id\n        teamName: name\n      }\n      id\n      notificationId: id\n    }\n    teamInviteNotification {\n      type\n      team {\n        name\n        id\n        teamName: name\n      }\n      inviter {\n        preferredName\n        id\n        inviterName: preferredName\n      }\n      id\n      notificationId: id\n    }\n    removedRequestNotification {\n      id\n    }\n    requestNotification {\n      type\n      inviter {\n        preferredName\n        id\n        inviterName: preferredName\n      }\n      notificationId: id\n      inviteeEmail\n      orgId\n      team {\n        teamId: id\n        teamName: name\n        tier\n        id\n      }\n      id\n    }\n    team {\n      id\n      name\n      isPaid\n      meetingId\n      isArchived\n      teamMembers(sortBy: \"preferredName\") {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n    }\n    orgApprovalsSent {\n      id\n      createdAt\n      email\n      teamId\n      notification {\n        id\n        inviter {\n          preferredName\n          id\n        }\n      }\n    }\n    orgApprovalsRemoved {\n      id\n      teamId\n    }\n    reactivatedTeamMembers {\n      id\n      checkInOrder\n      isLead\n      isCheckedIn\n      isConnected\n      isNotRemoved\n      picture\n      preferredName\n      teamId\n      userId\n    }\n    newSoftTeamMembers {\n      id\n      email\n      preferredName\n      teamId\n    }\n    unarchivedSoftTasks {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n    }\n  }\n}\n",
  "24d8830bec9ff3b73cff8c2148b45df5": "mutation RemoveReflectTemplateMutation(\n  $templateId: ID!\n) {\n  removeReflectTemplate(templateId: $templateId) {\n    reflectTemplate {\n      id\n    }\n    retroMeetingSettings {\n      selectedTemplateId\n      id\n    }\n  }\n}\n",
  "7c2a11db625c6757e6bd55e715ea3da4": "mutation KillMeetingMutation(\n  $teamId: ID!\n) {\n  killMeeting(teamId: $teamId) {\n    error {\n      message\n    }\n    team {\n      activeFacilitator\n      facilitatorPhase\n      facilitatorPhaseItem\n      meetingId\n      meetingPhase\n      meetingPhaseItem\n      newMeeting {\n        __typename\n        id\n      }\n      id\n    }\n  }\n}\n",
  "8fe7bebbc2ad0889d55a3e2c4b855190": "subscription IntegrationJoinedSubscription(\n  $service: IntegrationService!\n  $teamId: ID!\n) {\n  integrationJoined(service: $service, teamId: $teamId) {\n    globalId\n    teamMember {\n      id\n      picture\n      preferredName\n    }\n  }\n}\n",
  "742e7458d48861c8c5603e6344f6232c": "subscription IntegrationSubscription(\n  $teamId: ID!\n) {\n  integrationSubscription(teamId: $teamId) {\n    __typename\n    ... on AddProviderPayload {\n      providerRow {\n        service\n        accessToken\n        userCount\n        integrationCount\n        id\n      }\n      provider {\n        id\n        accessToken\n        providerUserName\n        service\n        userId\n      }\n      joinedIntegrationIds\n      teamMember {\n        id\n        preferredName\n        picture\n      }\n    }\n    ... on RemoveProviderPayload {\n      providerRow {\n        service\n        accessToken\n        userCount\n        integrationCount\n        id\n      }\n      deletedIntegrationIds\n      userId\n    }\n  }\n}\n",
  "b14b401db2f9cc72017ea2aab73b29a8": "mutation AddTeamMutation(\n  $newTeam: NewTeamInput!\n) {\n  addTeam(newTeam: $newTeam) {\n    error {\n      message\n    }\n    team {\n      id\n      name\n      isPaid\n      meetingId\n      isArchived\n      teamMembers(sortBy: \"preferredName\") {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n    }\n  }\n}\n",
  "79b01c31725b91c765eec2cf8d8bccd1": "subscription TaskSubscription {\n  taskSubscription {\n    __typename\n    ... on AcceptTeamInvitePayload {\n      hardenedTasks {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n    }\n    ... on RemoveTeamMemberPayload {\n      updatedTasks {\n        id\n        tags\n        assigneeId\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n        userId\n      }\n    }\n    ... on CancelApprovalPayload {\n      archivedSoftTasks {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n    }\n    ... on ChangeTaskTeamPayload {\n      task {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n        editors {\n          userId\n          preferredName\n        }\n      }\n      removedNotification {\n        id\n      }\n      removedTaskId\n    }\n    ... on CreateGitHubIssuePayload {\n      task {\n        integration {\n          issueNumber\n          service\n          nameWithOwner\n        }\n        updatedAt\n        id\n      }\n    }\n    ... on CreateTaskPayload {\n      task {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n    }\n    ... on DeleteTaskPayload {\n      task {\n        id\n      }\n    }\n    ... on EditTaskPayload {\n      task {\n        id\n      }\n      editor {\n        id\n        preferredName\n      }\n      isEditing\n    }\n    ... on EndMeetingPayload {\n      archivedTasks {\n        id\n        tags\n        teamId\n      }\n    }\n    ... on InviteTeamMembersPayload {\n      unarchivedSoftTasks {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n    }\n    ... on RejectOrgApprovalPayload {\n      archivedSoftTasks {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      updatedTasks {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n    ... on UpdateTaskPayload {\n      task {\n        id\n        agendaId\n        content\n        createdAt\n        createdBy\n        dueDate\n        integration {\n          service\n          nameWithOwner\n          issueNumber\n        }\n        meetingId\n        reflectionGroupId\n        sortOrder\n        status\n        tags\n        updatedAt\n        userId\n        teamId\n        team {\n          id\n          name\n        }\n        assignee {\n          __typename\n          id\n          preferredName\n          ... on TeamMember {\n            picture\n          }\n        }\n        editors {\n          userId\n          preferredName\n        }\n      }\n      addedNotification {\n        type\n        changeAuthor {\n          preferredName\n          id\n          changeAuthorName: preferredName\n        }\n        notificationId: id\n        involvement\n        team {\n          teamId: id\n          teamName: name\n          id\n        }\n        task {\n          content\n          status\n          tags\n          assignee {\n            __typename\n            ... on TeamMember {\n              picture\n              preferredName\n            }\n            id\n          }\n          id\n        }\n        id\n      }\n      removedNotification {\n        id\n      }\n      privatizedTaskId\n    }\n    ... on UpdateTaskDueDatePayload {\n      task {\n        id\n        dueDate\n      }\n    }\n  }\n}\n",
  "5c71c154f0ef47f1b4aafd70fd02f535": "query TeamInvitationRootQuery(\n  $token: ID!\n) {\n  verifiedInvitation(token: $token) {\n    ...TeamInvitationDialog_verifiedInvitation\n  }\n}\n\nfragment TeamInvitationDialog_verifiedInvitation on VerifiedInvitationPayload {\n  ...TeamInvitationErrorAccepted_verifiedInvitation\n  ...TeamInvitationErrorExpired_verifiedInvitation\n  ...TeamInvitationGoogleSignin_verifiedInvitation\n  ...TeamInvitationGoogleCreateAccount_verifiedInvitation\n  ...TeamInvitationEmailSignin_verifiedInvitation\n  ...TeamInvitationEmailCreateAccount_verifiedInvitation\n  ...TeamInvitationAccept_verifiedInvitation\n  errorType\n  isGoogle\n  user {\n    preferredName\n    id\n  }\n}\n\nfragment TeamInvitationErrorAccepted_verifiedInvitation on VerifiedInvitationPayload {\n  teamName\n  teamInvitation {\n    teamId\n    id\n  }\n}\n\nfragment TeamInvitationErrorExpired_verifiedInvitation on VerifiedInvitationPayload {\n  teamName\n  inviterName\n  inviterEmail\n}\n\nfragment TeamInvitationGoogleSignin_verifiedInvitation on VerifiedInvitationPayload {\n  user {\n    email\n    preferredName\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationGoogleCreateAccount_verifiedInvitation on VerifiedInvitationPayload {\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationEmailSignin_verifiedInvitation on VerifiedInvitationPayload {\n  user {\n    preferredName\n    id\n  }\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationEmailCreateAccount_verifiedInvitation on VerifiedInvitationPayload {\n  teamInvitation {\n    email\n    id\n  }\n  teamName\n}\n\nfragment TeamInvitationAccept_verifiedInvitation on VerifiedInvitationPayload {\n  teamInvitation {\n    teamId\n    id\n  }\n}\n",
  "e4da0cf7f441b408aa0f2fd7e4f96fb2": "mutation EndDraggingReflectionMutation(\n  $reflectionId: ID!\n  $dropTargetType: DragReflectionDropTargetTypeEnum\n  $dropTargetId: ID\n  $dragId: ID\n) {\n  endDraggingReflection(reflectionId: $reflectionId, dropTargetType: $dropTargetType, dropTargetId: $dropTargetId, dragId: $dragId) {\n    dragId\n    meeting {\n      id\n      nextAutoGroupThreshold\n      teamId\n    }\n    reflection {\n      id\n      content\n      editorIds\n      isViewerCreator\n      meetingId\n      reflectionGroupId\n      retroReflectionGroup {\n        id\n      }\n      retroPhaseItemId\n      sortOrder\n      phaseItem {\n        id\n      }\n    }\n    reflectionGroup {\n      id\n      meetingId\n      sortOrder\n      reflections {\n        id\n        content\n        editorIds\n        isViewerCreator\n        meetingId\n        reflectionGroupId\n        retroReflectionGroup {\n          id\n        }\n        retroPhaseItemId\n        sortOrder\n        phaseItem {\n          id\n        }\n      }\n      title\n      tasks {\n        id\n      }\n    }\n    oldReflectionGroup {\n      id\n      title\n    }\n    dropTargetType\n    dropTargetId\n    userId\n  }\n}\n",
  "2f07b4fa86280b134b2b69c46ba92fb4": "mutation UpdateReflectionGroupTitleMutation(\n  $title: String!\n  $reflectionGroupId: ID!\n) {\n  updateReflectionGroupTitle(title: $title, reflectionGroupId: $reflectionGroupId) {\n    reflectionGroup {\n      title\n      id\n    }\n  }\n}\n",
  "17e2c440c4392c1e9f373c2d676b87df": "mutation SetPhaseFocusMutation(\n  $meetingId: ID!\n  $focusedPhaseItemId: ID\n) {\n  setPhaseFocus(meetingId: $meetingId, focusedPhaseItemId: $focusedPhaseItemId) {\n    reflectPhase {\n      focusedPhaseItemId\n      id\n    }\n  }\n}\n",
  "7e10b86d13c634e8924d866ac3e48b5c": "mutation AddAgendaItemMutation(\n  $newAgendaItem: CreateAgendaItemInput!\n) {\n  addAgendaItem(newAgendaItem: $newAgendaItem) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n      content\n      isComplete\n      sortOrder\n      teamId\n      teamMember {\n        id\n        picture\n        preferredName\n      }\n    }\n  }\n}\n",
  "23da31990c676364f286ee08c02a1001": "mutation AddGitHubRepoMutation(\n  $nameWithOwner: String!\n  $teamId: ID!\n) {\n  addGitHubRepo(nameWithOwner: $nameWithOwner, teamId: $teamId) {\n    error {\n      message\n    }\n    repo {\n      id\n      adminUserId\n      nameWithOwner\n      teamMembers {\n        id\n        preferredName\n        picture\n      }\n    }\n  }\n}\n",
  "fae319304343bc8432a6ea45c6041e87": "mutation UpdateTaskMutation(\n  $updatedTask: UpdateTaskInput!\n  $area: AreaEnum\n) {\n  updateTask(updatedTask: $updatedTask, area: $area) {\n    error {\n      message\n    }\n    task {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n      editors {\n        userId\n        preferredName\n      }\n    }\n    addedNotification {\n      type\n      changeAuthor {\n        preferredName\n        id\n        changeAuthorName: preferredName\n      }\n      notificationId: id\n      involvement\n      team {\n        teamId: id\n        teamName: name\n        id\n      }\n      task {\n        content\n        status\n        tags\n        assignee {\n          __typename\n          ... on TeamMember {\n            picture\n            preferredName\n          }\n          id\n        }\n        id\n      }\n      id\n    }\n    removedNotification {\n      id\n    }\n    privatizedTaskId\n  }\n}\n",
  "66fb249838402d5394fc04685dd17850": "query InvoiceRootQuery(\n  $invoiceId: ID!\n) {\n  viewer {\n    ...Invoice_viewer\n    id\n  }\n}\n\nfragment Invoice_viewer on User {\n  invoiceDetails(invoiceId: $invoiceId) {\n    id\n    amountDue\n    billingLeaderEmails\n    creditCard {\n      brand\n      last4\n    }\n    endAt\n    lines {\n      id\n      amount\n      description\n      details {\n        id\n        amount\n        email\n        endAt\n        startAt\n      }\n      quantity\n      type\n    }\n    nextMonthCharges {\n      amount\n      nextPeriodEnd\n      quantity\n      unitPrice\n    }\n    orgName\n    startingBalance\n    startAt\n    status\n    total\n  }\n}\n",
  "c1004d13cee78ef87fec29e93c28a01a": "mutation AcceptTeamInviteMutation(\n  $notificationId: ID\n  $inviteToken: ID\n) {\n  acceptTeamInvite(notificationId: $notificationId, inviteToken: $inviteToken) {\n    error {\n      message\n      title\n    }\n    team {\n      id\n      name\n      isPaid\n      meetingId\n      isArchived\n    }\n    authToken\n    removedNotification {\n      id\n    }\n    user {\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n}\n",
  "a6df6e2cafc39bcd8e3e3cb7c4873f56": "mutation RemoveReflectTemplatePromptMutation(\n  $promptId: ID!\n) {\n  removeReflectTemplatePrompt(promptId: $promptId) {\n    prompt {\n      id\n    }\n  }\n}\n",
  "6e8c9f759bce31be2aef5717da1a479b": "mutation EditTaskMutation(\n  $taskId: ID!\n  $isEditing: Boolean!\n) {\n  editTask(taskId: $taskId, isEditing: $isEditing) {\n    error {\n      message\n    }\n    task {\n      id\n    }\n    editor {\n      id\n      preferredName\n    }\n    isEditing\n  }\n}\n",
  "893411d5a9b6946e243f434c96b27bdb": "mutation RemoveReflectionMutation(\n  $reflectionId: ID!\n) {\n  removeReflection(reflectionId: $reflectionId) {\n    meeting {\n      __typename\n      id\n    }\n    reflection {\n      id\n      reflectionGroupId\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "2437d810661cb31c90e2b47b5ec1b11c": "mutation DeleteTaskMutation(\n  $taskId: ID!\n) {\n  deleteTask(taskId: $taskId) {\n    error {\n      message\n    }\n    involvementNotification {\n      id\n    }\n    task {\n      id\n    }\n  }\n}\n",
  "3581617d81180de240124e119a591dd8": "mutation RenameReflectTemplateMutation(\n  $templateId: ID!\n  $name: String!\n) {\n  renameReflectTemplate(templateId: $templateId, name: $name) {\n    reflectTemplate {\n      name\n      id\n    }\n  }\n}\n",
  "d5911bb299b8a8529afedbbf7c2d2c3f": "mutation UpdateTeamNameMutation(\n  $updatedTeam: UpdatedTeamInput!\n) {\n  updateTeamName(updatedTeam: $updatedTeam) {\n    error {\n      message\n    }\n    team {\n      name\n      id\n    }\n  }\n}\n",
  "94d7e4ea362f471b51f3cf0f312ae24c": "subscription GitHubMemberRemovedSubscription(\n  $teamId: ID!\n) {\n  githubMemberRemoved(teamId: $teamId) {\n    leaveIntegration {\n      globalId\n      userId\n    }\n  }\n}\n",
  "b1cb3ace731c48b7b0ec832bcb289c1e": "mutation CreateReflectionMutation(\n  $input: CreateReflectionInput!\n) {\n  createReflection(input: $input) {\n    reflectionGroup {\n      meetingId\n      sortOrder\n      retroPhaseItemId\n      reflections {\n        id\n        content\n        editorIds\n        isViewerCreator\n        meetingId\n        reflectionGroupId\n        retroReflectionGroup {\n          id\n        }\n        retroPhaseItemId\n        sortOrder\n        phaseItem {\n          id\n        }\n      }\n      tasks {\n        id\n      }\n      id\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "1edff4026425b6726fe1314e90c140dc": "mutation UpdateDragLocationMutation(\n  $input: UpdateDragLocationInput!\n) {\n  updateDragLocation(input: $input)\n}\n",
  "bb77ddfcfaaec74c120c1096f4be4ac6": "query UpgradeModalRootQuery(\n  $orgId: ID!\n) {\n  viewer {\n    ...UpgradeModal_viewer\n    id\n  }\n}\n\nfragment UpgradeModal_viewer on User {\n  organization(orgId: $orgId) {\n    orgId: id\n    ...UpgradeSqueeze_organization\n    id\n  }\n}\n\nfragment UpgradeSqueeze_organization on Organization {\n  orgId: id\n  isBillingLeader\n  billingLeaders {\n    email\n    preferredName\n    id\n  }\n  orgUserCount {\n    activeUserCount\n  }\n}\n",
  "ef9128f0d77a3bf2c1ed74f1d43cd7de": "mutation UpdateCreditCardMutation(\n  $orgId: ID!\n  $stripeToken: ID!\n) {\n  updateCreditCard(orgId: $orgId, stripeToken: $stripeToken) {\n    error {\n      message\n    }\n    organization {\n      creditCard {\n        brand\n        last4\n        expiry\n      }\n      updatedAt\n      id\n    }\n    teamsUpdated {\n      isPaid\n      updatedAt\n      id\n    }\n  }\n}\n",
  "1398323ffad873030b23df2d4807926e": "query TeamArchiveRootQuery(\n  $teamId: ID!\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...TeamArchive_viewer\n    id\n  }\n}\n\nfragment TeamArchive_viewer on User {\n  archivedTasks(first: $first, teamId: $teamId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...NullableTask_task\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n",
  "3bb6ad44e976fb5350ec31416632fc8d": "query MeetingRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...MeetingContainer_viewer\n    id\n  }\n}\n\nfragment MeetingContainer_viewer on User {\n  team(teamId: $teamId) {\n    agendaItems {\n      id\n      isComplete\n    }\n    checkInGreeting {\n      content\n      language\n    }\n    checkInQuestion\n    id\n    teamName: name\n    meetingId\n    activeFacilitator\n    facilitatorPhase\n    facilitatorPhaseItem\n    meetingPhase\n    meetingPhaseItem\n    tier\n    teamMembers(sortBy: \"checkInOrder\") {\n      id\n      preferredName\n      picture\n      checkInOrder\n      isCheckedIn\n      isConnected\n      isFacilitator\n      isLead\n      isSelf\n      userId\n    }\n    ...MeetingAgendaLastCall_team\n    ...MeetingLobby_team\n    ...MeetingAvatarGroup_team\n    ...MeetingUpdatesPrompt_team\n    ...MeetingCheckIn_team\n    ...Sidebar_team\n  }\n  ...MeetingUpdates_viewer\n  ...MeetingAgendaItems_viewer\n}\n\nfragment MeetingAgendaLastCall_team on Team {\n  agendaItems {\n    isComplete\n    id\n  }\n}\n\nfragment MeetingLobby_team on Team {\n  teamId: id\n  teamName: name\n}\n\nfragment MeetingAvatarGroup_team on Team {\n  teamId: id\n  activeFacilitator\n  facilitatorPhase\n  facilitatorPhaseItem\n  ...AddTeamMemberAvatarButton_team\n  teamMembers(sortBy: \"checkInOrder\") {\n    ...AddTeamMemberAvatarButton_teamMembers\n    id\n    isCheckedIn\n    isConnected\n    isSelf\n    picture\n    ...MeetingAvatarMenu_avatar\n  }\n}\n\nfragment MeetingUpdatesPrompt_team on Team {\n  teamMembers(sortBy: \"checkInOrder\") {\n    isSelf\n    picture\n    preferredName\n    isCheckedIn\n    ...HelpTextForTeam_currentTeamMember\n    id\n  }\n}\n\nfragment MeetingCheckIn_team on Team {\n  ...MeetingCheckInPrompt_team\n  teamMembers(sortBy: \"checkInOrder\") {\n    id\n    isSelf\n    preferredName\n  }\n}\n\nfragment Sidebar_team on Team {\n  teamId: id\n  teamName: name\n  facilitatorPhase\n  facilitatorPhaseItem\n  meetingPhase\n  agendaItems {\n    isComplete\n    id\n  }\n  ...AgendaListAndInput_team\n}\n\nfragment MeetingUpdates_viewer on User {\n  team(teamId: $teamId) {\n    teamMembers(sortBy: \"checkInOrder\") {\n      id\n      isSelf\n      preferredName\n    }\n    id\n  }\n  tasks(first: 1000, teamId: $teamId) {\n    edges {\n      node {\n        id\n        status\n        sortOrder\n        tags\n        assignee {\n          __typename\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment MeetingAgendaItems_viewer on User {\n  team(teamId: $teamId) {\n    id\n    agendaItems {\n      id\n      content\n      teamMember {\n        id\n      }\n    }\n    teamMembers(sortBy: \"checkInOrder\") {\n      id\n      picture\n      preferredName\n    }\n  }\n  tasks(first: 1000, teamId: $teamId) {\n    edges {\n      node {\n        id\n        agendaId\n        createdAt\n        sortOrder\n        ...NullableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n\nfragment DraggableTask_task on Task {\n  id\n  content\n  integration {\n    service\n  }\n  status\n  sortOrder\n  assignee {\n    __typename\n    id\n  }\n  ...NullableTask_task\n}\n\nfragment AgendaListAndInput_team on Team {\n  agendaItems {\n    id\n    content\n    teamMember {\n      id\n    }\n  }\n  ...AgendaInput_team\n  ...AgendaList_team\n}\n\nfragment AgendaInput_team on Team {\n  teamId: id\n  agendaItems {\n    sortOrder\n    id\n  }\n}\n\nfragment AgendaList_team on Team {\n  agendaItems {\n    id\n    content\n    isComplete\n    sortOrder\n    ...AgendaItem_agendaItem\n  }\n}\n\nfragment AgendaItem_agendaItem on AgendaItem {\n  id\n  content\n  isComplete\n  teamMember {\n    picture\n    id\n  }\n}\n\nfragment MeetingCheckInPrompt_team on Team {\n  teamMembers(sortBy: \"checkInOrder\") {\n    preferredName\n    picture\n    id\n  }\n  ...CheckInQuestion_team\n  ...MeetingCheckInGreeting_team\n}\n\nfragment CheckInQuestion_team on Team {\n  id\n  checkInQuestion\n}\n\nfragment MeetingCheckInGreeting_team on Team {\n  greeting: checkInGreeting {\n    content\n    language\n  }\n}\n\nfragment HelpTextForTeam_currentTeamMember on TeamMember {\n  preferredName\n  isCheckedIn\n}\n\nfragment AddTeamMemberAvatarButton_team on Team {\n  ...AddTeamMemberModal_team\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment MeetingAvatarMenu_avatar on TeamMember {\n  isCheckedIn\n  isConnected\n  preferredName\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n",
  "50f2e9848e9f0d377f77ed6c6f00cda4": "mutation ChangeTaskTeamMutation(\n  $taskId: ID!\n  $teamId: ID!\n) {\n  changeTaskTeam(taskId: $taskId, teamId: $teamId) {\n    error {\n      message\n    }\n    task {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n      editors {\n        userId\n        preferredName\n      }\n    }\n    removedNotification {\n      id\n    }\n    removedTaskId\n  }\n}\n",
  "d6d987b8d4985edfc15f3629e40d5a8a": "query OrgMembersPaginationQuery(\n  $first: Int!\n  $after: String\n  $orgId: ID!\n) {\n  viewer {\n    ...OrgMembers_viewer\n    id\n  }\n}\n\nfragment OrgMembers_viewer on User {\n  organization(orgId: $orgId) {\n    ...OrgMemberRow_organization\n    organizationUsers(first: $first, after: $after) {\n      edges {\n        cursor\n        node {\n          id\n          role\n          ...OrgMemberRow_organizationUser\n          __typename\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n    id\n  }\n}\n\nfragment OrgMemberRow_organization on Organization {\n  isViewerBillingLeader: isBillingLeader\n  orgId: id\n  tier\n  ...BillingLeaderActionMenu_organization\n}\n\nfragment OrgMemberRow_organizationUser on OrganizationUser {\n  user {\n    userId: id\n    email\n    inactive\n    picture\n    preferredName\n    id\n  }\n  role\n  newUserUntil\n  ...BillingLeaderActionMenu_organizationUser\n}\n\nfragment BillingLeaderActionMenu_organizationUser on OrganizationUser {\n  role\n  newUserUntil\n  user {\n    userId: id\n    preferredName\n    id\n  }\n}\n\nfragment BillingLeaderActionMenu_organization on Organization {\n  orgId: id\n}\n",
  "eb19295d0d9cbca08f1faebed6e15f3a": "mutation MeetingCheckInMutation(\n  $teamMemberId: ID!\n  $isCheckedIn: Boolean\n) {\n  meetingCheckIn(teamMemberId: $teamMemberId, isCheckedIn: $isCheckedIn) {\n    error {\n      message\n    }\n    teamMember {\n      isCheckedIn\n      id\n    }\n  }\n}\n",
  "5bf8f07d2ef7b3e8950ac4f09f4abaae": "query OrganizationsRootQuery {\n  viewer {\n    ...Organizations_viewer\n    id\n  }\n}\n\nfragment Organizations_viewer on User {\n  organizations {\n    id\n    isBillingLeader\n    orgUserCount {\n      activeUserCount\n      inactiveUserCount\n    }\n    name\n    picture\n    tier\n  }\n}\n",
  "fca3b8f2b7202a354bd1f462680b936e": "mutation UpdateOrgMutation(\n  $updatedOrg: UpdateOrgInput!\n) {\n  updateOrg(updatedOrg: $updatedOrg) {\n    error {\n      message\n    }\n    organization {\n      name\n      picture\n      id\n    }\n  }\n}\n",
  "925c4b725f65b1a829d2d1fc399f19e8": "subscription NotificationSubscription {\n  notificationSubscription {\n    __typename\n    ... on AcceptTeamInvitationPayload {\n      removedNotificationIds\n      team {\n        id\n        name\n        isPaid\n        meetingId\n        isArchived\n      }\n      teamLead {\n        suggestedActions {\n          __typename\n          ...SuggestedActionInviteYourTeam_suggestedAction\n          ...SuggestedActionTryTheDemo_suggestedAction\n          ...SuggestedActionTryRetroMeeting_suggestedAction\n          ...SuggestedActionTryActionMeeting_suggestedAction\n          ...SuggestedActionCreateNewTeam_suggestedAction\n          id\n        }\n        id\n      }\n    }\n    ... on AddOrgPayload {\n      removedSuggestedActionId\n    }\n    ... on AddTeamPayload {\n      removedSuggestedActionId\n    }\n    ... on ApproveToOrgPayload {\n      inviteeApprovedNotifications {\n        id\n        type\n        notificationId: id\n        inviteeEmail\n        team {\n          teamId: id\n          teamName: name\n          id\n        }\n      }\n      teamInviteNotifications {\n        type\n        id\n        team {\n          name\n          id\n          teamName: name\n        }\n        inviter {\n          preferredName\n          id\n          inviterName: preferredName\n        }\n        notificationId: id\n      }\n    }\n    ... on CancelApprovalPayload {\n      removedRequestNotification {\n        id\n      }\n    }\n    ... on ClearNotificationPayload {\n      notification {\n        __typename\n        id\n      }\n    }\n    ... on CreateTaskPayload {\n      involvementNotification {\n        id\n        changeAuthor {\n          preferredName\n          id\n        }\n        involvement\n        team {\n          id\n          name\n        }\n        task {\n          content\n          status\n          tags\n          assignee {\n            __typename\n            ... on TeamMember {\n              picture\n            }\n            preferredName\n            id\n          }\n          id\n        }\n      }\n    }\n    ... on DeleteTaskPayload {\n      involvementNotification {\n        id\n      }\n    }\n    ... on EndMeetingPayload {\n      removedSuggestedActionId\n    }\n    ... on EndNewMeetingPayload {\n      removedSuggestedActionId\n    }\n    ... on InviteTeamMembersPayload {\n      reactivationNotification {\n        type\n        team {\n          name\n          id\n          teamId: id\n          teamName: name\n        }\n        id\n        notificationId: id\n      }\n      teamInviteNotification {\n        type\n        team {\n          name\n          id\n          teamName: name\n        }\n        inviter {\n          preferredName\n          id\n          inviterName: preferredName\n        }\n        id\n        notificationId: id\n      }\n      removedRequestNotification {\n        id\n      }\n      requestNotification {\n        type\n        inviter {\n          preferredName\n          id\n          inviterName: preferredName\n        }\n        notificationId: id\n        inviteeEmail\n        orgId\n        team {\n          teamId: id\n          teamName: name\n          tier\n          id\n        }\n        id\n      }\n      team {\n        id\n        name\n        isPaid\n        meetingId\n        isArchived\n        teamMembers(sortBy: \"preferredName\") {\n          id\n          checkInOrder\n          isLead\n          isCheckedIn\n          isConnected\n          isNotRemoved\n          picture\n          preferredName\n          teamId\n          userId\n        }\n      }\n    }\n    ... on InviteToTeamPayload {\n      teamInvitationNotification {\n        id\n        type\n        team {\n          name\n          id\n        }\n        invitation {\n          inviter {\n            preferredName\n            id\n          }\n          token\n          id\n        }\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      removedTeamNotifications {\n        __typename\n        id\n      }\n      removedOrgNotifications {\n        __typename\n        id\n      }\n      organization {\n        name\n        id\n      }\n      kickOutNotifications {\n        id\n        type\n        notificationId: id\n        team {\n          id\n          name\n        }\n      }\n    }\n    ... on RejectOrgApprovalPayload {\n      deniedNotifications {\n        type\n        notificationId: id\n        deniedByName\n        inviteeEmail\n        reason\n        id\n      }\n      removedRequestNotifications {\n        id\n      }\n    }\n    ... on UpdateUserProfilePayload {\n      user {\n        preferredName\n        picture\n        id\n      }\n    }\n    ... on User {\n      id\n      isConnected\n      tms\n    }\n    ... on DisconnectSocketPayload {\n      user {\n        id\n        tms\n      }\n    }\n    ... on StripeFailPaymentPayload {\n      notification {\n        type\n        notificationId: id\n        organization {\n          orgId: id\n          creditCard {\n            last4\n            brand\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on AddFeatureFlagPayload {\n      user {\n        id\n        featureFlags {\n          retro\n        }\n      }\n    }\n    ... on AddNewFeaturePayload {\n      newFeature {\n        id\n        copy\n        url\n      }\n    }\n  }\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    name\n    ...AddTeamMemberModal_team\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n    id\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n",
  "d863c573cac63a156063af763a3db99a": "mutation UpdateReflectionContentMutation(\n  $content: String!\n  $reflectionId: ID!\n) {\n  updateReflectionContent(content: $content, reflectionId: $reflectionId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      id\n    }\n    reflection {\n      id\n      content\n    }\n  }\n}\n",
  "5dc839d01a997745ed542c42918f9398": "mutation SelectRetroTemplateMutation(\n  $teamId: ID!\n  $selectedTemplateId: ID!\n) {\n  selectRetroTemplate(teamId: $teamId, selectedTemplateId: $selectedTemplateId) {\n    retroMeetingSettings {\n      id\n      selectedTemplateId\n    }\n  }\n}\n",
  "db8ef75c67fe344da46ada8060d7a877": "query OrganizationRootQuery(\n  $orgId: ID!\n) {\n  viewer {\n    ...Organization_viewer\n    id\n  }\n}\n\nfragment Organization_viewer on User {\n  organization(orgId: $orgId) {\n    ...OrgPlanSqueeze_organization\n    ...EditableOrgName_organization\n    orgId: id\n    isBillingLeader\n    createdAt\n    name\n    orgUserCount {\n      activeUserCount\n      inactiveUserCount\n    }\n    picture\n    creditCard {\n      brand\n      expiry\n      last4\n    }\n    periodStart\n    periodEnd\n    tier\n    id\n  }\n}\n\nfragment OrgPlanSqueeze_organization on Organization {\n  orgId: id\n  isBillingLeader\n  billingLeaders {\n    billingLeaderId: id\n    email\n    preferredName\n    id\n  }\n  orgUserCount {\n    activeUserCount\n  }\n}\n\nfragment EditableOrgName_organization on Organization {\n  id\n  name\n}\n",
  "61792ded681551a1602e2070658ce895": "query TeamArchivePaginationQuery(\n  $first: Int!\n  $after: DateTime\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamArchive_viewer\n    id\n  }\n}\n\nfragment TeamArchive_viewer on User {\n  archivedTasks(first: $first, teamId: $teamId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        ...NullableTask_task\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n",
  "b987ca02ccc08ad18f119456d56f8121": "query OrgMembersRootQuery(\n  $orgId: ID!\n  $first: Int!\n  $after: String\n) {\n  viewer {\n    ...OrgMembers_viewer\n    id\n  }\n}\n\nfragment OrgMembers_viewer on User {\n  organization(orgId: $orgId) {\n    ...OrgMemberRow_organization\n    organizationUsers(first: $first, after: $after) {\n      edges {\n        cursor\n        node {\n          id\n          role\n          ...OrgMemberRow_organizationUser\n          __typename\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n    id\n  }\n}\n\nfragment OrgMemberRow_organization on Organization {\n  isViewerBillingLeader: isBillingLeader\n  orgId: id\n  tier\n  ...BillingLeaderActionMenu_organization\n}\n\nfragment OrgMemberRow_organizationUser on OrganizationUser {\n  user {\n    userId: id\n    email\n    inactive\n    picture\n    preferredName\n    id\n  }\n  role\n  newUserUntil\n  ...BillingLeaderActionMenu_organizationUser\n}\n\nfragment BillingLeaderActionMenu_organizationUser on OrganizationUser {\n  role\n  newUserUntil\n  user {\n    userId: id\n    preferredName\n    id\n  }\n}\n\nfragment BillingLeaderActionMenu_organization on Organization {\n  orgId: id\n}\n",
  "ee5dd0a64aa3a45fcd2ae56014a51ee3": "query OrgBillingRootQuery(\n  $orgId: ID!\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...OrgBilling_viewer\n    id\n  }\n}\n\nfragment OrgBilling_viewer on User {\n  invoices(first: $first, orgId: $orgId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        amountDue\n        endAt\n        paidAt\n        startAt\n        status\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "44d457fb52a31807572887047e9d7178": "mutation RenameReflectTemplatePromptMutation(\n  $promptId: ID!\n  $question: String!\n) {\n  renameReflectTemplatePrompt(promptId: $promptId, question: $question) {\n    error {\n      message\n    }\n    prompt {\n      question\n      id\n    }\n  }\n}\n",
  "c6a197b37403d612f6e79664ac35eb4c": "mutation VoteForReflectionGroupMutation(\n  $reflectionGroupId: ID!\n  $isUnvote: Boolean\n) {\n  voteForReflectionGroup(reflectionGroupId: $reflectionGroupId, isUnvote: $isUnvote) {\n    error {\n      message\n      title\n    }\n    meeting {\n      votesRemaining\n      id\n    }\n    meetingMember {\n      votesRemaining\n      id\n    }\n    reflectionGroup {\n      viewerVoteCount\n      voteCount\n      id\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "83042dc5b1f431ecbd753335b36c1eb9": "subscription OrgApprovalSubscription(\n  $teamId: ID!\n) {\n  orgApprovalSubscription(teamId: $teamId) {\n    __typename\n    ...ApproveToOrgMutation_orgApproval\n    ...CancelApprovalMutation_orgApproval\n    ...InviteTeamMembersMutation_orgApproval\n    ...RejectOrgApprovalMutation_orgApproval\n  }\n}\n\nfragment ApproveToOrgMutation_orgApproval on ApproveToOrgPayload {\n  removedOrgApprovals {\n    id\n    teamId\n  }\n}\n\nfragment CancelApprovalMutation_orgApproval on CancelApprovalPayload {\n  orgApproval {\n    id\n    teamId\n  }\n}\n\nfragment InviteTeamMembersMutation_orgApproval on InviteTeamMembersPayload {\n  orgApprovalsSent {\n    id\n    createdAt\n    email\n    teamId\n    notification {\n      id\n      inviter {\n        preferredName\n        id\n      }\n    }\n  }\n  orgApprovalsRemoved {\n    id\n    teamId\n  }\n}\n\nfragment RejectOrgApprovalMutation_orgApproval on RejectOrgApprovalPayload {\n  removedOrgApprovals {\n    id\n    teamId\n  }\n}\n",
  "e390e41a8ecc47bf86cdc738dcf05735": "mutation CreateOrgPicturePutUrlMutation(\n  $contentType: String!\n  $contentLength: Int!\n  $orgId: ID!\n) {\n  createOrgPicturePutUrl(contentType: $contentType, contentLength: $contentLength, orgId: $orgId) {\n    error {\n      message\n    }\n    url\n  }\n}\n",
  "fe04c898437329403e5397809eb29927": "mutation PromoteFacilitatorMutation(\n  $facilitatorId: ID!\n  $disconnectedFacilitatorId: ID\n) {\n  promoteFacilitator(facilitatorId: $facilitatorId, disconnectedFacilitatorId: $disconnectedFacilitatorId) {\n    error {\n      message\n    }\n    team {\n      activeFacilitator\n      id\n    }\n    disconnectedFacilitator {\n      preferredName\n      id\n    }\n    newFacilitator {\n      preferredName\n      userId\n      id\n    }\n  }\n}\n",
  "66cb06d1195e91e05a5a3f0610afcde6": "mutation UpgradeToProMutation(\n  $orgId: ID!\n  $stripeToken: ID!\n) {\n  upgradeToPro(orgId: $orgId, stripeToken: $stripeToken) {\n    error {\n      message\n    }\n    organization {\n      creditCard {\n        brand\n        last4\n        expiry\n      }\n      periodEnd\n      periodStart\n      updatedAt\n      id\n    }\n    teams {\n      isPaid\n      tier\n      id\n    }\n  }\n}\n",
  "53399b386d02b540cdc4d5729c88e5ce": "query OrgBillingPaginationQuery(\n  $first: Int!\n  $after: DateTime\n  $orgId: ID!\n) {\n  viewer {\n    ...OrgBilling_viewer\n    id\n  }\n}\n\nfragment OrgBilling_viewer on User {\n  invoices(first: $first, orgId: $orgId, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        amountDue\n        endAt\n        paidAt\n        startAt\n        status\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n",
  "ffb10743d3c7488e9ee0e70837c9fcbf": "mutation RemoveSlackChannelMutation(\n  $slackGlobalId: ID!\n) {\n  removeSlackChannel(slackGlobalId: $slackGlobalId) {\n    error {\n      message\n    }\n    deletedId\n  }\n}\n",
  "d73575d6ad1e82775efefcf33a2b0bfe": "query NewMeetingSummaryRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    ...NewMeetingSummary_viewer\n    id\n  }\n}\n\nfragment NewMeetingSummary_viewer on User {\n  newMeeting(meetingId: $meetingId) {\n    __typename\n    id\n    createdAt\n    meetingMembers {\n      __typename\n      id\n      isCheckedIn\n      user {\n        picture\n        preferredName\n        id\n      }\n      ... on RetrospectiveMeetingMember {\n        tasks {\n          id\n          content\n          status\n          tags\n        }\n      }\n    }\n    meetingNumber\n    meetingType\n    team {\n      id\n      name\n    }\n    ... on RetrospectiveMeeting {\n      reflectionGroups(sortBy: voteCount) {\n        id\n        title\n        voteCount\n        reflections {\n          id\n          content\n          sortOrder\n          phaseItem {\n            question\n            id\n          }\n        }\n      }\n    }\n  }\n}\n",
  "e274af9069ba054b4ab0c517feeefea8": "mutation ArchiveTeamMutation(\n  $teamId: ID!\n) {\n  archiveTeam(teamId: $teamId) {\n    error {\n      message\n    }\n    removedSuggestedActionIds\n    team {\n      id\n      name\n    }\n    notification {\n      id\n      type\n      ...TeamArchived_notification\n    }\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  notificationId: id\n  team {\n    teamName: name\n    id\n  }\n}\n",
  "8962d68f990e2ca87d17853e02a5ee78": "mutation MoveMeetingMutation(\n  $teamId: ID!\n  $nextPhase: ActionMeetingPhaseEnum\n  $nextPhaseItem: Int\n  $force: Boolean\n) {\n  moveMeeting(teamId: $teamId, nextPhase: $nextPhase, nextPhaseItem: $nextPhaseItem, force: $force) {\n    error {\n      message\n    }\n    completedAgendaItem {\n      isComplete\n      id\n    }\n    team {\n      facilitatorPhase\n      facilitatorPhaseItem\n      meetingPhase\n      meetingPhaseItem\n      id\n    }\n  }\n}\n",
  "2a8a2f98e5ad6d9b0bb4041a6ba8700d": "mutation UpdateCheckInQuestionMutation(\n  $teamId: ID!\n  $checkInQuestion: String!\n) {\n  updateCheckInQuestion(teamId: $teamId, checkInQuestion: $checkInQuestion) {\n    error {\n      message\n    }\n    team {\n      checkInQuestion\n      id\n    }\n  }\n}\n",
  "ba52a4dd4d9db31377f3df849c5f5693": "mutation DismissNewFeatureMutation {\n  dismissNewFeature {\n    error {\n      title\n    }\n  }\n}\n",
  "c165d9df79b28530070f1c88d2c0e1b3": "mutation JoinIntegrationMutation(\n  $globalId: ID!\n) {\n  joinIntegration(globalId: $globalId) {\n    error {\n      message\n    }\n    globalId\n    teamMember {\n      id\n      picture\n      preferredName\n    }\n  }\n}\n",
  "c839361c8431e315e9a017f41401b116": "mutation NavigateMeetingMutation(\n  $meetingId: ID!\n  $completedStageId: ID\n  $facilitatorStageId: ID\n) {\n  navigateMeeting(meetingId: $meetingId, completedStageId: $completedStageId, facilitatorStageId: $facilitatorStageId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      id\n      facilitatorStageId\n    }\n    oldFacilitatorStage {\n      __typename\n      id\n      isComplete\n    }\n    phaseComplete {\n      reflect {\n        emptyReflectionGroupIds\n      }\n      group {\n        meeting {\n          reflectionGroups {\n            id\n            title\n            meetingId\n            meeting {\n              id\n            }\n            retroPhaseItemId\n            phaseItem {\n              id\n            }\n            reflections {\n              id\n            }\n            sortOrder\n            viewerVoteCount\n            voteCount\n          }\n          id\n        }\n      }\n      vote {\n        meeting {\n          phases {\n            __typename\n            id\n            ... on DiscussPhase {\n              phaseType\n              stages {\n                id\n                isComplete\n                isNavigable\n                isNavigableByFacilitator\n                meetingId\n                phaseType\n                reflectionGroup {\n                  id\n                  tasks {\n                    id\n                  }\n                }\n                sortOrder\n              }\n            }\n          }\n          id\n        }\n      }\n    }\n    unlockedStages {\n      __typename\n      id\n      isNavigable\n      isNavigableByFacilitator\n    }\n  }\n}\n",
  "fa8509256e885d3db1986347ace11c34": "mutation AutoGroupReflectionsMutation(\n  $meetingId: ID!\n  $groupingThreshold: Float!\n) {\n  autoGroupReflections(meetingId: $meetingId, groupingThreshold: $groupingThreshold) {\n    meeting {\n      id\n      nextAutoGroupThreshold\n    }\n    reflections {\n      id\n      reflectionGroupId\n      sortOrder\n    }\n    reflectionGroups {\n      title\n      smartTitle\n      id\n    }\n    removedReflectionGroups {\n      id\n    }\n  }\n}\n",
  "c6cb765bd181c0a5b762e3a10e4ec492": "mutation RemoveOrgUserMutation(\n  $userId: ID!\n  $orgId: ID!\n) {\n  removeOrgUser(userId: $userId, orgId: $orgId) {\n    error {\n      message\n    }\n    organization {\n      id\n    }\n    user {\n      id\n    }\n    organizationUserId\n    teams {\n      id\n      newMeeting {\n        __typename\n        id\n        facilitatorStageId\n        facilitatorUserId\n        facilitator {\n          id\n          preferredName\n        }\n        meetingNumber\n        meetingType\n        teamId\n        phases {\n          __typename\n          id\n          phaseType\n          stages {\n            __typename\n            id\n            isComplete\n            isNavigable\n            isNavigableByFacilitator\n            ... on NewMeetingTeamMemberStage {\n              teamMemberId\n              teamMember {\n                meetingMember {\n                  __typename\n                  isCheckedIn\n                  id\n                }\n                id\n                picture\n                preferredName\n              }\n            }\n          }\n          ... on CheckInPhase {\n            checkInGreeting {\n              content\n              language\n            }\n            checkInQuestion\n          }\n          ... on ReflectPhase {\n            focusedPhaseItemId\n            reflectPrompts {\n              question\n              id\n            }\n          }\n          ... on DiscussPhase {\n            stages {\n              reflectionGroup {\n                id\n              }\n              sortOrder\n              id\n            }\n          }\n        }\n        viewerMeetingMember {\n          __typename\n          isCheckedIn\n          ... on RetrospectiveMeetingMember {\n            votesRemaining\n          }\n          id\n        }\n        ... on RetrospectiveMeeting {\n          reflectionGroups {\n            id\n            title\n            meetingId\n            meeting {\n              id\n            }\n            retroPhaseItemId\n            phaseItem {\n              id\n            }\n            reflections {\n              id\n              content\n              editorIds\n              isViewerCreator\n              meetingId\n              reflectionGroupId\n              retroReflectionGroup {\n                id\n              }\n              retroPhaseItemId\n              sortOrder\n              phaseItem {\n                id\n              }\n            }\n            sortOrder\n            viewerVoteCount\n            voteCount\n            tasks {\n              id\n              agendaId\n              content\n              createdAt\n              createdBy\n              dueDate\n              integration {\n                service\n                nameWithOwner\n                issueNumber\n              }\n              meetingId\n              reflectionGroupId\n              sortOrder\n              status\n              tags\n              updatedAt\n              userId\n              teamId\n              team {\n                id\n                name\n              }\n              assignee {\n                __typename\n                id\n                preferredName\n                ... on TeamMember {\n                  picture\n                }\n              }\n            }\n          }\n          votesRemaining\n          settings {\n            maxVotesPerGroup\n            totalVotes\n            id\n          }\n        }\n      }\n    }\n    teamMembers {\n      id\n    }\n    updatedTasks {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n    }\n  }\n}\n",
  "c1ca7222a19e3b2df89a88091da0427f": "subscription GitHubRepoRemovedSubscription(\n  $teamId: ID!\n) {\n  githubRepoRemoved(teamId: $teamId) {\n    deletedId\n  }\n}\n",
  "d2c21c979b072b10269ba640222bebf5": "subscription GitHubRepoAddedSubscription(\n  $teamId: ID!\n) {\n  githubRepoAdded(teamId: $teamId) {\n    repo {\n      id\n      adminUserId\n      nameWithOwner\n      teamMembers {\n        id\n        preferredName\n        picture\n      }\n    }\n  }\n}\n",
  "26635d29f9b704f05d69f209a15a0270": "mutation StartMeetingMutation(\n  $teamId: ID!\n) {\n  startMeeting(teamId: $teamId) {\n    error {\n      message\n    }\n    team {\n      checkInGreeting {\n        content\n        language\n      }\n      checkInQuestion\n      id\n      name\n      meetingId\n      activeFacilitator\n      facilitatorPhase\n      facilitatorPhaseItem\n      meetingPhase\n      meetingPhaseItem\n    }\n  }\n}\n",
  "711551c954af5f4394adcdd8e3765acf": "subscription NewAuthTokenSubscription {\n  newAuthToken\n}\n",
  "f0172438755e12c9b4593ea0d1c48e2c": "mutation DismissSuggestedActionMutation(\n  $suggestedActionId: ID!\n) {\n  dismissSuggestedAction(suggestedActionId: $suggestedActionId) {\n    error {\n      title\n    }\n  }\n}\n",
  "f3c8278b870a1a29fe44456508b258c0": "mutation SendClientSegmentEventMutation(\n  $event: String!\n  $options: SegmentEventTrackOptions\n) {\n  segmentEventTrack(event: $event, options: $options)\n}\n",
  "5b49ac6bee5f99d3af0c9b31be5dc070": "mutation CreateImposterTokenMutation(\n  $userId: ID!\n) {\n  createImposterToken(userId: $userId) {\n    error {\n      message\n    }\n    authToken\n    user {\n      id\n      email\n      preferredName\n    }\n  }\n}\n",
  "cd71ed41957176e741cf4b34da2172b8": "subscription SlackChannelRemovedSubscription(\n  $teamId: ID!\n) {\n  slackChannelRemoved(teamId: $teamId) {\n    deletedId\n  }\n}\n",
  "be64211d74000e97f1ddea601f48e16a": "subscription OrganizationSubscription {\n  organizationSubscription {\n    __typename\n    ... on AddOrgPayload {\n      organization {\n        id\n        isBillingLeader\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        tier\n      }\n      team {\n        id\n        name\n        isPaid\n        meetingId\n        isArchived\n        teamMembers(sortBy: \"preferredName\") {\n          id\n          checkInOrder\n          isLead\n          isCheckedIn\n          isConnected\n          isNotRemoved\n          picture\n          preferredName\n          teamId\n          userId\n        }\n      }\n    }\n    ... on ApproveToOrgPayload {\n      removedRequestNotifications {\n        id\n      }\n    }\n    ... on SetOrgUserRoleAddedPayload {\n      organization {\n        id\n        isBillingLeader\n        createdAt\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        creditCard {\n          brand\n          expiry\n          last4\n        }\n        periodStart\n        periodEnd\n        tier\n      }\n      notificationsAdded {\n        __typename\n        type\n        ... on NotifyPromoteToOrgLeader {\n          notificationId: id\n          organization {\n            orgId: id\n            orgName: name\n            id\n          }\n        }\n        ... on NotifyPaymentRejected {\n          notificationId: id\n          organization {\n            orgId: id\n            creditCard {\n              last4\n              brand\n            }\n            id\n          }\n        }\n        ... on NotifyRequestNewUser {\n          notificationId: id\n          inviter {\n            inviterName: preferredName\n            id\n          }\n          inviteeEmail\n          orgId\n          team {\n            teamId: id\n            teamName: name\n            tier\n            id\n          }\n        }\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on SetOrgUserRoleRemovedPayload {\n      organization {\n        id\n        isBillingLeader\n      }\n      notificationsRemoved {\n        __typename\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on UpdateCreditCardPayload {\n      organization {\n        creditCard {\n          brand\n          last4\n          expiry\n        }\n        updatedAt\n        id\n      }\n    }\n    ... on UpdateOrgPayload {\n      organization {\n        name\n        picture\n        id\n      }\n    }\n    ... on UpgradeToProPayload {\n      organization {\n        creditCard {\n          brand\n          last4\n          expiry\n        }\n        periodEnd\n        periodStart\n        updatedAt\n        id\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      organization {\n        id\n      }\n      user {\n        id\n      }\n      organizationUserId\n    }\n  }\n}\n",
  "702aff5ae511d6258b6b8c27b1196932": "subscription SlackChannelAddedSubscription(\n  $teamId: ID!\n) {\n  slackChannelAdded(teamId: $teamId) {\n    channel {\n      id\n      channelId\n      channelName\n    }\n  }\n}\n",
  "23823e6ca6d742ccdc3051469d966c97": "mutation PromoteNewMeetingFacilitatorMutation(\n  $facilitatorUserId: ID!\n  $meetingId: ID!\n) {\n  promoteNewMeetingFacilitator(facilitatorUserId: $facilitatorUserId, meetingId: $meetingId) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      facilitatorUserId\n      facilitator {\n        id\n        preferredName\n      }\n      id\n    }\n    oldFacilitator {\n      isConnected\n      preferredName\n      id\n    }\n  }\n}\n",
  "6e5706681ab03e60c4ba23017d15a5f0": "mutation RemoveTeamMemberMutation(\n  $teamMemberId: ID!\n) {\n  removeTeamMember(teamMemberId: $teamMemberId) {\n    error {\n      message\n    }\n    teamMember {\n      id\n      userId\n    }\n    updatedTasks {\n      id\n      tags\n      assigneeId\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n      userId\n    }\n    removedNotifications {\n      __typename\n      id\n    }\n    kickOutNotification {\n      id\n      type\n      notificationId: id\n      team {\n        id\n        name\n      }\n    }\n    team {\n      id\n      newMeeting {\n        __typename\n        phases {\n          __typename\n          stages {\n            __typename\n            id\n          }\n          id\n        }\n        id\n      }\n    }\n  }\n}\n",
  "ec7eede2e1b511c4064dd185451fa86b": "mutation UpdateNewCheckInQuestionMutation(\n  $meetingId: ID!\n  $checkInQuestion: String!\n) {\n  updateNewCheckInQuestion(meetingId: $meetingId, checkInQuestion: $checkInQuestion) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      phases {\n        __typename\n        ... on CheckInPhase {\n          checkInQuestion\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "9f64962158c82541d9da12656b1b8d16": "mutation CancelApprovalMutation(\n  $orgApprovalId: ID!\n) {\n  cancelApproval(orgApprovalId: $orgApprovalId) {\n    error {\n      message\n    }\n    removedRequestNotification {\n      id\n    }\n    orgApproval {\n      id\n      teamId\n    }\n    removedSoftTeamMember {\n      id\n      teamId\n    }\n    archivedSoftTasks {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n    }\n  }\n}\n",
  "448a1b3bdf120cd612481b91f15a8c6f": "query MyDashboardTasksRootQuery {\n  viewer {\n    ...MyDashboardTasks_viewer\n    id\n  }\n}\n\nfragment MyDashboardTasks_viewer on User {\n  ...UserColumnsContainer_viewer\n  ...UserTasksHeaderContainer_viewer\n}\n\nfragment UserColumnsContainer_viewer on User {\n  teams {\n    id\n    name\n    meetingId\n  }\n  tasks(first: 1000) {\n    edges {\n      node {\n        id\n        content\n        status\n        sortOrder\n        team {\n          id\n        }\n        ...DraggableTask_task\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserTasksHeaderContainer_viewer on User {\n  teams {\n    id\n    name\n    meetingId\n  }\n}\n\nfragment DraggableTask_task on Task {\n  id\n  content\n  integration {\n    service\n  }\n  status\n  sortOrder\n  assignee {\n    __typename\n    id\n  }\n  ...NullableTask_task\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n",
  "49aeff9dbece348ab0115f7b8a061b91": "mutation LeaveIntegrationMutation(\n  $globalId: ID!\n) {\n  leaveIntegration(globalId: $globalId) {\n    error {\n      message\n    }\n    globalId\n    userId\n  }\n}\n",
  "b42ebf94711ea450a1031f0b5af2e2af": "mutation RequestFacilitatorMutation(\n  $teamId: ID!\n) {\n  requestFacilitator(teamId: $teamId) {\n    error {\n      message\n    }\n    requestor {\n      id\n      preferredName\n    }\n  }\n}\n",
  "3c390b49c2546fe6c2aa684321bded4e": "query OutcomeCardAssignTeamMenuRootQuery {\n  viewer {\n    ...OutcomeCardAssignTeamMenu_viewer\n    id\n  }\n}\n\nfragment OutcomeCardAssignTeamMenu_viewer on User {\n  teams {\n    teamId: id\n    teamName: name\n    id\n  }\n}\n",
  "f7d098422807828d5c9a5a5b37f1e66f": "query UnpaidTeamModalRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...UnpaidTeamModal_viewer\n    id\n  }\n}\n\nfragment UnpaidTeamModal_viewer on User {\n  team(teamId: $teamId) {\n    organization {\n      orgId: id\n      billingLeaders {\n        id\n        preferredName\n      }\n      creditCard {\n        brand\n      }\n      orgName: name\n      id\n    }\n    teamName: name\n    id\n  }\n}\n",
  "3d8088e1c8ca89c035bfcbba1d9373ca": "query RetroRootQuery(\n  $teamId: ID!\n  $meetingType: MeetingTypeEnum!\n) {\n  viewer {\n    ...NewMeetingWithLocalState_viewer\n    id\n  }\n}\n\nfragment NewMeetingWithLocalState_viewer on User {\n  ...NewMeeting_viewer\n  team(teamId: $teamId) {\n    newMeeting {\n      __typename\n      facilitatorStageId\n      facilitatorUserId\n      meetingId: id\n      phases {\n        __typename\n        id\n        phaseType\n        stages {\n          __typename\n          id\n          isNavigable\n          isNavigableByFacilitator\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NewMeeting_viewer on User {\n  ...NewMeetingSidebar_viewer\n  team(teamId: $teamId) {\n    ...NewMeetingAvatarGroup_team\n    ...NewMeetingLobby_team\n    ...NewMeetingCheckIn_team\n    ...RetroReflectPhase_team\n    ...RetroGroupPhase_team\n    ...RetroVotePhase_team\n    ...RetroDiscussPhase_team\n    teamId: id\n    teamName: name\n    meetingId\n    tier\n    teamMembers(sortBy: \"checkInOrder\") {\n      id\n      preferredName\n      picture\n      checkInOrder\n      isConnected\n      isFacilitator\n      isLead\n      isSelf\n      userId\n    }\n    newMeeting {\n      __typename\n      meetingId: id\n      facilitatorStageId\n      facilitatorUserId\n      phases {\n        __typename\n        id\n        phaseType\n        stages {\n          __typename\n          id\n          isComplete\n          isNavigable\n          isNavigableByFacilitator\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NewMeetingSidebar_viewer on User {\n  ...NewMeetingSidebarPhaseList_viewer\n  team(teamId: $teamId) {\n    teamId: id\n    teamName: name\n    id\n  }\n}\n\nfragment NewMeetingAvatarGroup_team on Team {\n  teamId: id\n  ...AddTeamMemberAvatarButton_team\n  teamMembers(sortBy: \"checkInOrder\") {\n    ...AddTeamMemberAvatarButton_teamMembers\n    id\n    ...NewMeetingAvatar_teamMember\n  }\n  newMeeting {\n    __typename\n    facilitatorStageId\n    phases {\n      __typename\n      phaseType\n      stages {\n        __typename\n        id\n        ... on NewMeetingTeamMemberStage {\n          teamMemberId\n        }\n      }\n      id\n    }\n    ...NewMeetingAvatar_newMeeting\n    id\n  }\n}\n\nfragment NewMeetingLobby_team on Team {\n  teamId: id\n  teamName: name\n  meetingSettings(meetingType: $meetingType) {\n    __typename\n    ...RetroTemplatePicker_settings\n    id\n  }\n}\n\nfragment NewMeetingCheckIn_team on Team {\n  ...NewMeetingCheckInPrompt_team\n  newMeeting {\n    __typename\n    meetingId: id\n    facilitatorStageId\n    facilitator {\n      facilitatorUserId: id\n      facilitatorName: preferredName\n      id\n    }\n    phases {\n      __typename\n      phaseType\n      stages {\n        __typename\n        id\n        ... on CheckInStage {\n          teamMember {\n            id\n            isSelf\n            meetingMember {\n              __typename\n              isCheckedIn\n              id\n            }\n            preferredName\n            userId\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n  teamId: id\n}\n\nfragment RetroReflectPhase_team on Team {\n  newMeeting {\n    __typename\n    ...PhaseItemColumn_meeting\n    meetingId: id\n    facilitatorUserId\n    ... on RetrospectiveMeeting {\n      reflectionGroups {\n        id\n      }\n      phases {\n        __typename\n        ... on ReflectPhase {\n          reflectPrompts {\n            retroPhaseItemId: id\n            question\n            id\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment RetroGroupPhase_team on Team {\n  newMeeting {\n    __typename\n    meetingId: id\n    facilitatorUserId\n    ...PhaseItemColumn_meeting\n    ... on RetrospectiveMeeting {\n      ...PhaseItemMasonry_meeting\n      nextAutoGroupThreshold\n      reflectionGroups {\n        id\n        meetingId\n        sortOrder\n        retroPhaseItemId\n        reflections {\n          id\n          retroPhaseItemId\n          sortOrder\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment RetroVotePhase_team on Team {\n  meetingSettings(meetingType: $meetingType) {\n    __typename\n    ... on RetrospectiveMeetingSettings {\n      totalVotes\n    }\n    id\n  }\n  newMeeting {\n    __typename\n    meetingId: id\n    facilitatorUserId\n    ...PhaseItemColumn_meeting\n    phases {\n      __typename\n      phaseType\n      ... on DiscussPhase {\n        stages {\n          id\n          isNavigableByFacilitator\n        }\n      }\n      id\n    }\n    viewerMeetingMember {\n      __typename\n      ... on RetrospectiveMeetingMember {\n        myVotesRemaining: votesRemaining\n      }\n      id\n    }\n    ... on RetrospectiveMeeting {\n      teamVotesRemaining: votesRemaining\n      ...PhaseItemMasonry_meeting\n    }\n    id\n  }\n}\n\nfragment RetroDiscussPhase_team on Team {\n  teamId: id\n  newMeeting {\n    __typename\n    meetingId: id\n    facilitatorUserId\n    phases {\n      __typename\n      stages {\n        __typename\n        id\n        ... on RetroDiscussStage {\n          reflectionGroup {\n            id\n            tasks {\n              ...NullableTask_task\n              id\n            }\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NullableTask_task on Task {\n  content\n  createdBy\n  status\n  assignee {\n    __typename\n    ... on TeamMember {\n      preferredName\n    }\n    id\n  }\n  ...OutcomeCardContainer_task\n}\n\nfragment OutcomeCardContainer_task on Task {\n  editors {\n    userId\n  }\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n  ...OutcomeCard_task\n}\n\nfragment OutcomeCard_task on Task {\n  taskId: id\n  integration {\n    service\n    ...TaskIntegrationLink_integration\n  }\n  status\n  tags\n  team {\n    teamId: id\n    id\n  }\n  userId\n  ...EditingStatusContainer_task\n  ...OutcomeCardFooter_task\n}\n\nfragment TaskIntegrationLink_integration on GitHubTask {\n  issueNumber\n  nameWithOwner\n}\n\nfragment EditingStatusContainer_task on Task {\n  createdAt\n  updatedAt\n  ...EditingStatus_task\n}\n\nfragment OutcomeCardFooter_task on Task {\n  taskId: id\n  content\n  assignee {\n    __typename\n    ... on TeamMember {\n      picture\n    }\n    preferredName\n    id\n  }\n  integration {\n    service\n  }\n  tags\n  team {\n    teamId: id\n    teamName: name\n    id\n  }\n  ...OutcomeCardAssignTeamMenu_task\n  ...OutcomeCardAssignMenu_task\n  ...OutcomeCardStatusMenu_task\n}\n\nfragment OutcomeCardAssignTeamMenu_task on Task {\n  taskId: id\n  team {\n    teamId: id\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_task on Task {\n  taskId: id\n  assignee {\n    __typename\n    assigneeId: id\n    id\n  }\n}\n\nfragment OutcomeCardStatusMenu_task on Task {\n  taskId: id\n  taskStatus: status\n  teamId\n}\n\nfragment EditingStatus_task on Task {\n  editors {\n    userId\n    preferredName\n  }\n  ...DueDateToggle_task\n}\n\nfragment DueDateToggle_task on Task {\n  dueDate\n  ...DueDatePicker_task\n}\n\nfragment DueDatePicker_task on Task {\n  taskId: id\n  dueDate\n}\n\nfragment PhaseItemColumn_meeting on RetrospectiveMeeting {\n  facilitatorUserId\n  meetingId: id\n  phases {\n    __typename\n    id\n    phaseType\n    stages {\n      __typename\n      isComplete\n      id\n    }\n    ... on ReflectPhase {\n      focusedPhaseItemId\n    }\n  }\n  reflectionGroups {\n    id\n    ...ReflectionGroup_reflectionGroup\n    retroPhaseItemId\n    sortOrder\n    reflections {\n      ...ReflectionCard_reflection\n      content\n      id\n      isEditing\n      isViewerCreator\n      sortOrder\n    }\n  }\n}\n\nfragment PhaseItemMasonry_meeting on RetrospectiveMeeting {\n  ...ReflectionGroup_meeting\n  meetingId: id\n  reflectionGroups {\n    ...ReflectionGroup_reflectionGroup\n    reflectionGroupId: id\n    meetingId\n    sortOrder\n    retroPhaseItemId\n    reflections {\n      reflectionId: id\n      retroPhaseItemId\n      sortOrder\n      dragContext {\n        dragId: id\n        id\n      }\n      id\n    }\n    id\n  }\n  teamId\n}\n\nfragment ReflectionGroup_meeting on RetrospectiveMeeting {\n  meetingId: id\n  ...ReflectionGroupHeader_meeting\n}\n\nfragment ReflectionGroup_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupHeader_reflectionGroup\n  retroPhaseItemId\n  reflectionGroupId: id\n  sortOrder\n  reflections {\n    id\n    retroPhaseItemId\n    sortOrder\n    ...DraggableReflectionCard_reflection\n    ...ReflectionCard_reflection\n  }\n}\n\nfragment ReflectionGroupHeader_reflectionGroup on RetroReflectionGroup {\n  ...ReflectionGroupTitleEditor_reflectionGroup\n  ...ReflectionGroupVoting_reflectionGroup\n  reflections {\n    id\n  }\n}\n\nfragment DraggableReflectionCard_reflection on RetroReflection {\n  content\n  meetingId\n  reflectionId: id\n  reflectionGroupId\n  retroPhaseItemId\n  dragContext {\n    dragId: id\n    dragUserId\n    id\n  }\n  ...ReflectionCard_reflection\n  ...ReflectionCardInFlight_reflection\n}\n\nfragment ReflectionCard_reflection on RetroReflection {\n  reflectionId: id\n  reflectionGroupId\n  content\n  phaseItem {\n    question\n    id\n  }\n  sortOrder\n}\n\nfragment ReflectionCardInFlight_reflection on RetroReflection {\n  meetingId\n  reflectionId: id\n  reflectionGroupId\n  content\n  dragContext {\n    dragCoords {\n      x\n      y\n    }\n    dragUser {\n      id\n      ...UserDraggingHeader_user\n    }\n    id\n  }\n  phaseItem {\n    question\n    id\n  }\n}\n\nfragment UserDraggingHeader_user on User {\n  userId: id\n  preferredName\n}\n\nfragment ReflectionGroupTitleEditor_reflectionGroup on RetroReflectionGroup {\n  reflectionGroupId: id\n  title\n}\n\nfragment ReflectionGroupVoting_reflectionGroup on RetroReflectionGroup {\n  reflectionGroupId: id\n  viewerVoteCount\n}\n\nfragment ReflectionGroupHeader_meeting on RetrospectiveMeeting {\n  ...ReflectionGroupTitleEditor_meeting\n  ...ReflectionGroupVoting_meeting\n}\n\nfragment ReflectionGroupTitleEditor_meeting on RetrospectiveMeeting {\n  reflectionGroups {\n    id\n    title\n  }\n}\n\nfragment ReflectionGroupVoting_meeting on RetrospectiveMeeting {\n  meetingId: id\n  viewerMeetingMember {\n    isCheckedIn\n    votesRemaining\n    id\n  }\n  settings {\n    maxVotesPerGroup\n    totalVotes\n    id\n  }\n}\n\nfragment NewMeetingCheckInPrompt_team on Team {\n  ...NewCheckInQuestion_team\n  newMeeting {\n    __typename\n    phases {\n      __typename\n      ... on CheckInPhase {\n        checkInGreeting {\n          ...NewMeetingCheckInGreeting_checkInGreeting\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NewCheckInQuestion_team on Team {\n  id\n  newMeeting {\n    __typename\n    meetingId: id\n    facilitatorUserId\n    phases {\n      __typename\n      ... on CheckInPhase {\n        checkInQuestion\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NewMeetingCheckInGreeting_checkInGreeting on MeetingGreeting {\n  content\n  language\n}\n\nfragment RetroTemplatePicker_settings on RetrospectiveMeetingSettings {\n  ...RetroTemplateListMenu_retroMeetingSettings\n  ...ReflectTemplateModal_retroMeetingSettings\n  selectedTemplateId\n  reflectTemplates {\n    id\n    name\n    lastUsedAt\n  }\n}\n\nfragment RetroTemplateListMenu_retroMeetingSettings on RetrospectiveMeetingSettings {\n  selectedTemplateId\n  teamId\n}\n\nfragment ReflectTemplateModal_retroMeetingSettings on RetrospectiveMeetingSettings {\n  settingsId: id\n  reflectTemplates {\n    ...AddNewReflectTemplate_reflectTemplates\n    id\n    name\n    prompts {\n      ...TemplatePromptList_prompts\n      ...AddTemplatePrompt_prompts\n      id\n      sortOrder\n    }\n  }\n  selectedTemplateId\n  teamId\n}\n\nfragment AddNewReflectTemplate_reflectTemplates on ReflectTemplate {\n  name\n}\n\nfragment TemplatePromptList_prompts on RetroPhaseItem {\n  id\n  sortOrder\n  question\n  ...TemplatePromptItem_prompt\n  ...EditableTemplatePrompt_prompts\n}\n\nfragment AddTemplatePrompt_prompts on RetroPhaseItem {\n  sortOrder\n}\n\nfragment TemplatePromptItem_prompt on RetroPhaseItem {\n  id\n  question\n}\n\nfragment EditableTemplatePrompt_prompts on RetroPhaseItem {\n  id\n  question\n}\n\nfragment AddTeamMemberAvatarButton_team on Team {\n  ...AddTeamMemberModal_team\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment NewMeetingAvatar_teamMember on TeamMember {\n  teamMemberId: id\n  meetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n  isConnected\n  isSelf\n  picture\n  userId\n  ...NewMeetingAvatarMenu_teamMember\n}\n\nfragment NewMeetingAvatar_newMeeting on NewMeeting {\n  facilitatorUserId\n  ...NewMeetingAvatarMenu_newMeeting\n}\n\nfragment NewMeetingAvatarMenu_newMeeting on NewMeeting {\n  meetingId: id\n  facilitatorUserId\n}\n\nfragment NewMeetingAvatarMenu_teamMember on TeamMember {\n  meetingMember {\n    __typename\n    isCheckedIn\n    id\n  }\n  isConnected\n  isSelf\n  preferredName\n  userId\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n\nfragment NewMeetingSidebarPhaseList_viewer on User {\n  ...NewMeetingSidebarPhaseListItemChildren_viewer\n  viewerId: id\n  team(teamId: $teamId) {\n    teamId: id\n    meetingSettings(meetingType: $meetingType) {\n      __typename\n      phaseTypes\n      id\n    }\n    newMeeting {\n      __typename\n      meetingId: id\n      facilitatorUserId\n      facilitatorStageId\n      phases {\n        __typename\n        phaseType\n        stages {\n          __typename\n          id\n          isComplete\n          isNavigable\n          isNavigableByFacilitator\n        }\n        id\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment NewMeetingSidebarPhaseListItemChildren_viewer on User {\n  ...RetroSidebarDiscussSection_viewer\n}\n\nfragment RetroSidebarDiscussSection_viewer on User {\n  team(teamId: $teamId) {\n    teamId: id\n    newMeeting {\n      __typename\n      meetingId: id\n      ... on RetrospectiveMeeting {\n        facilitatorStageId\n        phases {\n          __typename\n          ... on DiscussPhase {\n            stages {\n              id\n              isComplete\n              isNavigable\n              reflectionGroup {\n                title\n                voteCount\n                id\n              }\n              sortOrder\n            }\n          }\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n}\n",
  "ccd6678b31b91670d1045b382be28a0a": "query AnalyticsIdentifierRootQuery {\n  viewer {\n    viewerId: id\n    created: createdAt\n    avatar: picture\n    name: preferredName\n    email\n    id\n  }\n}\n",
  "d9bb3f3e8ad9313d192f97efe95715ef": "mutation ToggleAgendaListMutation(\n  $teamId: ID!\n) {\n  toggleAgendaList(teamId: $teamId) {\n    hideAgenda\n    id\n  }\n}\n",
  "cd75dbe0473ec41c10cc1ec617f08b69": "query MeetingSummaryRootQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    ...MeetingSummary_viewer\n    id\n  }\n}\n\nfragment MeetingSummary_viewer on User {\n  meeting(meetingId: $meetingId) {\n    createdAt\n    id\n    teamId\n    teamName\n    meetingNumber\n    agendaItemsCompleted\n    invitees {\n      id\n      present\n      tasks {\n        id\n        content\n        status\n        assigneeId\n        tags\n      }\n      picture\n      preferredName\n    }\n    successExpression\n    successStatement\n  }\n}\n",
  "907afd3fc77e31fce788835469085693": "mutation EditReflectionMutation(\n  $phaseItemId: ID!\n  $isEditing: Boolean!\n) {\n  editReflection(phaseItemId: $phaseItemId, isEditing: $isEditing) {\n    editorId\n    isEditing\n    phaseItemId\n  }\n}\n",
  "aa8627ddb2ec1db6841d171d018c4bd5": "subscription TeamMemberSubscription {\n  teamMemberSubscription {\n    __typename\n    ... on AcceptTeamInvitePayload {\n      teamMember {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n      team {\n        name\n        newMeeting {\n          __typename\n          id\n          facilitatorStageId\n          facilitatorUserId\n          facilitator {\n            id\n            preferredName\n          }\n          meetingNumber\n          meetingType\n          teamId\n          phases {\n            __typename\n            id\n            phaseType\n            stages {\n              __typename\n              id\n              isComplete\n              isNavigable\n              isNavigableByFacilitator\n              ... on NewMeetingTeamMemberStage {\n                teamMemberId\n                teamMember {\n                  meetingMember {\n                    __typename\n                    isCheckedIn\n                    id\n                  }\n                  id\n                  picture\n                  preferredName\n                }\n              }\n            }\n            ... on CheckInPhase {\n              checkInGreeting {\n                content\n                language\n              }\n              checkInQuestion\n            }\n            ... on ReflectPhase {\n              focusedPhaseItemId\n              reflectPrompts {\n                question\n                id\n              }\n            }\n            ... on DiscussPhase {\n              stages {\n                reflectionGroup {\n                  id\n                }\n                sortOrder\n                id\n              }\n            }\n          }\n          viewerMeetingMember {\n            __typename\n            isCheckedIn\n            ... on RetrospectiveMeetingMember {\n              votesRemaining\n            }\n            id\n          }\n          ... on RetrospectiveMeeting {\n            reflectionGroups {\n              id\n              title\n              meetingId\n              meeting {\n                id\n              }\n              retroPhaseItemId\n              phaseItem {\n                id\n              }\n              reflections {\n                id\n                content\n                editorIds\n                isViewerCreator\n                meetingId\n                reflectionGroupId\n                retroReflectionGroup {\n                  id\n                }\n                retroPhaseItemId\n                sortOrder\n                phaseItem {\n                  id\n                }\n              }\n              sortOrder\n              viewerVoteCount\n              voteCount\n              tasks {\n                id\n                agendaId\n                content\n                createdAt\n                createdBy\n                dueDate\n                integration {\n                  service\n                  nameWithOwner\n                  issueNumber\n                }\n                meetingId\n                reflectionGroupId\n                sortOrder\n                status\n                tags\n                updatedAt\n                userId\n                teamId\n                team {\n                  id\n                  name\n                }\n                assignee {\n                  __typename\n                  id\n                  preferredName\n                  ... on TeamMember {\n                    picture\n                  }\n                }\n              }\n            }\n            votesRemaining\n            settings {\n              maxVotesPerGroup\n              totalVotes\n              id\n            }\n          }\n        }\n        id\n      }\n      removedSoftTeamMember {\n        id\n        teamId\n      }\n    }\n    ... on CancelApprovalPayload {\n      removedSoftTeamMember {\n        id\n        teamId\n      }\n    }\n    ... on InviteTeamMembersPayload {\n      reactivatedTeamMembers {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n      team {\n        name\n        id\n      }\n      newSoftTeamMembers {\n        id\n        email\n        preferredName\n        teamId\n      }\n    }\n    ... on MeetingCheckInPayload {\n      teamMember {\n        isCheckedIn\n        id\n      }\n    }\n    ... on RejectOrgApprovalPayload {\n      removedSoftTeamMembers {\n        id\n        teamId\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      teamMembers {\n        id\n      }\n      user {\n        id\n      }\n    }\n    ... on RemoveTeamMemberPayload {\n      teamMember {\n        id\n      }\n    }\n    ... on UpdateUserProfilePayload {\n      teamMembers {\n        preferredName\n        picture\n        id\n      }\n    }\n  }\n}\n",
  "880983b00867b7dfd2d0fe5dffbe04f7": "mutation RemoveProviderMutation(\n  $providerId: ID!\n  $teamId: ID!\n) {\n  removeProvider(providerId: $providerId, teamId: $teamId) {\n    error {\n      message\n    }\n    providerRow {\n      service\n      accessToken\n      userCount\n      integrationCount\n      id\n    }\n    deletedIntegrationIds\n    userId\n  }\n}\n",
  "7b8a3ab8dd5d1736bec57eb4a0558a41": "query NewTeamRootQuery {\n  viewer {\n    ...NewTeam_viewer\n    id\n  }\n}\n\nfragment NewTeam_viewer on User {\n  organizations {\n    id\n    ...NewTeamForm_organizations\n  }\n}\n\nfragment NewTeamForm_organizations on Organization {\n  ...NewTeamOrgPicker_organizations\n  id\n  teams {\n    name\n    id\n  }\n}\n\nfragment NewTeamOrgPicker_organizations on Organization {\n  ...NewTeamOrgDropdown_organizations\n  id\n  name\n  tier\n}\n\nfragment NewTeamOrgDropdown_organizations on Organization {\n  id\n  name\n  tier\n}\n",
  "cbbc68f18ed108c4c718a77e5da831cb": "query OutcomeCardAssignMenuRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...OutcomeCardAssignMenu_viewer\n    id\n  }\n}\n\nfragment OutcomeCardAssignMenu_viewer on User {\n  team(teamId: $teamId) {\n    teamId: id\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n    }\n    softTeamMembers {\n      id\n      preferredName\n    }\n    id\n  }\n}\n",
  "e1b455dbc5861dc9ecf73c728496c9dd": "mutation AddReflectTemplateMutation(\n  $teamId: ID!\n) {\n  addReflectTemplate(teamId: $teamId) {\n    reflectTemplate {\n      id\n      name\n      teamId\n      prompts {\n        question\n        sortOrder\n        id\n      }\n    }\n  }\n}\n",
  "528f6f9150e6c1e656faf273a34685a5": "mutation NewMeetingCheckInMutation(\n  $meetingId: ID!\n  $userId: ID!\n  $isCheckedIn: Boolean\n) {\n  newMeetingCheckIn(meetingId: $meetingId, userId: $userId, isCheckedIn: $isCheckedIn) {\n    error {\n      message\n    }\n    meeting {\n      __typename\n      ... on RetrospectiveMeeting {\n        votesRemaining\n      }\n      id\n    }\n    meetingMember {\n      __typename\n      isCheckedIn\n      id\n    }\n  }\n}\n",
  "03e384e4e059f8440462592f8be3c759": "mutation EndMeetingMutation(\n  $teamId: ID!\n) {\n  endMeeting(teamId: $teamId) {\n    error {\n      message\n    }\n    team {\n      id\n      activeFacilitator\n      meetingId\n      meetingPhase\n      meetingPhaseItem\n      facilitatorPhase\n      facilitatorPhaseItem\n    }\n    meeting {\n      id\n    }\n    archivedTasks {\n      id\n      tags\n      teamId\n    }\n  }\n}\n",
  "ee31d954f682a1aa5abed7880fd06e0f": "mutation RejectOrgApprovalMutation(\n  $notificationId: ID!\n  $reason: String!\n) {\n  rejectOrgApproval(notificationId: $notificationId, reason: $reason) {\n    error {\n      message\n    }\n    removedOrgApprovals {\n      id\n      teamId\n    }\n    deniedNotifications {\n      type\n      notificationId: id\n      deniedByName\n      inviteeEmail\n      reason\n      id\n    }\n    removedRequestNotifications {\n      id\n    }\n  }\n}\n",
  "e9c94bfd1fb8910ab864ee4d82b533d8": "mutation LoginMutation(\n  $auth0Token: String!\n  $invitationToken: ID\n  $segmentId: ID\n  $isOrganic: Boolean!\n) {\n  login(auth0Token: $auth0Token, segmentId: $segmentId, isOrganic: $isOrganic) {\n    error {\n      message\n    }\n    authToken\n    user {\n      tms\n      id\n      email\n      picture\n      preferredName\n      createdAt\n    }\n  }\n  acceptTeamInvitation(invitationToken: $invitationToken) {\n    authToken\n    team {\n      id\n      activeFacilitator\n      meetingId\n    }\n  }\n}\n",
  "0415026682669c277e33390a6b5d5196": "mutation CreateTaskMutation(\n  $newTask: CreateTaskInput!\n  $area: AreaEnum\n) {\n  createTask(newTask: $newTask, area: $area) {\n    error {\n      message\n    }\n    task {\n      id\n      agendaId\n      content\n      createdAt\n      createdBy\n      dueDate\n      integration {\n        service\n        nameWithOwner\n        issueNumber\n      }\n      meetingId\n      reflectionGroupId\n      sortOrder\n      status\n      tags\n      updatedAt\n      userId\n      teamId\n      team {\n        id\n        name\n      }\n      assignee {\n        __typename\n        id\n        preferredName\n        ... on TeamMember {\n          picture\n        }\n      }\n    }\n  }\n}\n",
  "95546b41106ade81e6d343314a3738ad": "mutation DragDiscussionTopicMutation(\n  $meetingId: ID!\n  $stageId: ID!\n  $sortOrder: Float!\n) {\n  dragDiscussionTopic(meetingId: $meetingId, stageId: $stageId, sortOrder: $sortOrder) {\n    stage {\n      id\n      sortOrder\n    }\n    meeting {\n      __typename\n      id\n    }\n  }\n}\n",
  "3777332508071148056e9745c818dcbe": "subscription InvitationSubscription(\n  $teamId: ID!\n) {\n  invitationSubscription(teamId: $teamId) {\n    __typename\n    ...AcceptTeamInviteMutation_invitation\n    ...ApproveToOrgMutation_invitation\n    ...InviteTeamMembersMutation_invitation\n  }\n}\n\nfragment AcceptTeamInviteMutation_invitation on AcceptTeamInvitePayload {\n  removedInvitation {\n    id\n    teamId\n  }\n}\n\nfragment ApproveToOrgMutation_invitation on ApproveToOrgPayload {\n  newInvitations {\n    id\n    email\n    teamId\n    updatedAt\n  }\n}\n\nfragment InviteTeamMembersMutation_invitation on InviteTeamMembersPayload {\n  invitationsSent {\n    id\n    email\n    teamId\n    updatedAt\n  }\n}\n",
  "84baabd1026a1343b6e6eece5ef4fc67": "mutation AddSlackChannelMutation(\n  $input: AddSlackChannelInput!\n) {\n  addSlackChannel(input: $input) {\n    error {\n      message\n    }\n    channel {\n      channelId\n      channelName\n      id\n    }\n  }\n}\n",
  "245c27b7149f3b705cca0a1bf5e1e80c": "mutation MoveReflectTemplatePromptMutation(\n  $promptId: ID!\n  $sortOrder: String!\n) {\n  moveReflectTemplatePrompt(promptId: $promptId, sortOrder: $sortOrder) {\n    error {\n      message\n    }\n    prompt {\n      sortOrder\n      templateId\n      id\n    }\n  }\n}\n",
  "d9c7c8dfe1ea8c3ccc280f636dd733bd": "query TeamRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamContainer_viewer\n    id\n  }\n}\n\nfragment TeamContainer_viewer on User {\n  team(teamId: $teamId) {\n    ...Team_team\n    ...TeamArchive_team\n    id\n  }\n}\n\nfragment Team_team on Team {\n  teamId: id\n  teamName: name\n  isPaid\n  meetingId\n  newMeeting {\n    __typename\n    id\n    meetingType\n  }\n  ...DashboardAvatars_team\n  ...EditableTeamName_team\n}\n\nfragment TeamArchive_team on Team {\n  teamName: name\n  orgId\n}\n\nfragment DashboardAvatars_team on Team {\n  id\n  isLead\n  ...AddTeamMemberAvatarButton_team\n  teamMembers(sortBy: \"preferredName\") {\n    ...AddTeamMemberAvatarButton_teamMembers\n    ...TeamMemberAvatarMenu_teamMember\n    ...DashboardAvatar_teamMember\n    id\n  }\n}\n\nfragment EditableTeamName_team on Team {\n  teamId: id\n  teamName: name\n  organization {\n    teams {\n      id\n      name\n    }\n    id\n  }\n}\n\nfragment AddTeamMemberAvatarButton_team on Team {\n  ...AddTeamMemberModal_team\n}\n\nfragment AddTeamMemberAvatarButton_teamMembers on TeamMember {\n  ...AddTeamMemberModal_teamMembers\n}\n\nfragment TeamMemberAvatarMenu_teamMember on TeamMember {\n  isConnected\n  isSelf\n  preferredName\n  userId\n  isLead\n  ...LeaveTeamModal_teamMember\n  ...PromoteTeamMemberModal_teamMember\n  ...RemoveTeamMemberModal_teamMember\n}\n\nfragment DashboardAvatar_teamMember on TeamMember {\n  isCheckedIn\n  isConnected\n  isLead\n  isSelf\n  picture\n}\n\nfragment LeaveTeamModal_teamMember on TeamMember {\n  teamMemberId: id\n}\n\nfragment PromoteTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment RemoveTeamMemberModal_teamMember on TeamMember {\n  teamMemberId: id\n  preferredName\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n",
  "9ad739231169ac5e6e57c8f8d0286287": "mutation UpdateTaskDueDateMutation(\n  $taskId: ID!\n  $dueDate: DateTime\n) {\n  updateTaskDueDate(taskId: $taskId, dueDate: $dueDate) {\n    error {\n      message\n    }\n    task {\n      id\n      dueDate\n    }\n  }\n}\n",
  "f7b3e59542e4a3ad90e3b266264d739b": "query ExportToCSVQuery(\n  $meetingId: ID!\n) {\n  viewer {\n    newMeeting(meetingId: $meetingId) {\n      __typename\n      team {\n        name\n        id\n      }\n      endedAt\n      ... on RetrospectiveMeeting {\n        reflectionGroups {\n          reflections {\n            content\n            id\n          }\n          tasks {\n            content\n            id\n          }\n          title\n          voteCount\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n}\n",
  "3da5421fa34d170920e54d502019d490": "mutation PromoteToTeamLeadMutation(\n  $teamMemberId: ID!\n) {\n  promoteToTeamLead(teamMemberId: $teamMemberId) {\n    error {\n      message\n    }\n    ...PromoteToTeamLeadMutation_team\n  }\n}\n\nfragment PromoteToTeamLeadMutation_team on PromoteToTeamLeadPayload {\n  team {\n    isLead\n    id\n  }\n  oldLeader {\n    isLead\n    id\n  }\n  newLeader {\n    isLead\n    id\n  }\n}\n",
  "da3da8f3549427f0865ecb4aaaf3c279": "mutation RemoveAgendaItemMutation(\n  $agendaItemId: ID!\n) {\n  removeAgendaItem(agendaItemId: $agendaItemId) {\n    error {\n      message\n    }\n    agendaItem {\n      id\n    }\n  }\n}\n",
  "fd87df08d54c7ac693c4a6e761c3f5d8": "query UserSettingsRootQuery {\n  viewer {\n    ...UserSettings_viewer\n    id\n  }\n}\n\nfragment UserSettings_viewer on User {\n  preferredName\n  picture\n}\n",
  "e923e43e683057654ccb14833cf004e2": "mutation AddOrgMutation(\n  $newTeam: NewTeamInput!\n  $orgName: String!\n) {\n  addOrg(newTeam: $newTeam, orgName: $orgName) {\n    error {\n      message\n    }\n    organization {\n      id\n      isBillingLeader\n      name\n      orgUserCount {\n        activeUserCount\n        inactiveUserCount\n      }\n      picture\n      tier\n    }\n    team {\n      id\n      name\n      isPaid\n      meetingId\n      isArchived\n      teamMembers(sortBy: \"preferredName\") {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n    }\n  }\n}\n",
  "19150ee62c26ae21ca17a9303b9c8843": "query SuggestMentionableUsersRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...SuggestMentionableUsers_viewer\n    id\n  }\n}\n\nfragment SuggestMentionableUsers_viewer on User {\n  team(teamId: $teamId) {\n    teamMembers(sortBy: \"preferredName\") {\n      id\n      picture\n      preferredName\n    }\n    id\n  }\n}\n",
  "a0c1dcfc093b621a6eee861fa1b751cd": "mutation RemoveGitHubRepoMutation(\n  $githubIntegrationId: ID!\n) {\n  removeGitHubRepo(githubIntegrationId: $githubIntegrationId) {\n    error {\n      message\n    }\n    deletedId\n  }\n}\n",
  "c826ce1764247d3cf5ddfad405efbdeb": "mutation UpdateUserProfileMutation(\n  $updatedUser: UpdateUserProfileInput!\n) {\n  updateUserProfile(updatedUser: $updatedUser) {\n    error {\n      message\n    }\n    user {\n      preferredName\n      picture\n      id\n    }\n    teamMembers {\n      preferredName\n      picture\n      id\n    }\n  }\n}\n",
  "be1aa1dccbf9bca26d1e1c679aec2d25": "mutation SetOrgUserRoleMutation(\n  $orgId: ID!\n  $userId: ID!\n  $role: String\n) {\n  setOrgUserRole(orgId: $orgId, userId: $userId, role: $role) {\n    __typename\n    error {\n      message\n    }\n    ... on SetOrgUserRoleAddedPayload {\n      organization {\n        id\n        isBillingLeader\n        createdAt\n        name\n        orgUserCount {\n          activeUserCount\n          inactiveUserCount\n        }\n        picture\n        creditCard {\n          brand\n          expiry\n          last4\n        }\n        periodStart\n        periodEnd\n        tier\n      }\n      notificationsAdded {\n        __typename\n        type\n        ... on NotifyPromoteToOrgLeader {\n          notificationId: id\n          organization {\n            orgId: id\n            orgName: name\n            id\n          }\n        }\n        ... on NotifyPaymentRejected {\n          notificationId: id\n          organization {\n            orgId: id\n            creditCard {\n              last4\n              brand\n            }\n            id\n          }\n        }\n        ... on NotifyRequestNewUser {\n          notificationId: id\n          inviter {\n            inviterName: preferredName\n            id\n          }\n          inviteeEmail\n          orgId\n          team {\n            teamId: id\n            teamName: name\n            tier\n            id\n          }\n        }\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n    ... on SetOrgUserRoleRemovedPayload {\n      organization {\n        id\n        isBillingLeader\n      }\n      notificationsRemoved {\n        __typename\n        id\n      }\n      updatedOrgMember {\n        user {\n          id\n        }\n        role\n        id\n      }\n    }\n  }\n}\n",
  "f0b836f0b0ec63c87d928ceefe6a246a": "mutation InactivateUserMutation(\n  $userId: ID!\n) {\n  inactivateUser(userId: $userId) {\n    user {\n      inactive\n      id\n    }\n  }\n}\n",
  "8dd803089ff88451595c571c4d7e22b7": "mutation EndNewMeetingMutation(\n  $meetingId: ID!\n) {\n  endNewMeeting(meetingId: $meetingId) {\n    error {\n      message\n    }\n    isKill\n    meeting {\n      __typename\n      id\n    }\n    team {\n      id\n      meetingId\n      newMeeting {\n        __typename\n        id\n      }\n    }\n  }\n}\n",
  "b3fd9548073a08d9b9462b7fe7865a36": "query GitHubReposMenuRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...GitHubRepoListMenu_viewer\n    id\n  }\n}\n\nfragment GitHubRepoListMenu_viewer on User {\n  githubRepos(teamId: $teamId) {\n    nameWithOwner\n    userIds\n    id\n  }\n}\n",
  "e2c8640ff59a6b1a75f7e22a2de972f4": "query TeamIntegrationsRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...ProviderList_viewer\n    id\n  }\n}\n\nfragment ProviderList_viewer on User {\n  providerMap(teamId: $teamId) {\n    GitHubIntegration {\n      ...ProviderRow_providerDetails\n      id\n    }\n    SlackIntegration {\n      ...ProviderRow_providerDetails\n      id\n    }\n    id\n  }\n}\n\nfragment ProviderRow_providerDetails on ProviderRow {\n  accessToken\n  integrationCount\n  userCount\n}\n",
  "08a486c2fd9e5bb1879514e6343ad091": "mutation AddReflectTemplatePromptMutation(\n  $templateId: ID!\n) {\n  addReflectTemplatePrompt(templateId: $templateId) {\n    prompt {\n      id\n      question\n      sortOrder\n      templateId\n    }\n  }\n}\n",
  "4d47f5c2ac38b94d60e0f5b3c4f76a5a": "query MyDashboardTimelineRootQuery(\n  $first: Int!\n  $after: DateTime\n) {\n  viewer {\n    ...MyDashboardTimeline_viewer\n    id\n  }\n}\n\nfragment MyDashboardTimeline_viewer on User {\n  id\n  ...TimelineSuggestedAction_viewer\n  ...TimelineFeedList_viewer\n  ...TimelineRightDrawer_viewer\n}\n\nfragment TimelineSuggestedAction_viewer on User {\n  suggestedActions {\n    __typename\n    ...SuggestedActionInviteYourTeam_suggestedAction\n    ...SuggestedActionTryTheDemo_suggestedAction\n    ...SuggestedActionTryRetroMeeting_suggestedAction\n    ...SuggestedActionTryActionMeeting_suggestedAction\n    ...SuggestedActionCreateNewTeam_suggestedAction\n    id\n  }\n}\n\nfragment TimelineFeedList_viewer on User {\n  timeline(first: $first, after: $after) {\n    edges {\n      cursor\n      node {\n        ...TimelineEvent_timelineEvent\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n\nfragment TimelineRightDrawer_viewer on User {\n  ...TimelineNewFeature_viewer\n}\n\nfragment TimelineNewFeature_viewer on User {\n  newFeature {\n    copy\n    url\n    id\n  }\n}\n\nfragment TimelineEvent_timelineEvent on TimelineEvent {\n  ...TimelineEventJoinedParabol_timelineEvent\n  ...TimelineEventTeamCreated_timelineEvent\n  ...TimelineEventCompletedRetroMeeting_timelineEvent\n  ...TimelineEventCompletedActionMeeting_timelineEvent\n  __typename\n}\n\nfragment TimelineEventJoinedParabol_timelineEvent on TimelineEventJoinedParabol {\n  ...TimelineEventCard_timelineEvent\n  id\n}\n\nfragment TimelineEventTeamCreated_timelineEvent on TimelineEventTeamCreated {\n  ...TimelineEventCard_timelineEvent\n  id\n  team {\n    id\n    isArchived\n    name\n  }\n}\n\nfragment TimelineEventCompletedRetroMeeting_timelineEvent on TimelineEventCompletedRetroMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    meetingNumber\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCompletedActionMeeting_timelineEvent on TimelineEventCompletedActionMeeting {\n  ...TimelineEventCard_timelineEvent\n  id\n  meeting {\n    id\n    createdAt\n    endedAt\n    meetingNumber\n    taskCount\n  }\n  team {\n    name\n    id\n  }\n}\n\nfragment TimelineEventCard_timelineEvent on TimelineEvent {\n  id\n  createdAt\n}\n\nfragment SuggestedActionInviteYourTeam_suggestedAction on SuggestedActionInviteYourTeam {\n  id\n  team {\n    name\n    ...AddTeamMemberModal_team\n    teamMembers {\n      ...AddTeamMemberModal_teamMembers\n      id\n    }\n    id\n  }\n}\n\nfragment SuggestedActionTryTheDemo_suggestedAction on SuggestedActionTryTheDemo {\n  id\n}\n\nfragment SuggestedActionTryRetroMeeting_suggestedAction on SuggestedActionTryRetroMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionTryActionMeeting_suggestedAction on SuggestedActionTryActionMeeting {\n  id\n  team {\n    id\n    name\n  }\n}\n\nfragment SuggestedActionCreateNewTeam_suggestedAction on SuggestedActionCreateNewTeam {\n  id\n}\n\nfragment AddTeamMemberModal_team on Team {\n  id\n}\n\nfragment AddTeamMemberModal_teamMembers on TeamMember {\n  email\n}\n",
  "369ea1d4f470b33b27897cff8b6650fc": "query GitHubIntegrationsRootQuery(\n  $teamId: ID!\n  $service: IntegrationService!\n) {\n  viewer {\n    ...GitHubIntegrations_viewer\n    id\n  }\n}\n\nfragment GitHubIntegrations_viewer on User {\n  integrationProvider(teamId: $teamId, service: $service) {\n    id\n    accessToken\n    providerUserName\n  }\n  githubRepos(teamId: $teamId) {\n    id\n    ...AddGitHubRepo_subbedRepos\n    ...GitHubRepoRow_repo\n  }\n}\n\nfragment AddGitHubRepo_subbedRepos on GitHubIntegration {\n  nameWithOwner\n}\n\nfragment GitHubRepoRow_repo on GitHubIntegration {\n  id\n  adminUserId\n  nameWithOwner\n  teamMembers {\n    id\n    preferredName\n    picture\n  }\n}\n",
  "beaa5bb7b6f90bc3a8cc04848a2d1724": "query TeamSettingsRootQuery(\n  $teamId: ID!\n) {\n  viewer {\n    ...TeamSettings_viewer\n    id\n  }\n}\n\nfragment TeamSettings_viewer on User {\n  team(teamId: $teamId) {\n    ...ArchiveTeamContainer_team\n    isViewerLead: isLead\n    teamId: id\n    teamName: name\n    tier\n    orgId\n    teamMembers(sortBy: \"preferredName\") {\n      teamMemberId: id\n      userId\n      isLead\n      isSelf\n      preferredName\n      id\n    }\n    id\n  }\n}\n\nfragment ArchiveTeamContainer_team on Team {\n  id\n  name\n}\n",
  "2af0b4e0f4e78a1cb0be0d2e39737f09": "mutation CreateUserPicturePutUrlMutation(\n  $contentType: String!\n  $contentLength: Int!\n) {\n  createUserPicturePutUrl(contentType: $contentType, contentLength: $contentLength) {\n    error {\n      message\n    }\n    url\n  }\n}\n",
  "02918ea28b6fefc30b42e80937cb248d": "subscription TeamSubscription {\n  teamSubscription {\n    __typename\n    ... on AcceptTeamInvitationPayload {\n      teamMember {\n        id\n        checkInOrder\n        isLead\n        isCheckedIn\n        isConnected\n        isNotRemoved\n        picture\n        preferredName\n        teamId\n        userId\n      }\n      team {\n        name\n        newMeeting {\n          __typename\n          id\n          facilitatorStageId\n          facilitatorUserId\n          facilitator {\n            id\n            preferredName\n          }\n          meetingNumber\n          meetingType\n          teamId\n          phases {\n            __typename\n            id\n            phaseType\n            stages {\n              __typename\n              id\n              isComplete\n              isNavigable\n              isNavigableByFacilitator\n              ... on NewMeetingTeamMemberStage {\n                teamMemberId\n                teamMember {\n                  meetingMember {\n                    __typename\n                    isCheckedIn\n                    id\n                  }\n                  id\n                  picture\n                  preferredName\n                }\n              }\n            }\n            ... on CheckInPhase {\n              checkInGreeting {\n                content\n                language\n              }\n              checkInQuestion\n            }\n            ... on ReflectPhase {\n              focusedPhaseItemId\n              reflectPrompts {\n                question\n                id\n              }\n            }\n            ... on DiscussPhase {\n              stages {\n                reflectionGroup {\n                  id\n                }\n                sortOrder\n                id\n              }\n            }\n          }\n          viewerMeetingMember {\n            __typename\n            isCheckedIn\n            ... on RetrospectiveMeetingMember {\n              votesRemaining\n            }\n            id\n          }\n          ... on RetrospectiveMeeting {\n            reflectionGroups {\n              id\n              title\n              meetingId\n              meeting {\n                id\n              }\n              retroPhaseItemId\n              phaseItem {\n                id\n              }\n              reflections {\n                id\n                content\n                editorIds\n                isViewerCreator\n                meetingId\n                reflectionGroupId\n                retroReflectionGroup {\n                  id\n                }\n                retroPhaseItemId\n                sortOrder\n                phaseItem {\n                  id\n                }\n              }\n              sortOrder\n              viewerVoteCount\n              voteCount\n              tasks {\n                id\n                agendaId\n                content\n                createdAt\n                createdBy\n                dueDate\n                integration {\n                  service\n                  nameWithOwner\n                  issueNumber\n                }\n                meetingId\n                reflectionGroupId\n                sortOrder\n                status\n                tags\n                updatedAt\n                userId\n                teamId\n                team {\n                  id\n                  name\n                }\n                assignee {\n                  __typename\n                  id\n                  preferredName\n                  ... on TeamMember {\n                    picture\n                  }\n                }\n              }\n            }\n            votesRemaining\n            settings {\n              maxVotesPerGroup\n              totalVotes\n              id\n            }\n          }\n        }\n        id\n      }\n    }\n    ... on AcceptTeamInvitePayload {\n      team {\n        id\n        name\n        isPaid\n        meetingId\n        isArchived\n      }\n      authToken\n      removedNotification {\n        id\n      }\n      user {\n        id\n        email\n        picture\n        preferredName\n        createdAt\n      }\n    }\n    ... on AddReflectTemplatePayload {\n      reflectTemplate {\n        id\n        name\n        teamId\n        prompts {\n          question\n          sortOrder\n          id\n        }\n      }\n    }\n    ... on AddReflectTemplatePromptPayload {\n      prompt {\n        id\n        question\n        sortOrder\n        templateId\n      }\n    }\n    ... on AddTeamPayload {\n      team {\n        id\n        name\n        isPaid\n        meetingId\n        isArchived\n        teamMembers(sortBy: \"preferredName\") {\n          id\n          checkInOrder\n          isLead\n          isCheckedIn\n          isConnected\n          isNotRemoved\n          picture\n          preferredName\n          teamId\n          userId\n        }\n      }\n    }\n    ... on ArchiveTeamPayload {\n      team {\n        id\n        name\n      }\n      notification {\n        id\n        type\n        ...TeamArchived_notification\n      }\n    }\n    ... on AutoGroupReflectionsPayload {\n      meeting {\n        id\n        nextAutoGroupThreshold\n      }\n      reflections {\n        id\n        reflectionGroupId\n        sortOrder\n      }\n      reflectionGroups {\n        title\n        smartTitle\n        id\n      }\n      removedReflectionGroups {\n        id\n      }\n    }\n    ... on CreateReflectionPayload {\n      reflectionGroup {\n        meetingId\n        sortOrder\n        retroPhaseItemId\n        reflections {\n          id\n          content\n          editorIds\n          isViewerCreator\n          meetingId\n          reflectionGroupId\n          retroReflectionGroup {\n            id\n          }\n          retroPhaseItemId\n          sortOrder\n          phaseItem {\n            id\n          }\n        }\n        tasks {\n          id\n        }\n        id\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigableByFacilitator\n      }\n    }\n    ... on DragDiscussionTopicPayload {\n      stage {\n        id\n        sortOrder\n      }\n      meeting {\n        __typename\n        id\n      }\n    }\n    ... on EditReflectionPayload {\n      editorId\n      isEditing\n      phaseItemId\n    }\n    ... on EndDraggingReflectionPayload {\n      dragId\n      meeting {\n        id\n        nextAutoGroupThreshold\n        teamId\n      }\n      reflection {\n        id\n        content\n        editorIds\n        isViewerCreator\n        meetingId\n        reflectionGroupId\n        retroReflectionGroup {\n          id\n        }\n        retroPhaseItemId\n        sortOrder\n        phaseItem {\n          id\n        }\n      }\n      reflectionGroup {\n        id\n        meetingId\n        sortOrder\n        reflections {\n          id\n          content\n          editorIds\n          isViewerCreator\n          meetingId\n          reflectionGroupId\n          retroReflectionGroup {\n            id\n          }\n          retroPhaseItemId\n          sortOrder\n          phaseItem {\n            id\n          }\n        }\n        title\n        tasks {\n          id\n        }\n      }\n      oldReflectionGroup {\n        id\n        title\n      }\n      dropTargetType\n      dropTargetId\n      userId\n    }\n    ... on EndMeetingPayload {\n      team {\n        id\n        activeFacilitator\n        meetingId\n        meetingPhase\n        meetingPhaseItem\n        facilitatorPhase\n        facilitatorPhaseItem\n      }\n      meeting {\n        id\n      }\n    }\n    ... on KillMeetingPayload {\n      team {\n        activeFacilitator\n        facilitatorPhase\n        facilitatorPhaseItem\n        meetingId\n        meetingPhase\n        meetingPhaseItem\n        newMeeting {\n          __typename\n          id\n        }\n        id\n      }\n    }\n    ... on EndNewMeetingPayload {\n      isKill\n      meeting {\n        __typename\n        id\n      }\n      team {\n        id\n        meetingId\n        newMeeting {\n          __typename\n          id\n        }\n      }\n    }\n    ... on MoveMeetingPayload {\n      team {\n        facilitatorPhase\n        facilitatorPhaseItem\n        meetingPhase\n        meetingPhaseItem\n        id\n      }\n    }\n    ... on MoveReflectTemplatePromptPayload {\n      prompt {\n        sortOrder\n        templateId\n        id\n      }\n    }\n    ... on NavigateMeetingPayload {\n      meeting {\n        __typename\n        id\n        facilitatorStageId\n      }\n      oldFacilitatorStage {\n        __typename\n        id\n        isComplete\n      }\n      phaseComplete {\n        reflect {\n          emptyReflectionGroupIds\n        }\n        group {\n          meeting {\n            reflectionGroups {\n              id\n              title\n              meetingId\n              meeting {\n                id\n              }\n              retroPhaseItemId\n              phaseItem {\n                id\n              }\n              reflections {\n                id\n              }\n              sortOrder\n              viewerVoteCount\n              voteCount\n            }\n            id\n          }\n        }\n        vote {\n          meeting {\n            phases {\n              __typename\n              id\n              ... on DiscussPhase {\n                phaseType\n                stages {\n                  id\n                  isComplete\n                  isNavigable\n                  isNavigableByFacilitator\n                  meetingId\n                  phaseType\n                  reflectionGroup {\n                    id\n                    tasks {\n                      id\n                    }\n                  }\n                  sortOrder\n                }\n              }\n            }\n            id\n          }\n        }\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n    ... on NewMeetingCheckInPayload {\n      meeting {\n        __typename\n        ... on RetrospectiveMeeting {\n          votesRemaining\n        }\n        id\n      }\n      meetingMember {\n        __typename\n        isCheckedIn\n        id\n      }\n    }\n    ... on PromoteFacilitatorPayload {\n      team {\n        activeFacilitator\n        id\n      }\n      disconnectedFacilitator {\n        preferredName\n        id\n      }\n      newFacilitator {\n        preferredName\n        userId\n        id\n      }\n    }\n    ... on PromoteNewMeetingFacilitatorPayload {\n      meeting {\n        __typename\n        facilitatorUserId\n        facilitator {\n          id\n          preferredName\n        }\n        id\n      }\n      oldFacilitator {\n        isConnected\n        preferredName\n        id\n      }\n    }\n    ... on PromoteToTeamLeadPayload {\n      team {\n        isLead\n        id\n      }\n      oldLeader {\n        isLead\n        id\n      }\n      newLeader {\n        isLead\n        id\n      }\n    }\n    ... on RemoveReflectionPayload {\n      meeting {\n        __typename\n        id\n      }\n      reflection {\n        id\n        reflectionGroupId\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigableByFacilitator\n      }\n    }\n    ... on RemoveReflectTemplatePayload {\n      reflectTemplate {\n        id\n      }\n      retroMeetingSettings {\n        selectedTemplateId\n        id\n      }\n    }\n    ... on RemoveReflectTemplatePromptPayload {\n      prompt {\n        id\n      }\n    }\n    ... on RemoveTeamMemberPayload {\n      updatedTasks {\n        id\n      }\n      removedNotifications {\n        __typename\n        id\n      }\n      kickOutNotification {\n        id\n        type\n        notificationId: id\n        team {\n          id\n          name\n        }\n      }\n      team {\n        id\n        newMeeting {\n          __typename\n          phases {\n            __typename\n            stages {\n              __typename\n              id\n            }\n            id\n          }\n          id\n        }\n      }\n      teamMember {\n        userId\n        id\n      }\n    }\n    ... on RemoveOrgUserPayload {\n      teams {\n        id\n        newMeeting {\n          __typename\n          id\n          facilitatorStageId\n          facilitatorUserId\n          facilitator {\n            id\n            preferredName\n          }\n          meetingNumber\n          meetingType\n          teamId\n          phases {\n            __typename\n            id\n            phaseType\n            stages {\n              __typename\n              id\n              isComplete\n              isNavigable\n              isNavigableByFacilitator\n              ... on NewMeetingTeamMemberStage {\n                teamMemberId\n                teamMember {\n                  meetingMember {\n                    __typename\n                    isCheckedIn\n                    id\n                  }\n                  id\n                  picture\n                  preferredName\n                }\n              }\n            }\n            ... on CheckInPhase {\n              checkInGreeting {\n                content\n                language\n              }\n              checkInQuestion\n            }\n            ... on ReflectPhase {\n              focusedPhaseItemId\n              reflectPrompts {\n                question\n                id\n              }\n            }\n            ... on DiscussPhase {\n              stages {\n                reflectionGroup {\n                  id\n                }\n                sortOrder\n                id\n              }\n            }\n          }\n          viewerMeetingMember {\n            __typename\n            isCheckedIn\n            ... on RetrospectiveMeetingMember {\n              votesRemaining\n            }\n            id\n          }\n          ... on RetrospectiveMeeting {\n            reflectionGroups {\n              id\n              title\n              meetingId\n              meeting {\n                id\n              }\n              retroPhaseItemId\n              phaseItem {\n                id\n              }\n              reflections {\n                id\n                content\n                editorIds\n                isViewerCreator\n                meetingId\n                reflectionGroupId\n                retroReflectionGroup {\n                  id\n                }\n                retroPhaseItemId\n                sortOrder\n                phaseItem {\n                  id\n                }\n              }\n              sortOrder\n              viewerVoteCount\n              voteCount\n              tasks {\n                id\n                agendaId\n                content\n                createdAt\n                createdBy\n                dueDate\n                integration {\n                  service\n                  nameWithOwner\n                  issueNumber\n                }\n                meetingId\n                reflectionGroupId\n                sortOrder\n                status\n                tags\n                updatedAt\n                userId\n                teamId\n                team {\n                  id\n                  name\n                }\n                assignee {\n                  __typename\n                  id\n                  preferredName\n                  ... on TeamMember {\n                    picture\n                  }\n                }\n              }\n            }\n            votesRemaining\n            settings {\n              maxVotesPerGroup\n              totalVotes\n              id\n            }\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n    ... on RenameReflectTemplatePayload {\n      reflectTemplate {\n        name\n        id\n      }\n    }\n    ... on RenameReflectTemplatePromptPayload {\n      prompt {\n        question\n        id\n      }\n    }\n    ... on RequestFacilitatorPayload {\n      requestor {\n        id\n        preferredName\n      }\n    }\n    ... on SelectRetroTemplatePayload {\n      retroMeetingSettings {\n        id\n        selectedTemplateId\n      }\n    }\n    ... on SetPhaseFocusPayload {\n      reflectPhase {\n        focusedPhaseItemId\n        id\n      }\n    }\n    ... on StartDraggingReflectionPayload {\n      meetingId\n      reflectionId\n      dragContext {\n        id\n        dragCoords {\n          x\n          y\n        }\n        dragUserId\n        dragUser {\n          id\n          preferredName\n        }\n      }\n      teamId\n    }\n    ... on StartMeetingPayload {\n      team {\n        checkInGreeting {\n          content\n          language\n        }\n        checkInQuestion\n        id\n        name\n        meetingId\n        activeFacilitator\n        facilitatorPhase\n        facilitatorPhaseItem\n        meetingPhase\n        meetingPhaseItem\n      }\n    }\n    ... on StartNewMeetingPayload {\n      error {\n        title\n        message\n      }\n      team {\n        id\n        meetingId\n        newMeeting {\n          __typename\n          id\n          facilitatorStageId\n          facilitatorUserId\n          facilitator {\n            id\n            preferredName\n          }\n          meetingNumber\n          meetingType\n          teamId\n          phases {\n            __typename\n            id\n            phaseType\n            stages {\n              __typename\n              id\n              isComplete\n              isNavigable\n              isNavigableByFacilitator\n              ... on NewMeetingTeamMemberStage {\n                teamMemberId\n                teamMember {\n                  meetingMember {\n                    __typename\n                    isCheckedIn\n                    id\n                  }\n                  id\n                  picture\n                  preferredName\n                }\n              }\n            }\n            ... on CheckInPhase {\n              checkInGreeting {\n                content\n                language\n              }\n              checkInQuestion\n            }\n            ... on ReflectPhase {\n              focusedPhaseItemId\n              reflectPrompts {\n                question\n                id\n              }\n            }\n            ... on DiscussPhase {\n              stages {\n                reflectionGroup {\n                  id\n                }\n                sortOrder\n                id\n              }\n            }\n          }\n          viewerMeetingMember {\n            __typename\n            isCheckedIn\n            ... on RetrospectiveMeetingMember {\n              votesRemaining\n            }\n            id\n          }\n          ... on RetrospectiveMeeting {\n            reflectionGroups {\n              id\n              title\n              meetingId\n              meeting {\n                id\n              }\n              retroPhaseItemId\n              phaseItem {\n                id\n              }\n              reflections {\n                id\n                content\n                editorIds\n                isViewerCreator\n                meetingId\n                reflectionGroupId\n                retroReflectionGroup {\n                  id\n                }\n                retroPhaseItemId\n                sortOrder\n                phaseItem {\n                  id\n                }\n              }\n              sortOrder\n              viewerVoteCount\n              voteCount\n              tasks {\n                id\n                agendaId\n                content\n                createdAt\n                createdBy\n                dueDate\n                integration {\n                  service\n                  nameWithOwner\n                  issueNumber\n                }\n                meetingId\n                reflectionGroupId\n                sortOrder\n                status\n                tags\n                updatedAt\n                userId\n                teamId\n                team {\n                  id\n                  name\n                }\n                assignee {\n                  __typename\n                  id\n                  preferredName\n                  ... on TeamMember {\n                    picture\n                  }\n                }\n              }\n            }\n            votesRemaining\n            settings {\n              maxVotesPerGroup\n              totalVotes\n              id\n            }\n          }\n        }\n      }\n    }\n    ... on UpdateCheckInQuestionPayload {\n      team {\n        checkInQuestion\n        id\n      }\n    }\n    ... on UpdateNewCheckInQuestionPayload {\n      meeting {\n        __typename\n        phases {\n          __typename\n          ... on CheckInPhase {\n            checkInQuestion\n          }\n          id\n        }\n        id\n      }\n    }\n    ... on UpdateCreditCardPayload {\n      teamsUpdated {\n        isPaid\n        updatedAt\n        id\n      }\n    }\n    ... on UpdateDragLocationPayload {\n      coords {\n        x\n        y\n      }\n      clientHeight\n      clientWidth\n      sourceId\n      targetId\n      targetOffset {\n        x\n        y\n      }\n      userId\n    }\n    ... on UpdateReflectionContentPayload {\n      meeting {\n        __typename\n        id\n      }\n      reflection {\n        id\n        content\n      }\n    }\n    ... on UpdateReflectionGroupTitlePayload {\n      reflectionGroup {\n        title\n        id\n      }\n    }\n    ... on UpdateTeamNamePayload {\n      team {\n        name\n        id\n      }\n    }\n    ... on UpgradeToProPayload {\n      teams {\n        isPaid\n        tier\n        id\n      }\n    }\n    ... on VoteForReflectionGroupPayload {\n      error {\n        message\n        title\n      }\n      meeting {\n        votesRemaining\n        id\n      }\n      meetingMember {\n        votesRemaining\n        id\n      }\n      reflectionGroup {\n        viewerVoteCount\n        voteCount\n        id\n      }\n      unlockedStages {\n        __typename\n        id\n        isNavigable\n        isNavigableByFacilitator\n      }\n    }\n  }\n}\n\nfragment TeamArchived_notification on NotifyTeamArchived {\n  notificationId: id\n  team {\n    teamName: name\n    id\n  }\n}\n"
}